<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4290px" preserveAspectRatio="none" style="width:7720px;height:4290px;" version="1.1" viewBox="0 0 7720 4290" width="7720px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ap1055zl0dzs" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[706371339d94ae8c95bd67c125269c47]
cluster std--><polygon fill="#FFFFFF" filter="url(#f1ap1055zl0dzs)" points="629.5,78,657.5,78,664.5,103.0679,1247.5,103.0679,1247.5,513,629.5,513,629.5,78" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="629.5" x2="664.5" y1="103.0679" y2="103.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="22" x="633.5" y="94.9659">std</text><!--MD5=[d9a159e51a34fd2e17c00b8b5004ee96]
cluster GL--><polygon fill="#FFFFFF" filter="url(#f1ap1055zl0dzs)" points="2068.5,24.5,2092.5,24.5,2099.5,49.5679,2228.5,49.5679,2228.5,226.5,2068.5,226.5,2068.5,24.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="2068.5" x2="2099.5" y1="49.5679" y2="49.5679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="18" x="2072.5" y="41.4659">GL</text><!--MD5=[053dbf269fe48ceec30f5d5a4e5ab54b]
cluster GL.Enum--><polygon fill="#FFFFFF" filter="url(#f1ap1055zl0dzs)" points="2092.5,70.5,2138.5,70.5,2145.5,95.5679,2204.5,95.5679,2204.5,202.5,2092.5,202.5,2092.5,70.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="2092.5" x2="2145.5" y1="95.5679" y2="95.5679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="40" x="2096.5" y="87.4659">Enum</text><!--MD5=[0500f9bd0dbb3b6149726095ffeb6ab1]
class std.hashMaterial::ID--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="62.9819" id="std.hashMaterial::ID" style="stroke: #A80036; stroke-width: 1.5;" width="277" x="646" y="116"/><ellipse cx="700.75" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M703.7188,137.6406 Q703.1406,137.9375 702.5,138.0781 Q701.8594,138.2344 701.1563,138.2344 Q698.6563,138.2344 697.3281,136.5938 Q696.0156,134.9375 696.0156,131.8125 Q696.0156,128.6875 697.3281,127.0313 Q698.6563,125.375 701.1563,125.375 Q701.8594,125.375 702.5,125.5313 Q703.1563,125.6875 703.7188,125.9844 L703.7188,128.7031 Q703.0938,128.125 702.5,127.8594 Q701.9063,127.5781 701.2813,127.5781 Q699.9375,127.5781 699.25,128.6563 Q698.5625,129.7188 698.5625,131.8125 Q698.5625,133.9063 699.25,134.9844 Q699.9375,136.0469 701.2813,136.0469 Q701.9063,136.0469 702.5,135.7813 Q703.0938,135.5 703.7188,134.9219 L703.7188,137.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="721.25" y="136.656">hashMaterial::ID</text><rect fill="#FFFFFF" height="18.3441" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="862" y="113"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="863" y="126.8281">template&lt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="647" x2="922" y1="148" y2="148"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="647" x2="922" y1="156" y2="156"/><ellipse cx="657" cy="167" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="666" y="171.7589">operator()(const Material::ID&amp; id) : size_t {query}</text><!--MD5=[826c135f66fc0c8e4f6502d065b64a91]
class std.hashVectorXZ--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="62.9819" id="std.hashVectorXZ" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="958" y="116"/><ellipse cx="1018.75" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1021.7188,137.6406 Q1021.1406,137.9375 1020.5,138.0781 Q1019.8594,138.2344 1019.1563,138.2344 Q1016.6563,138.2344 1015.3281,136.5938 Q1014.0156,134.9375 1014.0156,131.8125 Q1014.0156,128.6875 1015.3281,127.0313 Q1016.6563,125.375 1019.1563,125.375 Q1019.8594,125.375 1020.5,125.5313 Q1021.1563,125.6875 1021.7188,125.9844 L1021.7188,128.7031 Q1021.0938,128.125 1020.5,127.8594 Q1019.9063,127.5781 1019.2813,127.5781 Q1017.9375,127.5781 1017.25,128.6563 Q1016.5625,129.7188 1016.5625,131.8125 Q1016.5625,133.9063 1017.25,134.9844 Q1017.9375,136.0469 1019.2813,136.0469 Q1019.9063,136.0469 1020.5,135.7813 Q1021.0938,135.5 1021.7188,134.9219 L1021.7188,137.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="1039.25" y="136.656">hashVectorXZ</text><rect fill="#FFFFFF" height="18.3441" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="1170" y="113"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="1171" y="126.8281">template&lt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="959" x2="1230" y1="148" y2="148"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="959" x2="1230" y1="156" y2="156"/><ellipse cx="969" cy="167" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="978" y="171.7589">operator()(const VectorXZ&amp; vect) : size_t {query}</text><!--MD5=[96b54ad58c44531cbcd3c9fd3c369948]
class std.hashsf::Vector3i--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="62.9819" id="std.hashsf::Vector3i" style="stroke: #A80036; stroke-width: 1.5;" width="285" x="646" y="434"/><ellipse cx="706.75" cy="450" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M709.7188,455.6406 Q709.1406,455.9375 708.5,456.0781 Q707.8594,456.2344 707.1563,456.2344 Q704.6563,456.2344 703.3281,454.5938 Q702.0156,452.9375 702.0156,449.8125 Q702.0156,446.6875 703.3281,445.0313 Q704.6563,443.375 707.1563,443.375 Q707.8594,443.375 708.5,443.5313 Q709.1563,443.6875 709.7188,443.9844 L709.7188,446.7031 Q709.0938,446.125 708.5,445.8594 Q707.9063,445.5781 707.2813,445.5781 Q705.9375,445.5781 705.25,446.6563 Q704.5625,447.7188 704.5625,449.8125 Q704.5625,451.9063 705.25,452.9844 Q705.9375,454.0469 707.2813,454.0469 Q707.9063,454.0469 708.5,453.7813 Q709.0938,453.5 709.7188,452.9219 L709.7188,455.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="727.25" y="454.656">hashsf::Vector3i</text><rect fill="#FFFFFF" height="18.3441" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="870" y="431"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="871" y="444.8281">template&lt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="647" x2="930" y1="466" y2="466"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="647" x2="930" y1="474" y2="474"/><ellipse cx="657" cy="485" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="666" y="489.7589">operator()(const sf::Vector3i&amp; vect) : size_t {query}</text><!--MD5=[4483c44f5e25ec3ab100f2c853825ad2]
class GL.Enum.Texture--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="GL.Enum.Texture" style="stroke: #A80036; stroke-width: 1.5;" width="80" x="2108.5" y="108.5"/><ellipse cx="2125.75" cy="124.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2129.8594,130.5 L2122.1406,130.5 L2122.1406,118.1094 L2129.8594,118.1094 L2129.8594,120.2656 L2124.5938,120.2656 L2124.5938,122.9375 L2129.3594,122.9375 L2129.3594,125.0938 L2124.5938,125.0938 L2124.5938,128.3438 L2129.8594,128.3438 L2129.8594,130.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="2140.25" y="129.156">Texture</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2109.5" x2="2187.5" y1="140.5" y2="140.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="2114.5" y="156.2589">Tex2D</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2114.5" y="171.2408">TexCubeMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2109.5" x2="2187.5" y1="178.4638" y2="178.4638"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="272.7283" id="Application" style="stroke: #A80036; stroke-width: 1.5;" width="289" x="1764" y="11"/><ellipse cx="1873.25" cy="27" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1876.2188,32.6406 Q1875.6406,32.9375 1875,33.0781 Q1874.3594,33.2344 1873.6563,33.2344 Q1871.1563,33.2344 1869.8281,31.5938 Q1868.5156,29.9375 1868.5156,26.8125 Q1868.5156,23.6875 1869.8281,22.0313 Q1871.1563,20.375 1873.6563,20.375 Q1874.3594,20.375 1875,20.5313 Q1875.6563,20.6875 1876.2188,20.9844 L1876.2188,23.7031 Q1875.5938,23.125 1875,22.8594 Q1874.4063,22.5781 1873.7813,22.5781 Q1872.4375,22.5781 1871.75,23.6563 Q1871.0625,24.7188 1871.0625,26.8125 Q1871.0625,28.9063 1871.75,29.9844 Q1872.4375,31.0469 1873.7813,31.0469 Q1874.4063,31.0469 1875,30.7813 Q1875.5938,30.5 1876.2188,29.9219 L1876.2188,32.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="1893.75" y="31.656">Application</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1765" x2="2052" y1="43" y2="43"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="51"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1784" y="58.7589">m_camera : Camera</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="65.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1784" y="73.7408">m_context : Context</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="80.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1784" y="88.7227">m_masterRenderer : RenderMaster</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="95.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1784" y="103.7046">m_isPopState : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="110.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1784" y="118.6865">m_config : const Config&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="125.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="1784" y="133.6684">m_states : std::vector&lt;std::unique_ptr&lt;StateBase&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1765" x2="2052" y1="140.8913" y2="140.8913"/><ellipse cx="1775" cy="151.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1784" y="156.6502">Application(const Config&amp; config)</text><ellipse cx="1775" cy="166.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1784" y="171.6321">getCamera() : Camera&amp;</text><ellipse cx="1775" cy="181.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1784" y="186.614">getWindow() : sf::Window&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1772" y="193.837"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1784" y="201.5959">handleEvents() : void</text><ellipse cx="1775" cy="211.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1784" y="216.5778">popState() : void</text><ellipse cx="1775" cy="226.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1784" y="231.5597">pushState(Args&amp;&amp; ... args) : void</text><ellipse cx="1775" cy="241.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1784" y="246.5416">runLoop() : void</text><ellipse cx="1775" cy="256.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1784" y="261.5235">turnOffMouse() : void</text><ellipse cx="1775" cy="271.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="1784" y="276.5053">turnOnMouse() : void</text><!--MD5=[a16208eafd77a9f912ce61d17496cf74]
class Array2D--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="122.9094" id="Array2D" style="stroke: #A80036; stroke-width: 1.5;" width="267" x="4199" y="2952.5"/><ellipse cx="4214" cy="2968.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4216.9688,2974.1406 Q4216.3906,2974.4375 4215.75,2974.5781 Q4215.1094,2974.7344 4214.4063,2974.7344 Q4211.9063,2974.7344 4210.5781,2973.0938 Q4209.2656,2971.4375 4209.2656,2968.3125 Q4209.2656,2965.1875 4210.5781,2963.5313 Q4211.9063,2961.875 4214.4063,2961.875 Q4215.1094,2961.875 4215.75,2962.0313 Q4216.4063,2962.1875 4216.9688,2962.4844 L4216.9688,2965.2031 Q4216.3438,2964.625 4215.75,2964.3594 Q4215.1563,2964.0781 4214.5313,2964.0781 Q4213.1875,2964.0781 4212.5,2965.1563 Q4211.8125,2966.2188 4211.8125,2968.3125 Q4211.8125,2970.4063 4212.5,2971.4844 Q4213.1875,2972.5469 4214.5313,2972.5469 Q4215.1563,2972.5469 4215.75,2972.2813 Q4216.3438,2972 4216.9688,2971.4219 L4216.9688,2974.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="4228" y="2973.156">Array2D</text><rect fill="#FFFFFF" height="18.3441" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="186" x="4283" y="2949.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="4284" y="2963.3281">template&lt;typename T, int WIDTH&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4200" x2="4465" y1="2984.5" y2="2984.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4207" y="2992.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4219" y="3000.2589">m_array : array&lt;T, WIDTH* WIDTH&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4200" x2="4465" y1="3007.4819" y2="3007.4819"/><ellipse cx="4210" cy="3018.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4219" y="3023.2408">get(int x, int z) : T&amp;</text><ellipse cx="4210" cy="3033.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="4219" y="3038.2227">get(int x, int z) : T&amp; {query}</text><ellipse cx="4210" cy="3048.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4219" y="3053.2046">getMaxValue() : T&amp;</text><ellipse cx="4210" cy="3063.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4219" y="3068.1865">setAll(T val) : void</text><!--MD5=[5fab868553e5d40aa8589cca3014e00d]
class BasicShader--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="BasicShader" style="stroke: #A80036; stroke-width: 1.5;" width="409" x="4593" y="3611"/><ellipse cx="4758.25" cy="3627" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4761.2188,3632.6406 Q4760.6406,3632.9375 4760,3633.0781 Q4759.3594,3633.2344 4758.6563,3633.2344 Q4756.1563,3633.2344 4754.8281,3631.5938 Q4753.5156,3629.9375 4753.5156,3626.8125 Q4753.5156,3623.6875 4754.8281,3622.0313 Q4756.1563,3620.375 4758.6563,3620.375 Q4759.3594,3620.375 4760,3620.5313 Q4760.6563,3620.6875 4761.2188,3620.9844 L4761.2188,3623.7031 Q4760.5938,3623.125 4760,3622.8594 Q4759.4063,3622.5781 4758.7813,3622.5781 Q4757.4375,3622.5781 4756.75,3623.6563 Q4756.0625,3624.7188 4756.0625,3626.8125 Q4756.0625,3628.9063 4756.75,3629.9844 Q4757.4375,3631.0469 4758.7813,3631.0469 Q4759.4063,3631.0469 4760,3630.7813 Q4760.5938,3630.5 4761.2188,3629.9219 L4761.2188,3632.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="4778.75" y="3631.656">BasicShader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4594" x2="5001" y1="3643" y2="3643"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4601" y="3651"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4613" y="3658.7589">m_locationModelMatrix : GLuint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4601" y="3665.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4613" y="3673.7408">m_locationProjectionViewMatrix : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4594" x2="5001" y1="3680.9638" y2="3680.9638"/><ellipse cx="4604" cy="3691.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="4613" y="3696.7227">BasicShader(const std::string&amp; vertexFile, const std::string&amp; fragmentFile)</text><polygon fill="#FFFF44" points="4604,3701.9457,4608,3705.9457,4604,3709.9457,4600,3705.9457" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4613" y="3711.7046">getUniforms() : void</text><ellipse cx="4604" cy="3721.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4613" y="3726.6865">loadModelMatrix(const glm::mat4&amp; matrix) : void</text><ellipse cx="4604" cy="3736.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="4613" y="3741.6684">loadProjectionViewMatrix(const glm::mat4&amp; pvMatrix) : void</text><!--MD5=[a5684e50ae7bb9943ffe65550e7fc0f8]
class BasicTexture--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="152.8732" id="BasicTexture" style="stroke: #A80036; stroke-width: 1.5;" width="270" x="6998.5" y="1032.5"/><ellipse cx="7092.75" cy="1048.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7095.7188,1054.1406 Q7095.1406,1054.4375 7094.5,1054.5781 Q7093.8594,1054.7344 7093.1563,1054.7344 Q7090.6563,1054.7344 7089.3281,1053.0938 Q7088.0156,1051.4375 7088.0156,1048.3125 Q7088.0156,1045.1875 7089.3281,1043.5313 Q7090.6563,1041.875 7093.1563,1041.875 Q7093.8594,1041.875 7094.5,1042.0313 Q7095.1563,1042.1875 7095.7188,1042.4844 L7095.7188,1045.2031 Q7095.0938,1044.625 7094.5,1044.3594 Q7093.9063,1044.0781 7093.2813,1044.0781 Q7091.9375,1044.0781 7091.25,1045.1563 Q7090.5625,1046.2188 7090.5625,1048.3125 Q7090.5625,1050.4063 7091.25,1051.4844 Q7091.9375,1052.5469 7093.2813,1052.5469 Q7093.9063,1052.5469 7094.5,1052.2813 Q7095.0938,1052 7095.7188,1051.4219 L7095.7188,1054.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="7113.25" y="1053.156">BasicTexture</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6999.5" x2="7267.5" y1="1064.5" y2="1064.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7006.5" y="1072.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="7018.5" y="1080.2589">m_id : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6999.5" x2="7267.5" y1="1087.4819" y2="1087.4819"/><ellipse cx="7009.5" cy="1098.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="7018.5" y="1103.2408">BasicTexture()</text><ellipse cx="7009.5" cy="1113.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="7018.5" y="1118.2227">BasicTexture(const std::string&amp; file)</text><ellipse cx="7009.5" cy="1128.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="7018.5" y="1133.2046">~BasicTexture()</text><ellipse cx="7009.5" cy="1143.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="7018.5" y="1148.1865">bindTexture() : void {query}</text><ellipse cx="7009.5" cy="1158.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="7018.5" y="1163.1684">loadFromFile(const std::string&amp; file) : void</text><ellipse cx="7009.5" cy="1173.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="7018.5" y="1178.1502">loadFromImage(const sf::Image&amp; image) : void</text><!--MD5=[c4abeb57a02df4256efc2a1795ff21a0]
class BlockData--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="BlockData" style="stroke: #A80036; stroke-width: 1.5;" width="248" x="6502.5" y="1448"/><ellipse cx="6593.75" cy="1464" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6596.7188,1469.6406 Q6596.1406,1469.9375 6595.5,1470.0781 Q6594.8594,1470.2344 6594.1563,1470.2344 Q6591.6563,1470.2344 6590.3281,1468.5938 Q6589.0156,1466.9375 6589.0156,1463.8125 Q6589.0156,1460.6875 6590.3281,1459.0313 Q6591.6563,1457.375 6594.1563,1457.375 Q6594.8594,1457.375 6595.5,1457.5313 Q6596.1563,1457.6875 6596.7188,1457.9844 L6596.7188,1460.7031 Q6596.0938,1460.125 6595.5,1459.8594 Q6594.9063,1459.5781 6594.2813,1459.5781 Q6592.9375,1459.5781 6592.25,1460.6563 Q6591.5625,1461.7188 6591.5625,1463.8125 Q6591.5625,1465.9063 6592.25,1466.9844 Q6592.9375,1468.0469 6594.2813,1468.0469 Q6594.9063,1468.0469 6595.5,1467.7813 Q6596.0938,1467.5 6596.7188,1466.9219 L6596.7188,1469.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="6614.25" y="1468.656">BlockData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6503.5" x2="6749.5" y1="1480" y2="1480"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6510.5" y="1488"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6522.5" y="1495.7589">m_data : BlockDataHolder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6503.5" x2="6749.5" y1="1502.9819" y2="1502.9819"/><ellipse cx="6513.5" cy="1513.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="6522.5" y="1518.7408">BlockData(const std::string&amp; fileName)</text><ellipse cx="6513.5" cy="1528.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="6522.5" y="1533.7227">getBlockData() : BlockDataHolder&amp; {query}</text><!--MD5=[0537bc7d3d5de0a8120db6b6e1be60df]
class BlockDatabase--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="BlockDatabase" style="stroke: #A80036; stroke-width: 1.5;" width="294" x="7186.5" y="1425.5"/><ellipse cx="7287.25" cy="1441.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7290.2188,1447.1406 Q7289.6406,1447.4375 7289,1447.5781 Q7288.3594,1447.7344 7287.6563,1447.7344 Q7285.1563,1447.7344 7283.8281,1446.0938 Q7282.5156,1444.4375 7282.5156,1441.3125 Q7282.5156,1438.1875 7283.8281,1436.5313 Q7285.1563,1434.875 7287.6563,1434.875 Q7288.3594,1434.875 7289,1435.0313 Q7289.6563,1435.1875 7290.2188,1435.4844 L7290.2188,1438.2031 Q7289.5938,1437.625 7289,1437.3594 Q7288.4063,1437.0781 7287.7813,1437.0781 Q7286.4375,1437.0781 7285.75,1438.1563 Q7285.0625,1439.2188 7285.0625,1441.3125 Q7285.0625,1443.4063 7285.75,1444.4844 Q7286.4375,1445.5469 7287.7813,1445.5469 Q7288.4063,1445.5469 7289,1445.2813 Q7289.5938,1445 7290.2188,1444.4219 L7290.2188,1447.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="7307.75" y="1446.156">BlockDatabase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7187.5" x2="7479.5" y1="1457.5" y2="1457.5"/><ellipse cx="7197.5" cy="1468.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="7206.5" y="1473.2589">textureAtlas : TextureAtlas</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7187.5" x2="7479.5" y1="1480.4819" y2="1480.4819"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7194.5" y="1488.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="7206.5" y="1496.2408">BlockDatabase()</text><ellipse cx="7197.5" cy="1506.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="7206.5" y="1511.2227">getData(BlockId id) : BlockData&amp; {query}</text><ellipse cx="7197.5" cy="1521.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="116" x="7206.5" y="1526.2046">get() : BlockDatabase&amp;</text><ellipse cx="7197.5" cy="1536.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="7206.5" y="1541.1865">getBlock(BlockId id) : BlockType&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7194.5" y="1548.4094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="7206.5" y="1556.1684">,(unsigned) : std::array&lt;std::unique_ptr&lt;BlockType&gt;</text><!--MD5=[c136c2c6667a1a1839c9fa56490f2b36]
class BlockType--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="BlockType" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="6453.5" y="1055"/><ellipse cx="6533.75" cy="1071" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6536.7188,1076.6406 Q6536.1406,1076.9375 6535.5,1077.0781 Q6534.8594,1077.2344 6534.1563,1077.2344 Q6531.6563,1077.2344 6530.3281,1075.5938 Q6529.0156,1073.9375 6529.0156,1070.8125 Q6529.0156,1067.6875 6530.3281,1066.0313 Q6531.6563,1064.375 6534.1563,1064.375 Q6534.8594,1064.375 6535.5,1064.5313 Q6536.1563,1064.6875 6536.7188,1064.9844 L6536.7188,1067.7031 Q6536.0938,1067.125 6535.5,1066.8594 Q6534.9063,1066.5781 6534.2813,1066.5781 Q6532.9375,1066.5781 6532.25,1067.6563 Q6531.5625,1068.7188 6531.5625,1070.8125 Q6531.5625,1072.9063 6532.25,1073.9844 Q6532.9375,1075.0469 6534.2813,1075.0469 Q6534.9063,1075.0469 6535.5,1074.7813 Q6536.0938,1074.5 6536.7188,1073.9219 L6536.7188,1076.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="6554.25" y="1075.656">BlockType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6454.5" x2="6678.5" y1="1087" y2="1087"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6461.5" y="1095"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="6473.5" y="1102.7589">m_data : BlockData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6454.5" x2="6678.5" y1="1109.9819" y2="1109.9819"/><ellipse cx="6464.5" cy="1120.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6473.5" y="1125.7408">BlockType(const std::string&amp; fileName)</text><ellipse cx="6464.5" cy="1135.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="6473.5" y="1140.7227">~BlockType()</text><ellipse cx="6464.5" cy="1150.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6473.5" y="1155.7046">getData() : BlockData&amp; {query}</text><!--MD5=[452be1aaf8b94e2bc4204d466ef769a4]
class Camera--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="242.7645" id="Camera" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="1635" y="344"/><ellipse cx="1744.75" cy="360" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1747.7188,365.6406 Q1747.1406,365.9375 1746.5,366.0781 Q1745.8594,366.2344 1745.1563,366.2344 Q1742.6563,366.2344 1741.3281,364.5938 Q1740.0156,362.9375 1740.0156,359.8125 Q1740.0156,356.6875 1741.3281,355.0313 Q1742.6563,353.375 1745.1563,353.375 Q1745.8594,353.375 1746.5,353.5313 Q1747.1563,353.6875 1747.7188,353.9844 L1747.7188,356.7031 Q1747.0938,356.125 1746.5,355.8594 Q1745.9063,355.5781 1745.2813,355.5781 Q1743.9375,355.5781 1743.25,356.6563 Q1742.5625,357.7188 1742.5625,359.8125 Q1742.5625,361.9063 1743.25,362.9844 Q1743.9375,364.0469 1745.2813,364.0469 Q1745.9063,364.0469 1746.5,363.7813 Q1747.0938,363.5 1747.7188,362.9219 L1747.7188,365.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="45" x="1765.25" y="364.656">Camera</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1636" x2="1907" y1="376" y2="376"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1643" y="384"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1655" y="391.7589">m_config : Config</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1643" y="398.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1655" y="406.7408">m_frustum : ViewFrustum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1643" y="413.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1655" y="421.7227">m_pEntity : const Entity*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1643" y="428.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1655" y="436.7046">m_projViewMatrx : glm::mat4</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1643" y="443.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1655" y="451.6865">m_projectionMatrix : glm::mat4</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1643" y="458.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1655" y="466.6684">m_viewMatrix : glm::mat4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1636" x2="1907" y1="473.8913" y2="473.8913"/><ellipse cx="1646" cy="484.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1655" y="489.6502">Camera(const Config&amp; config)</text><ellipse cx="1646" cy="499.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1655" y="504.6321">getFrustum() : ViewFrustum&amp; {query}</text><ellipse cx="1646" cy="514.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1655" y="519.614">getProjMatrix() : glm::mat4&amp; {query}</text><ellipse cx="1646" cy="529.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1655" y="534.5959">getProjectionViewMatrix() : glm::mat4&amp; {query}</text><ellipse cx="1646" cy="544.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1655" y="549.5778">getViewMatrix() : glm::mat4&amp; {query}</text><ellipse cx="1646" cy="559.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1655" y="564.5597">hookEntity(const Entity&amp; entity) : void</text><ellipse cx="1646" cy="574.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1655" y="579.5416">update() : void</text><!--MD5=[6e0c224d26e528c5d694b92ff8301dce]
class Chunk--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="362.6196" id="Chunk" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="4572.5" y="2387"/><ellipse cx="4744.75" cy="2403" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4747.7188,2408.6406 Q4747.1406,2408.9375 4746.5,2409.0781 Q4745.8594,2409.2344 4745.1563,2409.2344 Q4742.6563,2409.2344 4741.3281,2407.5938 Q4740.0156,2405.9375 4740.0156,2402.8125 Q4740.0156,2399.6875 4741.3281,2398.0313 Q4742.6563,2396.375 4745.1563,2396.375 Q4745.8594,2396.375 4746.5,2396.5313 Q4747.1563,2396.6875 4747.7188,2396.9844 L4747.7188,2399.7031 Q4747.0938,2399.125 4746.5,2398.8594 Q4745.9063,2398.5781 4745.2813,2398.5781 Q4743.9375,2398.5781 4743.25,2399.6563 Q4742.5625,2400.7188 4742.5625,2402.8125 Q4742.5625,2404.9063 4743.25,2405.9844 Q4743.9375,2407.0469 4745.2813,2407.0469 Q4745.9063,2407.0469 4746.5,2406.7813 Q4747.0938,2406.5 4747.7188,2405.9219 L4747.7188,2408.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="4765.25" y="2407.656">Chunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4573.5" x2="4959.5" y1="2419" y2="2419"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2427"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4592.5" y="2434.7589">m_highestBlocks : Array2D&lt;int, CHUNK_SIZE&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2441.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4592.5" y="2449.7408">m_pWorld : World*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2456.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4592.5" y="2464.7227">m_isLoaded : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2471.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4592.5" y="2479.7046">m_location : sf::Vector2i</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2486.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4592.5" y="2494.6865">m_chunks : std::vector&lt;ChunkSection&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4573.5" x2="4959.5" y1="2501.9094" y2="2501.9094"/><ellipse cx="4583.5" cy="2512.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="4592.5" y="2517.6684">Chunk()</text><ellipse cx="4583.5" cy="2527.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4592.5" y="2532.6502">Chunk(World&amp; world, const sf::Vector2i&amp; location)</text><ellipse cx="4583.5" cy="2542.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="4592.5" y="2547.6321">getBlock(int x, int y, int z) : ChunkBlock {query}</text><ellipse cx="4583.5" cy="2557.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="4592.5" y="2562.614">getSection(int index) : ChunkSection&amp;</text><ellipse cx="4583.5" cy="2572.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4592.5" y="2577.5959">hasLoaded() : bool {query}</text><ellipse cx="4583.5" cy="2587.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4592.5" y="2592.5778">makeMesh(const Camera&amp; camera) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2599.8008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4592.5" y="2607.5597">outOfBound(int x, int y, int z) : bool {query}</text><ellipse cx="4583.5" cy="2617.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4592.5" y="2622.5416">getHeightAt(int x, int z) : int</text><ellipse cx="4583.5" cy="2632.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4592.5" y="2637.5235">getLocation() : sf::Vector2i&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2644.7464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="4592.5" y="2652.5053">addSection() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2659.7283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4592.5" y="2667.4872">addSectionsBlockTarget(int blockY) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4580.5" y="2674.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="4592.5" y="2682.4691">addSectionsIndexTarget(int index) : void</text><ellipse cx="4583.5" cy="2692.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4592.5" y="2697.451">deleteMeshes() : void</text><ellipse cx="4583.5" cy="2707.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="4592.5" y="2712.4329">drawChunks(RenderMaster&amp; renderer, const Camera&amp; camera) : void</text><ellipse cx="4583.5" cy="2722.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="4592.5" y="2727.4148">load(TerrainGenerator&amp; generator) : void</text><ellipse cx="4583.5" cy="2737.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4592.5" y="2742.3967">setBlock(int x, int y, int z, ChunkBlock block) : void</text><!--MD5=[f2eb375649199b442ec4488acb5afd2f]
class ChunkManager--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="242.7645" id="ChunkManager" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="4335.5" y="1373"/><ellipse cx="4450.25" cy="1389" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4453.2188,1394.6406 Q4452.6406,1394.9375 4452,1395.0781 Q4451.3594,1395.2344 4450.6563,1395.2344 Q4448.1563,1395.2344 4446.8281,1393.5938 Q4445.5156,1391.9375 4445.5156,1388.8125 Q4445.5156,1385.6875 4446.8281,1384.0313 Q4448.1563,1382.375 4450.6563,1382.375 Q4451.3594,1382.375 4452,1382.5313 Q4452.6563,1382.6875 4453.2188,1382.9844 L4453.2188,1385.7031 Q4452.5938,1385.125 4452,1384.8594 Q4451.4063,1384.5781 4450.7813,1384.5781 Q4449.4375,1384.5781 4448.75,1385.6563 Q4448.0625,1386.7188 4448.0625,1388.8125 Q4448.0625,1390.9063 4448.75,1391.9844 Q4449.4375,1393.0469 4450.7813,1393.0469 Q4451.4063,1393.0469 4452,1392.7813 Q4452.5938,1392.5 4453.2188,1391.9219 L4453.2188,1394.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="4470.75" y="1393.656">ChunkManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4336.5" x2="4658.5" y1="1405" y2="1405"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4343.5" y="1413"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4355.5" y="1420.7589">m_world : World*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4343.5" y="1427.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4355.5" y="1435.7408">m_terrainGenerator : std::unique_ptr&lt;TerrainGenerator&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4343.5" y="1442.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="4355.5" y="1450.7227">m_chunks : unordered_map&lt;VectorXZ, Chunk&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4336.5" x2="4658.5" y1="1457.9457" y2="1457.9457"/><ellipse cx="4346.5" cy="1468.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4355.5" y="1473.7046">ChunkManager(World&amp; world)</text><ellipse cx="4346.5" cy="1483.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4355.5" y="1488.6865">getChunk(int x, int z) : Chunk&amp;</text><ellipse cx="4346.5" cy="1498.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4355.5" y="1503.6684">getChunks() : ChunkMap&amp;</text><ellipse cx="4346.5" cy="1513.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4355.5" y="1518.6502">getTerrainGenerator() : TerrainGenerator&amp; {query}</text><ellipse cx="4346.5" cy="1528.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4355.5" y="1533.6321">chunkExistsAt(int x, int z) : bool {query}</text><ellipse cx="4346.5" cy="1543.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4355.5" y="1548.614">chunkLoadedAt(int x, int z) : bool {query}</text><ellipse cx="4346.5" cy="1558.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4355.5" y="1563.5959">makeMesh(int x, int z, const Camera&amp; camera) : bool</text><ellipse cx="4346.5" cy="1573.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4355.5" y="1578.5778">deleteMeshes() : void</text><ellipse cx="4346.5" cy="1588.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4355.5" y="1593.5597">loadChunk(int x, int z) : void</text><ellipse cx="4346.5" cy="1603.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4355.5" y="1608.5416">unloadChunk(int x, int z) : void</text><!--MD5=[d9e06399b41f16dfaac423ceb864cccc]
class ChunkMesh--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="197.8189" id="ChunkMesh" style="stroke: #A80036; stroke-width: 1.5;" width="1028" x="5323.5" y="3581"/><ellipse cx="5800.25" cy="3597" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5803.2188,3602.6406 Q5802.6406,3602.9375 5802,3603.0781 Q5801.3594,3603.2344 5800.6563,3603.2344 Q5798.1563,3603.2344 5796.8281,3601.5938 Q5795.5156,3599.9375 5795.5156,3596.8125 Q5795.5156,3593.6875 5796.8281,3592.0313 Q5798.1563,3590.375 5800.6563,3590.375 Q5801.3594,3590.375 5802,3590.5313 Q5802.6563,3590.6875 5803.2188,3590.9844 L5803.2188,3593.7031 Q5802.5938,3593.125 5802,3592.8594 Q5801.4063,3592.5781 5800.7813,3592.5781 Q5799.4375,3592.5781 5798.75,3593.6563 Q5798.0625,3594.7188 5798.0625,3596.8125 Q5798.0625,3598.9063 5798.75,3599.9844 Q5799.4375,3601.0469 5800.7813,3601.0469 Q5801.4063,3601.0469 5802,3600.7813 Q5802.5938,3600.5 5803.2188,3599.9219 L5803.2188,3602.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="5820.75" y="3601.656">ChunkMesh</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5324.5" x2="6350.5" y1="3613" y2="3613"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5331.5" y="3621"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="5343.5" y="3628.7589">m_indexIndex : GLuint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5331.5" y="3635.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="5343.5" y="3643.7408">m_mesh : Mesh</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5331.5" y="3650.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5343.5" y="3658.7227">m_model : Model</text><ellipse cx="5334.5" cy="3668.9457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="5343.5" y="3673.7046">faces : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5331.5" y="3680.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="5343.5" y="3688.6865">m_light : std::vector&lt;GLfloat&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5324.5" x2="6350.5" y1="3695.9094" y2="3695.9094"/><ellipse cx="5334.5" cy="3706.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5343.5" y="3711.6684">ChunkMesh()</text><ellipse cx="5334.5" cy="3721.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5343.5" y="3726.6502">getModel() : Model&amp; {query}</text><ellipse cx="5334.5" cy="3736.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1002" x="5343.5" y="3741.6321">addFace(const std::array&lt;GLfloat, 12&gt;&amp; blockFace, const std::array&lt;GLfloat, 8&gt;&amp; textureCoords, const sf::Vector3i&amp; chunkPosition, const sf::Vector3i&amp; blockPosition, GLfloat cardinalLight) : void</text><ellipse cx="5334.5" cy="3751.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5343.5" y="3756.614">bufferMesh() : void</text><ellipse cx="5334.5" cy="3766.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5343.5" y="3771.5959">deleteData() : void</text><!--MD5=[3d542900971419a4601f3cf2cdafd433]
class ChunkMeshBuilder--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="227.7827" id="ChunkMeshBuilder" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="5171.5" y="2454.5"/><ellipse cx="5623.25" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5626.2188,2476.1406 Q5625.6406,2476.4375 5625,2476.5781 Q5624.3594,2476.7344 5623.6563,2476.7344 Q5621.1563,2476.7344 5619.8281,2475.0938 Q5618.5156,2473.4375 5618.5156,2470.3125 Q5618.5156,2467.1875 5619.8281,2465.5313 Q5621.1563,2463.875 5623.6563,2463.875 Q5624.3594,2463.875 5625,2464.0313 Q5625.6563,2464.1875 5626.2188,2464.4844 L5626.2188,2467.2031 Q5625.5938,2466.625 5625,2466.3594 Q5624.4063,2466.0781 5623.7813,2466.0781 Q5622.4375,2466.0781 5621.75,2467.1563 Q5621.0625,2468.2188 5621.0625,2470.3125 Q5621.0625,2472.4063 5621.75,2473.4844 Q5622.4375,2474.5469 5623.7813,2474.5469 Q5624.4063,2474.5469 5625,2474.2813 Q5625.5938,2474 5626.2188,2473.4219 L5626.2188,2476.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="5643.75" y="2475.156">ChunkMeshBuilder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5172.5" x2="6188.5" y1="2486.5" y2="2486.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2494.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5191.5" y="2502.2589">m_pActiveMesh : ChunkMesh*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2509.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5191.5" y="2517.2408">m_pMeshes : ChunkMeshCollection*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2524.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5191.5" y="2532.2227">m_pChunk : ChunkSection*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2539.4457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5191.5" y="2547.2046">m_pBlockData : const BlockDataHolder*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2554.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5191.5" y="2562.1865">m_pBlockPtr : const ChunkBlock*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5172.5" x2="6188.5" y1="2569.4094" y2="2569.4094"/><ellipse cx="5182.5" cy="2580.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="5191.5" y="2585.1684">ChunkMeshBuilder(ChunkSection&amp; chunk, ChunkMeshCollection&amp; meshes)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2592.3913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="5191.5" y="2600.1502">shouldMakeFace(const sf::Vector3i&amp; blockPosition, const BlockDataHolder&amp; blockData) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2607.3732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5191.5" y="2615.1321">shouldMakeLayer(int y) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2622.3551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="5191.5" y="2630.114">addXBlockToMesh(const sf::Vector2i&amp; textureCoords, const sf::Vector3i&amp; blockPosition) : void</text><ellipse cx="5182.5" cy="2640.337" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5191.5" y="2645.0959">buildMesh() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2652.3189"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="5191.5" y="2660.0778">setActiveMesh(ChunkBlock block) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5179.5" y="2667.3008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="5191.5" y="2675.0597">tryAddFaceToMesh(const std::array&lt;GLfloat, 12&gt;&amp; blockFace, const sf::Vector2i&amp; textureCoords, const sf::Vector3i&amp; blockPosition, const sf::Vector3i&amp; blockFacing, GLfloat cardinalLight) : void</text><!--MD5=[493b0711ee29e7e6d97364c0818016f3]
class ChunkRenderer--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="ChunkRenderer" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="4021" y="3626"/><ellipse cx="4098.75" cy="3642" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4101.7188,3647.6406 Q4101.1406,3647.9375 4100.5,3648.0781 Q4099.8594,3648.2344 4099.1563,3648.2344 Q4096.6563,3648.2344 4095.3281,3646.5938 Q4094.0156,3644.9375 4094.0156,3641.8125 Q4094.0156,3638.6875 4095.3281,3637.0313 Q4096.6563,3635.375 4099.1563,3635.375 Q4099.8594,3635.375 4100.5,3635.5313 Q4101.1563,3635.6875 4101.7188,3635.9844 L4101.7188,3638.7031 Q4101.0938,3638.125 4100.5,3637.8594 Q4099.9063,3637.5781 4099.2813,3637.5781 Q4097.9375,3637.5781 4097.25,3638.6563 Q4096.5625,3639.7188 4096.5625,3641.8125 Q4096.5625,3643.9063 4097.25,3644.9844 Q4097.9375,3646.0469 4099.2813,3646.0469 Q4099.9063,3646.0469 4100.5,3645.7813 Q4101.0938,3645.5 4101.7188,3644.9219 L4101.7188,3647.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="4119.25" y="3646.656">ChunkRenderer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4022" x2="4271" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4029" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4041" y="3673.7589">m_shader : ChunkShader</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4029" y="3680.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4041" y="3688.7408">m_chunks : std::vector&lt;const RenderInfo*&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4022" x2="4271" y1="3695.9638" y2="3695.9638"/><ellipse cx="4032" cy="3706.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4041" y="3711.7227">add(const ChunkMesh&amp; mesh) : void</text><ellipse cx="4032" cy="3721.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4041" y="3726.7046">render(const Camera&amp; camera) : void</text><!--MD5=[3b6781ed5a1e25b06e4c937f9cdfe3af]
class ChunkSection--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="407.5653" id="ChunkSection" style="stroke: #A80036; stroke-width: 1.5;" width="327" x="4938" y="2810"/><ellipse cx="5059.25" cy="2826" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5062.2188,2831.6406 Q5061.6406,2831.9375 5061,2832.0781 Q5060.3594,2832.2344 5059.6563,2832.2344 Q5057.1563,2832.2344 5055.8281,2830.5938 Q5054.5156,2828.9375 5054.5156,2825.8125 Q5054.5156,2822.6875 5055.8281,2821.0313 Q5057.1563,2819.375 5059.6563,2819.375 Q5060.3594,2819.375 5061,2819.5313 Q5061.6563,2819.6875 5062.2188,2819.9844 L5062.2188,2822.7031 Q5061.5938,2822.125 5061,2821.8594 Q5060.4063,2821.5781 5059.7813,2821.5781 Q5058.4375,2821.5781 5057.75,2822.6563 Q5057.0625,2823.7188 5057.0625,2825.8125 Q5057.0625,2827.9063 5057.75,2828.9844 Q5058.4375,2830.0469 5059.7813,2830.0469 Q5060.4063,2830.0469 5061,2829.7813 Q5061.5938,2829.5 5062.2188,2828.9219 L5062.2188,2831.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="5079.75" y="2830.656">ChunkSection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4939" x2="5264" y1="2842" y2="2842"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2850"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="4958" y="2857.7589">m_aabb : AABB</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2864.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4958" y="2872.7408">m_meshes : ChunkMeshCollection</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2879.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4958" y="2887.7227">m_pWorld : World*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2894.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4958" y="2902.7046">m_hasBufferedMesh : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2909.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4958" y="2917.6865">m_hasMesh : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2924.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4958" y="2932.6684">m_location : sf::Vector3i</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2939.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="4958" y="2947.6502">m_blocks : std::array&lt;ChunkBlock, CHUNK_VOLUME&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="2954.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="4958" y="2962.6321">m_layers : std::array&lt;Layer, CHUNK_SIZE&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4939" x2="5264" y1="2969.8551" y2="2969.8551"/><ellipse cx="4949" cy="2980.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="4958" y="2985.614">ChunkSection(const sf::Vector3i&amp; position, World&amp; world)</text><ellipse cx="4949" cy="2995.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="4958" y="3000.5959">getBlock(int x, int y, int z) : ChunkBlock {query}</text><ellipse cx="4949" cy="3010.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="4958" y="3015.5778">begin() : ChunkBlock*</text><ellipse cx="4949" cy="3025.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="4958" y="3030.5597">getMeshes() : ChunkMeshCollection&amp; {query}</text><ellipse cx="4949" cy="3040.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4958" y="3045.5416">getAdjacent(int dx, int dz) : ChunkSection&amp;</text><ellipse cx="4949" cy="3055.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4958" y="3060.5235">getLayer(int y) : Layer&amp; {query}</text><ellipse cx="4949" cy="3070.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4958" y="3075.5053">hasBuffered() : bool {query}</text><ellipse cx="4949" cy="3085.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4958" y="3090.4872">hasMesh() : bool {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="3097.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="155" x="4958" y="3105.4691">outOfBounds(int value) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="3112.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="156" x="4958" y="3120.451">getIndex(int x, int y, int z) : int</text><ellipse cx="4949" cy="3130.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4958" y="3135.4329">getLocation() : sf::Vector3i {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4946" y="3142.6559"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4958" y="3150.4148">toWorldPosition(int x, int y, int z) : sf::Vector3i {query}</text><ellipse cx="4949" cy="3160.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4958" y="3165.3967">bufferMesh() : void</text><ellipse cx="4949" cy="3175.6196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4958" y="3180.3786">deleteMeshes() : void</text><ellipse cx="4949" cy="3190.6015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4958" y="3195.3604">makeMesh() : void</text><ellipse cx="4949" cy="3205.5834" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4958" y="3210.3423">setBlock(int x, int y, int z, ChunkBlock block) : void</text><!--MD5=[b93fd12ef065e26eeb26ff3130840de9]
class ChunkSection::Layer--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="ChunkSection::Layer" style="stroke: #A80036; stroke-width: 1.5;" width="171" x="5016" y="3353"/><ellipse cx="5042.7" cy="3369" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5045.6688,3374.6406 Q5045.0906,3374.9375 5044.45,3375.0781 Q5043.8094,3375.2344 5043.1063,3375.2344 Q5040.6063,3375.2344 5039.2781,3373.5938 Q5037.9656,3371.9375 5037.9656,3368.8125 Q5037.9656,3365.6875 5039.2781,3364.0313 Q5040.6063,3362.375 5043.1063,3362.375 Q5043.8094,3362.375 5044.45,3362.5313 Q5045.1063,3362.6875 5045.6688,3362.9844 L5045.6688,3365.7031 Q5045.0438,3365.125 5044.45,3364.8594 Q5043.8563,3364.5781 5043.2313,3364.5781 Q5041.8875,3364.5781 5041.2,3365.6563 Q5040.5125,3366.7188 5040.5125,3368.8125 Q5040.5125,3370.9063 5041.2,3371.9844 Q5041.8875,3373.0469 5043.2313,3373.0469 Q5043.8563,3373.0469 5044.45,3372.7813 Q5045.0438,3372.5 5045.6688,3371.9219 L5045.6688,3374.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="5059.3" y="3373.656">ChunkSection::Layer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5017" x2="5186" y1="3385" y2="3385"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5024" y="3393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5036" y="3400.7589">m_solidBlockCount : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5017" x2="5186" y1="3407.9819" y2="3407.9819"/><ellipse cx="5027" cy="3418.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5036" y="3423.7408">isAllSolid() : bool {query}</text><ellipse cx="5027" cy="3433.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5036" y="3438.7227">update(ChunkBlock c) : void</text><!--MD5=[99113d57a6bdc886957b4d1545114fd8]
class ChunkShader--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="ChunkShader" style="stroke: #A80036; stroke-width: 1.5;" width="130" x="4249.5" y="3944"/><ellipse cx="4274.85" cy="3960" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4277.8188,3965.6406 Q4277.2406,3965.9375 4276.6,3966.0781 Q4275.9594,3966.2344 4275.2563,3966.2344 Q4272.7563,3966.2344 4271.4281,3964.5938 Q4270.1156,3962.9375 4270.1156,3959.8125 Q4270.1156,3956.6875 4271.4281,3955.0313 Q4272.7563,3953.375 4275.2563,3953.375 Q4275.9594,3953.375 4276.6,3953.5313 Q4277.2563,3953.6875 4277.8188,3953.9844 L4277.8188,3956.7031 Q4277.1938,3956.125 4276.6,3955.8594 Q4276.0063,3955.5781 4275.3813,3955.5781 Q4274.0375,3955.5781 4273.35,3956.6563 Q4272.6625,3957.7188 4272.6625,3959.8125 Q4272.6625,3961.9063 4273.35,3962.9844 Q4274.0375,3964.0469 4275.3813,3964.0469 Q4276.0063,3964.0469 4276.6,3963.7813 Q4277.1938,3963.5 4277.8188,3962.9219 L4277.8188,3965.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="4291.15" y="3964.656">ChunkShader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4250.5" x2="4378.5" y1="3976" y2="3976"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4250.5" x2="4378.5" y1="3984" y2="3984"/><ellipse cx="4260.5" cy="3995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4269.5" y="3999.7589">ChunkShader()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4257.5" y="4006.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4269.5" y="4014.7408">getUniforms() : void</text><!--MD5=[7ba063495b8270c4362578822d8b9971]
class ClassicOverWorldGenerator--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="332.6559" id="ClassicOverWorldGenerator" style="stroke: #A80036; stroke-width: 1.5;" width="319" x="3617" y="1934"/><ellipse cx="3693.75" cy="1950" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3696.7188,1955.6406 Q3696.1406,1955.9375 3695.5,1956.0781 Q3694.8594,1956.2344 3694.1563,1956.2344 Q3691.6563,1956.2344 3690.3281,1954.5938 Q3689.0156,1952.9375 3689.0156,1949.8125 Q3689.0156,1946.6875 3690.3281,1945.0313 Q3691.6563,1943.375 3694.1563,1943.375 Q3694.8594,1943.375 3695.5,1943.5313 Q3696.1563,1943.6875 3696.7188,1943.9844 L3696.7188,1946.7031 Q3696.0938,1946.125 3695.5,1945.8594 Q3694.9063,1945.5781 3694.2813,1945.5781 Q3692.9375,1945.5781 3692.25,1946.6563 Q3691.5625,1947.7188 3691.5625,1949.8125 Q3691.5625,1951.9063 3692.25,1952.9844 Q3692.9375,1954.0469 3694.2813,1954.0469 Q3694.9063,1954.0469 3695.5,1953.7813 Q3696.0938,1953.5 3696.7188,1952.9219 L3696.7188,1955.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="157" x="3714.25" y="1954.656">ClassicOverWorldGenerator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3618" x2="3935" y1="1966" y2="1966"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="1974"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="3637" y="1981.7589">m_biomeMap : Array2D&lt;int, CHUNK_SIZE + 1&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="1988.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3637" y="1996.7408">m_heightMap : Array2D&lt;int, CHUNK_SIZE&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2003.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3637" y="2011.7227">m_pChunk : Chunk*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2018.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3637" y="2026.7046">m_desertBiome : DesertBiome</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2033.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3637" y="2041.6865">m_grassBiome : GrasslandBiome</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2048.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3637" y="2056.6684">m_lightForest : LightForest</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2063.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3637" y="2071.6502">m_oceanBiome : OceanBiome</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2078.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3637" y="2086.6321">m_random : Random&lt;std::minstd_rand&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2093.8551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="3637" y="2101.614">m_temperateForest : TemperateForestBiome</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2108.837"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="3637" y="2116.5959">m_biomeNoiseGen : static NoiseGenerator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3618" x2="3935" y1="2123.8189" y2="2123.8189"/><ellipse cx="3628" cy="2134.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3637" y="2139.5778">ClassicOverWorldGenerator()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2146.8008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="3637" y="2154.5597">getBiome(int x, int z) : Biome&amp; {query}</text><ellipse cx="3628" cy="2164.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3637" y="2169.5416">getMinimumSpawnHeight() : int {query}</text><ellipse cx="3628" cy="2179.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3637" y="2184.5235">generateTerrainFor(Chunk&amp; chunk) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2191.7464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="3637" y="2199.5053">getBiomeMap() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2206.7283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="3637" y="2214.4872">getHeightIn(int xMin, int zMin, int xMax, int zMax) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2221.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3637" y="2229.4691">getHeightMap() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2236.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3637" y="2244.451">setBlocks(int maxHeight) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3625" y="2251.674"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="3637" y="2259.4329">setUpNoise() : void</text><!--MD5=[1d7ba1c7002d54515419844fbd155368]
class Controller--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="Controller" style="stroke: #A80036; stroke-width: 1.5;" width="165" x="88" y="108.5"/><ellipse cx="138.25" cy="124.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M141.2188,130.1406 Q140.6406,130.4375 140,130.5781 Q139.3594,130.7344 138.6563,130.7344 Q136.1563,130.7344 134.8281,129.0938 Q133.5156,127.4375 133.5156,124.3125 Q133.5156,121.1875 134.8281,119.5313 Q136.1563,117.875 138.6563,117.875 Q139.3594,117.875 140,118.0313 Q140.6563,118.1875 141.2188,118.4844 L141.2188,121.2031 Q140.5938,120.625 140,120.3594 Q139.4063,120.0781 138.7813,120.0781 Q137.4375,120.0781 136.75,121.1563 Q136.0625,122.2188 136.0625,124.3125 Q136.0625,126.4063 136.75,127.4844 Q137.4375,128.5469 138.7813,128.5469 Q139.4063,128.5469 140,128.2813 Q140.5938,128 141.2188,127.4219 L141.2188,130.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="158.75" y="129.156">Controller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="89" x2="252" y1="140.5" y2="140.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="89" x2="252" y1="148.5" y2="148.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="96" y="156.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="108" y="164.2589">translateInput() : glm::vec3</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="96" y="171.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="108" y="179.2408">mouseInput() : sf::Vector2i</text><!--MD5=[7e71debf8271a4a62c393294c102d63d]
class CubeTexture--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="CubeTexture" style="stroke: #A80036; stroke-width: 1.5;" width="328" x="6781.5" y="3914"/><ellipse cx="6905.25" cy="3930" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6908.2188,3935.6406 Q6907.6406,3935.9375 6907,3936.0781 Q6906.3594,3936.2344 6905.6563,3936.2344 Q6903.1563,3936.2344 6901.8281,3934.5938 Q6900.5156,3932.9375 6900.5156,3929.8125 Q6900.5156,3926.6875 6901.8281,3925.0313 Q6903.1563,3923.375 6905.6563,3923.375 Q6906.3594,3923.375 6907,3923.5313 Q6907.6563,3923.6875 6908.2188,3923.9844 L6908.2188,3926.7031 Q6907.5938,3926.125 6907,3925.8594 Q6906.4063,3925.5781 6905.7813,3925.5781 Q6904.4375,3925.5781 6903.75,3926.6563 Q6903.0625,3927.7188 6903.0625,3929.8125 Q6903.0625,3931.9063 6903.75,3932.9844 Q6904.4375,3934.0469 6905.7813,3934.0469 Q6906.4063,3934.0469 6907,3933.7813 Q6907.5938,3933.5 6908.2188,3932.9219 L6908.2188,3935.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="6925.75" y="3934.656">CubeTexture</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6782.5" x2="7108.5" y1="3946" y2="3946"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6789.5" y="3954"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="6801.5" y="3961.7589">m_texId : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6782.5" x2="7108.5" y1="3968.9819" y2="3968.9819"/><ellipse cx="6792.5" cy="3979.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6801.5" y="3984.7408">CubeTexture()</text><ellipse cx="6792.5" cy="3994.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="6801.5" y="3999.7227">CubeTexture(const std::array&lt;std::string, 6&gt;&amp; files)</text><ellipse cx="6792.5" cy="4009.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="6801.5" y="4014.7046">~CubeTexture()</text><ellipse cx="6792.5" cy="4024.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="6801.5" y="4029.6865">bindTexture() : void {query}</text><ellipse cx="6792.5" cy="4039.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="6801.5" y="4044.6684">loadFromFiles(const std::array&lt;std::string, 6&gt;&amp; files) : void</text><!--MD5=[da388b56915c6724a7861c2988ea962a]
class DefaultBlock--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="62.9819" id="DefaultBlock" style="stroke: #A80036; stroke-width: 1.5;" width="239" x="6228" y="1463"/><ellipse cx="6307.75" cy="1479" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6310.7188,1484.6406 Q6310.1406,1484.9375 6309.5,1485.0781 Q6308.8594,1485.2344 6308.1563,1485.2344 Q6305.6563,1485.2344 6304.3281,1483.5938 Q6303.0156,1481.9375 6303.0156,1478.8125 Q6303.0156,1475.6875 6304.3281,1474.0313 Q6305.6563,1472.375 6308.1563,1472.375 Q6308.8594,1472.375 6309.5,1472.5313 Q6310.1563,1472.6875 6310.7188,1472.9844 L6310.7188,1475.7031 Q6310.0938,1475.125 6309.5,1474.8594 Q6308.9063,1474.5781 6308.2813,1474.5781 Q6306.9375,1474.5781 6306.25,1475.6563 Q6305.5625,1476.7188 6305.5625,1478.8125 Q6305.5625,1480.9063 6306.25,1481.9844 Q6306.9375,1483.0469 6308.2813,1483.0469 Q6308.9063,1483.0469 6309.5,1482.7813 Q6310.0938,1482.5 6310.7188,1481.9219 L6310.7188,1484.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="6328.25" y="1483.656">DefaultBlock</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6229" x2="6466" y1="1495" y2="1495"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6229" x2="6466" y1="1503" y2="1503"/><ellipse cx="6239" cy="1514" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6248" y="1518.7589">DefaultBlock(const std::string&amp; fileName)</text><!--MD5=[cc39df78c774e1df26cf1daea5c16903]
class DesertBiome--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="DesertBiome" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="4006" y="2499.5"/><ellipse cx="4159.25" cy="2515.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4162.2188,2521.1406 Q4161.6406,2521.4375 4161,2521.5781 Q4160.3594,2521.7344 4159.6563,2521.7344 Q4157.1563,2521.7344 4155.8281,2520.0938 Q4154.5156,2518.4375 4154.5156,2515.3125 Q4154.5156,2512.1875 4155.8281,2510.5313 Q4157.1563,2508.875 4159.6563,2508.875 Q4160.3594,2508.875 4161,2509.0313 Q4161.6563,2509.1875 4162.2188,2509.4844 L4162.2188,2512.2031 Q4161.5938,2511.625 4161,2511.3594 Q4160.4063,2511.0781 4159.7813,2511.0781 Q4158.4375,2511.0781 4157.75,2512.1563 Q4157.0625,2513.2188 4157.0625,2515.3125 Q4157.0625,2517.4063 4157.75,2518.4844 Q4158.4375,2519.5469 4159.7813,2519.5469 Q4160.4063,2519.5469 4161,2519.2813 Q4161.5938,2519 4162.2188,2518.4219 L4162.2188,2521.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="4179.75" y="2520.156">DesertBiome</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4007" x2="4394" y1="2531.5" y2="2531.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4007" x2="4394" y1="2539.5" y2="2539.5"/><ellipse cx="4017" cy="2550.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4026" y="2555.2589">DesertBiome(int seed)</text><ellipse cx="4017" cy="2565.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="4026" y="2570.2408">getPlant(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="4017" cy="2580.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4026" y="2585.2227">getTopBlock(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="4017" cy="2595.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="4026" y="2600.2046">getUnderWaterBlock(Rand&amp; rand) : ChunkBlock {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4014" y="2607.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="4026" y="2615.1865">getNoiseParameters() : NoiseParameters</text><ellipse cx="4017" cy="2625.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="4026" y="2630.1684">makeTree(Rand&amp; rand, Chunk&amp; chunk, int x, int y, int z) : void {query}</text><!--MD5=[6b1c910779152a1672dc562723cb2724]
class FPSCounter--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="212.8008" id="FPSCounter" style="stroke: #A80036; stroke-width: 1.5;" width="223" x="2379" y="1002.5"/><ellipse cx="2453.75" cy="1018.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2456.7188,1024.1406 Q2456.1406,1024.4375 2455.5,1024.5781 Q2454.8594,1024.7344 2454.1563,1024.7344 Q2451.6563,1024.7344 2450.3281,1023.0938 Q2449.0156,1021.4375 2449.0156,1018.3125 Q2449.0156,1015.1875 2450.3281,1013.5313 Q2451.6563,1011.875 2454.1563,1011.875 Q2454.8594,1011.875 2455.5,1012.0313 Q2456.1563,1012.1875 2456.7188,1012.4844 L2456.7188,1015.2031 Q2456.0938,1014.625 2455.5,1014.3594 Q2454.9063,1014.0781 2454.2813,1014.0781 Q2452.9375,1014.0781 2452.25,1015.1563 Q2451.5625,1016.2188 2451.5625,1018.3125 Q2451.5625,1020.4063 2452.25,1021.4844 Q2452.9375,1022.5469 2454.2813,1022.5469 Q2454.9063,1022.5469 2455.5,1022.2813 Q2456.0938,1022 2456.7188,1021.4219 L2456.7188,1024.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="2474.25" y="1023.156">FPSCounter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2380" x2="2601" y1="1034.5" y2="1034.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1042.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2399" y="1050.2589">debugging : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1057.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="2399" y="1065.2408">enabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1072.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="2399" y="1080.2227">m_fps : float</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1087.4457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2399" y="1095.2046">m_frameCount : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1102.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2399" y="1110.1865">m_delayTimer : sf::Clock</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1117.4094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2399" y="1125.1684">m_fpsTimer : sf::Clock</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1132.3913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2399" y="1140.1502">m_font : sf::Font</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2387" y="1147.3732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2399" y="1155.1321">m_text : sf::Text</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2380" x2="2601" y1="1162.3551" y2="1162.3551"/><ellipse cx="2390" cy="1173.3551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2399" y="1178.114">FPSCounter()</text><ellipse cx="2390" cy="1188.337" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2399" y="1193.0959">draw(RenderMaster&amp; renderer) : void</text><ellipse cx="2390" cy="1203.3189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="2399" y="1208.0778">update() : void</text><!--MD5=[fb0951ab6a670704d41a229d1f21723e]
class FloraRenderer--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="FloraRenderer" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="4307" y="3626"/><ellipse cx="4388.25" cy="3642" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4391.2188,3647.6406 Q4390.6406,3647.9375 4390,3648.0781 Q4389.3594,3648.2344 4388.6563,3648.2344 Q4386.1563,3648.2344 4384.8281,3646.5938 Q4383.5156,3644.9375 4383.5156,3641.8125 Q4383.5156,3638.6875 4384.8281,3637.0313 Q4386.1563,3635.375 4388.6563,3635.375 Q4389.3594,3635.375 4390,3635.5313 Q4390.6563,3635.6875 4391.2188,3635.9844 L4391.2188,3638.7031 Q4390.5938,3638.125 4390,3637.8594 Q4389.4063,3637.5781 4388.7813,3637.5781 Q4387.4375,3637.5781 4386.75,3638.6563 Q4386.0625,3639.7188 4386.0625,3641.8125 Q4386.0625,3643.9063 4386.75,3644.9844 Q4387.4375,3646.0469 4388.7813,3646.0469 Q4389.4063,3646.0469 4390,3645.7813 Q4390.5938,3645.5 4391.2188,3644.9219 L4391.2188,3647.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="4408.75" y="3646.656">FloraRenderer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4308" x2="4557" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4327" y="3673.7589">m_shader : FloraShader</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4315" y="3680.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4327" y="3688.7408">m_chunks : std::vector&lt;const RenderInfo*&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4308" x2="4557" y1="3695.9638" y2="3695.9638"/><ellipse cx="4318" cy="3706.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4327" y="3711.7227">add(const ChunkMesh&amp; mesh) : void</text><ellipse cx="4318" cy="3721.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4327" y="3726.7046">render(const Camera&amp; camera) : void</text><!--MD5=[04f7f629d0755be87f9e2fb9b467090a]
class FloraShader--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="FloraShader" style="stroke: #A80036; stroke-width: 1.5;" width="201" x="4510" y="3929"/><ellipse cx="4572.25" cy="3945" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4575.2188,3950.6406 Q4574.6406,3950.9375 4574,3951.0781 Q4573.3594,3951.2344 4572.6563,3951.2344 Q4570.1563,3951.2344 4568.8281,3949.5938 Q4567.5156,3947.9375 4567.5156,3944.8125 Q4567.5156,3941.6875 4568.8281,3940.0313 Q4570.1563,3938.375 4572.6563,3938.375 Q4573.3594,3938.375 4574,3938.5313 Q4574.6563,3938.6875 4575.2188,3938.9844 L4575.2188,3941.7031 Q4574.5938,3941.125 4574,3940.8594 Q4573.4063,3940.5781 4572.7813,3940.5781 Q4571.4375,3940.5781 4570.75,3941.6563 Q4570.0625,3942.7188 4570.0625,3944.8125 Q4570.0625,3946.9063 4570.75,3947.9844 Q4571.4375,3949.0469 4572.7813,3949.0469 Q4573.4063,3949.0469 4574,3948.7813 Q4574.5938,3948.5 4575.2188,3947.9219 L4575.2188,3950.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="4592.75" y="3949.656">FloraShader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4511" x2="4710" y1="3961" y2="3961"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4518" y="3969"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4530" y="3976.7589">m_time : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4511" x2="4710" y1="3983.9819" y2="3983.9819"/><ellipse cx="4521" cy="3994.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4530" y="3999.7408">FloraShader()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4518" y="4006.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4530" y="4014.7227">getUniforms() : void</text><ellipse cx="4521" cy="4024.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4530" y="4029.7046">loadTime(const float&amp; time) : void</text><!--MD5=[30a03fb81d32702aab75a7a6e4d19cc0]
class GrasslandBiome--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="152.8732" id="GrasslandBiome" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="1930" y="2492"/><ellipse cx="2073.75" cy="2508" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2076.7188,2513.6406 Q2076.1406,2513.9375 2075.5,2514.0781 Q2074.8594,2514.2344 2074.1563,2514.2344 Q2071.6563,2514.2344 2070.3281,2512.5938 Q2069.0156,2510.9375 2069.0156,2507.8125 Q2069.0156,2504.6875 2070.3281,2503.0313 Q2071.6563,2501.375 2074.1563,2501.375 Q2074.8594,2501.375 2075.5,2501.5313 Q2076.1563,2501.6875 2076.7188,2501.9844 L2076.7188,2504.7031 Q2076.0938,2504.125 2075.5,2503.8594 Q2074.9063,2503.5781 2074.2813,2503.5781 Q2072.9375,2503.5781 2072.25,2504.6563 Q2071.5625,2505.7188 2071.5625,2507.8125 Q2071.5625,2509.9063 2072.25,2510.9844 Q2072.9375,2512.0469 2074.2813,2512.0469 Q2074.9063,2512.0469 2075.5,2511.7813 Q2076.0938,2511.5 2076.7188,2510.9219 L2076.7188,2513.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="2094.25" y="2512.656">GrasslandBiome</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1931" x2="2318" y1="2524" y2="2524"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1931" x2="2318" y1="2532" y2="2532"/><ellipse cx="1941" cy="2543" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1950" y="2547.7589">GrasslandBiome(int seed)</text><ellipse cx="1941" cy="2557.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1950" y="2562.7408">getBeachBlock(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="1941" cy="2572.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1950" y="2577.7227">getPlant(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="1941" cy="2587.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1950" y="2592.7046">getTopBlock(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="1941" cy="2602.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="1950" y="2607.6865">getUnderWaterBlock(Rand&amp; rand) : ChunkBlock {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1938" y="2614.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1950" y="2622.6684">getNoiseParameters() : NoiseParameters</text><ellipse cx="1941" cy="2632.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="1950" y="2637.6502">makeTree(Rand&amp; rand, Chunk&amp; chunk, int x, int y, int z) : void {query}</text><!--MD5=[b26916cf34b4c36b60f328971c9568c3]
class ItemStack--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="152.8732" id="ItemStack" style="stroke: #A80036; stroke-width: 1.5;" width="275" x="1335" y="2492"/><ellipse cx="1440.25" cy="2508" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1443.2188,2513.6406 Q1442.6406,2513.9375 1442,2514.0781 Q1441.3594,2514.2344 1440.6563,2514.2344 Q1438.1563,2514.2344 1436.8281,2512.5938 Q1435.5156,2510.9375 1435.5156,2507.8125 Q1435.5156,2504.6875 1436.8281,2503.0313 Q1438.1563,2501.375 1440.6563,2501.375 Q1441.3594,2501.375 1442,2501.5313 Q1442.6563,2501.6875 1443.2188,2501.9844 L1443.2188,2504.7031 Q1442.5938,2504.125 1442,2503.8594 Q1441.4063,2503.5781 1440.7813,2503.5781 Q1439.4375,2503.5781 1438.75,2504.6563 Q1438.0625,2505.7188 1438.0625,2507.8125 Q1438.0625,2509.9063 1438.75,2510.9844 Q1439.4375,2512.0469 1440.7813,2512.0469 Q1441.4063,2512.0469 1442,2511.7813 Q1442.5938,2511.5 1443.2188,2510.9219 L1443.2188,2513.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="1460.75" y="2512.656">ItemStack</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1336" x2="1609" y1="2524" y2="2524"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1343" y="2532"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1355" y="2539.7589">m_pMaterial : const Material*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1343" y="2546.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1355" y="2554.7408">m_numInStack : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1336" x2="1609" y1="2561.9638" y2="2561.9638"/><ellipse cx="1346" cy="2572.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1355" y="2577.7227">ItemStack(const Material&amp; material, int amount)</text><ellipse cx="1346" cy="2587.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1355" y="2592.7046">getMaterial() : Material&amp; {query}</text><ellipse cx="1346" cy="2602.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1355" y="2607.6865">add(int amount) : int</text><ellipse cx="1346" cy="2617.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1355" y="2622.6684">getNumInStack() : int {query}</text><ellipse cx="1346" cy="2632.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1355" y="2637.6502">remove() : void</text><!--MD5=[e17bd019cf9874112af63a52ea874b62]
class Keyboard--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="Keyboard" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="2637.5" y="1040"/><ellipse cx="2750.75" cy="1056" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2753.7188,1061.6406 Q2753.1406,1061.9375 2752.5,1062.0781 Q2751.8594,1062.2344 2751.1563,1062.2344 Q2748.6563,1062.2344 2747.3281,1060.5938 Q2746.0156,1058.9375 2746.0156,1055.8125 Q2746.0156,1052.6875 2747.3281,1051.0313 Q2748.6563,1049.375 2751.1563,1049.375 Q2751.8594,1049.375 2752.5,1049.5313 Q2753.1563,1049.6875 2753.7188,1049.9844 L2753.7188,1052.7031 Q2753.0938,1052.125 2752.5,1051.8594 Q2751.9063,1051.5781 2751.2813,1051.5781 Q2749.9375,1051.5781 2749.25,1052.6563 Q2748.5625,1053.7188 2748.5625,1055.8125 Q2748.5625,1057.9063 2749.25,1058.9844 Q2749.9375,1060.0469 2751.2813,1060.0469 Q2751.9063,1060.0469 2752.5,1059.7813 Q2753.0938,1059.5 2753.7188,1058.9219 L2753.7188,1061.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="2771.25" y="1060.656">Keyboard</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2638.5" x2="2924.5" y1="1072" y2="1072"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2645.5" y="1080"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2657.5" y="1087.7589">m_recentlyReleased : sf::Keyboard::Key</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2645.5" y="1094.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2657.5" y="1102.7408">m_keys : std::array&lt;bool, sf::Keyboard::KeyCount&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2638.5" x2="2924.5" y1="1109.9638" y2="1109.9638"/><ellipse cx="2648.5" cy="1120.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="2657.5" y="1125.7227">Keyboard()</text><ellipse cx="2648.5" cy="1135.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2657.5" y="1140.7046">isKeyDown(sf::Keyboard::Key key) : bool {query}</text><ellipse cx="2648.5" cy="1150.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="2657.5" y="1155.6865">keyReleased(sf::Keyboard::Key key) : bool {query}</text><ellipse cx="2648.5" cy="1165.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2657.5" y="1170.6684">update(sf::Event e) : void</text><!--MD5=[dc15b0530a572a430be629afe8bb36e0]
class LightForest--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="LightForest" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="2354" y="2499.5"/><ellipse cx="2513.25" cy="2515.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2516.2188,2521.1406 Q2515.6406,2521.4375 2515,2521.5781 Q2514.3594,2521.7344 2513.6563,2521.7344 Q2511.1563,2521.7344 2509.8281,2520.0938 Q2508.5156,2518.4375 2508.5156,2515.3125 Q2508.5156,2512.1875 2509.8281,2510.5313 Q2511.1563,2508.875 2513.6563,2508.875 Q2514.3594,2508.875 2515,2509.0313 Q2515.6563,2509.1875 2516.2188,2509.4844 L2516.2188,2512.2031 Q2515.5938,2511.625 2515,2511.3594 Q2514.4063,2511.0781 2513.7813,2511.0781 Q2512.4375,2511.0781 2511.75,2512.1563 Q2511.0625,2513.2188 2511.0625,2515.3125 Q2511.0625,2517.4063 2511.75,2518.4844 Q2512.4375,2519.5469 2513.7813,2519.5469 Q2514.4063,2519.5469 2515,2519.2813 Q2515.5938,2519 2516.2188,2518.4219 L2516.2188,2521.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="2533.75" y="2520.156">LightForest</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2355" x2="2742" y1="2531.5" y2="2531.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2355" x2="2742" y1="2539.5" y2="2539.5"/><ellipse cx="2365" cy="2550.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2374" y="2555.2589">LightForest(int seed)</text><ellipse cx="2365" cy="2565.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2374" y="2570.2408">getPlant(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="2365" cy="2580.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="2374" y="2585.2227">getTopBlock(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="2365" cy="2595.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="2374" y="2600.2046">getUnderWaterBlock(Rand&amp; rand) : ChunkBlock {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2362" y="2607.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="2374" y="2615.1865">getNoiseParameters() : NoiseParameters</text><ellipse cx="2365" cy="2625.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="2374" y="2630.1684">makeTree(Rand&amp; rand, Chunk&amp; chunk, int x, int y, int z) : void {query}</text><!--MD5=[7e20e022571e30ec1001cf6eabd7f3e2]
class Model--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="287.7102" id="Model" style="stroke: #A80036; stroke-width: 1.5;" width="360" x="6038.5" y="3839"/><ellipse cx="6196.75" cy="3855" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6199.7188,3860.6406 Q6199.1406,3860.9375 6198.5,3861.0781 Q6197.8594,3861.2344 6197.1563,3861.2344 Q6194.6563,3861.2344 6193.3281,3859.5938 Q6192.0156,3857.9375 6192.0156,3854.8125 Q6192.0156,3851.6875 6193.3281,3850.0313 Q6194.6563,3848.375 6197.1563,3848.375 Q6197.8594,3848.375 6198.5,3848.5313 Q6199.1563,3848.6875 6199.7188,3848.9844 L6199.7188,3851.7031 Q6199.0938,3851.125 6198.5,3850.8594 Q6197.9063,3850.5781 6197.2813,3850.5781 Q6195.9375,3850.5781 6195.25,3851.6563 Q6194.5625,3852.7188 6194.5625,3854.8125 Q6194.5625,3856.9063 6195.25,3857.9844 Q6195.9375,3859.0469 6197.2813,3859.0469 Q6197.9063,3859.0469 6198.5,3858.7813 Q6199.0938,3858.5 6199.7188,3857.9219 L6199.7188,3860.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="6217.25" y="3859.656">Model</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6039.5" x2="6397.5" y1="3871" y2="3871"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6046.5" y="3879"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="6058.5" y="3886.7589">m_renderInfo : RenderInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6046.5" y="3893.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6058.5" y="3901.7408">m_vboCount : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6046.5" y="3908.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6058.5" y="3916.7227">m_buffers : std::vector&lt;GLuint&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6039.5" x2="6397.5" y1="3923.9457" y2="3923.9457"/><ellipse cx="6049.5" cy="3934.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="6058.5" y="3939.7046">Model()</text><ellipse cx="6049.5" cy="3949.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6058.5" y="3954.6865">Model(const Mesh&amp; mesh)</text><ellipse cx="6049.5" cy="3964.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="6058.5" y="3969.6684">Model(Model&amp;&amp; other)</text><ellipse cx="6049.5" cy="3979.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="6058.5" y="3984.6502">~Model()</text><ellipse cx="6049.5" cy="3994.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6058.5" y="3999.6321">operator=(Model&amp;&amp; other) : Model&amp;</text><ellipse cx="6049.5" cy="4009.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="6058.5" y="4014.614">getRenderInfo() : RenderInfo&amp; {query}</text><ellipse cx="6049.5" cy="4024.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="6058.5" y="4029.5959">getIndicesCount() : int {query}</text><ellipse cx="6049.5" cy="4039.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6058.5" y="4044.5778">addData(const Mesh&amp; mesh) : void</text><ellipse cx="6049.5" cy="4054.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="6058.5" y="4059.5597">addEBO(const std::vector&lt;GLuint&gt;&amp; indices) : void</text><ellipse cx="6049.5" cy="4069.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="6058.5" y="4074.5416">addVBO(int dimensions, const std::vector&lt;GLfloat&gt;&amp; data) : void</text><ellipse cx="6049.5" cy="4084.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="6058.5" y="4089.5235">bindVAO() : void {query}</text><ellipse cx="6049.5" cy="4099.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="6058.5" y="4104.5053">deleteData() : void</text><ellipse cx="6049.5" cy="4114.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="6058.5" y="4119.4872">genVAO() : void</text><!--MD5=[49f8d8da3583f83e690765d05a5099de]
class NoiseGenerator--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="182.837" id="NoiseGenerator" style="stroke: #A80036; stroke-width: 1.5;" width="345" x="2778" y="2477"/><ellipse cx="2901.25" cy="2493" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2904.2188,2498.6406 Q2903.6406,2498.9375 2903,2499.0781 Q2902.3594,2499.2344 2901.6563,2499.2344 Q2899.1563,2499.2344 2897.8281,2497.5938 Q2896.5156,2495.9375 2896.5156,2492.8125 Q2896.5156,2489.6875 2897.8281,2488.0313 Q2899.1563,2486.375 2901.6563,2486.375 Q2902.3594,2486.375 2903,2486.5313 Q2903.6563,2486.6875 2904.2188,2486.9844 L2904.2188,2489.7031 Q2903.5938,2489.125 2903,2488.8594 Q2902.4063,2488.5781 2901.7813,2488.5781 Q2900.4375,2488.5781 2899.75,2489.6563 Q2899.0625,2490.7188 2899.0625,2492.8125 Q2899.0625,2494.9063 2899.75,2495.9844 Q2900.4375,2497.0469 2901.7813,2497.0469 Q2902.4063,2497.0469 2903,2496.7813 Q2903.5938,2496.5 2904.2188,2495.9219 L2904.2188,2498.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="2921.75" y="2497.656">NoiseGenerator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2779" x2="3122" y1="2509" y2="2509"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2786" y="2517"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="2798" y="2524.7589">m_noiseParameters : NoiseParameters</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2786" y="2531.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2798" y="2539.7408">m_seed : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2779" x2="3122" y1="2546.9638" y2="2546.9638"/><ellipse cx="2789" cy="2557.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2798" y="2562.7227">NoiseGenerator(int seed)</text><ellipse cx="2789" cy="2572.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="2798" y="2577.7046">getHeight(int x, int z, int chunkX, int chunkZ) : double {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2786" y="2584.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2798" y="2592.6865">getNoise(int n) : double {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2786" y="2599.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="2798" y="2607.6684">getNoise(double x, double z) : double {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2786" y="2614.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="2798" y="2622.6502">lerp(double a, double b, double z) : double {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2786" y="2629.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2798" y="2637.6321">noise(double x, double z) : double {query}</text><ellipse cx="2789" cy="2647.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="2798" y="2652.614">setParameters(const NoiseParameters&amp; params) : void</text><!--MD5=[c4384ab134cd165679fb52a29a30d06e]
class NonMovable--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="62.9819" id="NonMovable" style="stroke: #A80036; stroke-width: 1.5;" width="103" x="7294" y="714.5"/><ellipse cx="7309" cy="730.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7311.9688,736.1406 Q7311.3906,736.4375 7310.75,736.5781 Q7310.1094,736.7344 7309.4063,736.7344 Q7306.9063,736.7344 7305.5781,735.0938 Q7304.2656,733.4375 7304.2656,730.3125 Q7304.2656,727.1875 7305.5781,725.5313 Q7306.9063,723.875 7309.4063,723.875 Q7310.1094,723.875 7310.75,724.0313 Q7311.4063,724.1875 7311.9688,724.4844 L7311.9688,727.2031 Q7311.3438,726.625 7310.75,726.3594 Q7310.1563,726.0781 7309.5313,726.0781 Q7308.1875,726.0781 7307.5,727.1563 Q7306.8125,728.2188 7306.8125,730.3125 Q7306.8125,732.4063 7307.5,733.4844 Q7308.1875,734.5469 7309.5313,734.5469 Q7310.1563,734.5469 7310.75,734.2813 Q7311.3438,734 7311.9688,733.4219 L7311.9688,736.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="7323" y="735.156">NonMovable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7295" x2="7396" y1="746.5" y2="746.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7295" x2="7396" y1="754.5" y2="754.5"/><polygon fill="#FFFF44" points="7305,760.5,7309,764.5,7305,768.5,7301,764.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="7314" y="770.2589">NonMovable()</text><!--MD5=[d549b14aa1a35d02a53729700013dd34]
class OceanBiome--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="OceanBiome" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="3158" y="2499.5"/><ellipse cx="3312.25" cy="2515.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3315.2188,2521.1406 Q3314.6406,2521.4375 3314,2521.5781 Q3313.3594,2521.7344 3312.6563,2521.7344 Q3310.1563,2521.7344 3308.8281,2520.0938 Q3307.5156,2518.4375 3307.5156,2515.3125 Q3307.5156,2512.1875 3308.8281,2510.5313 Q3310.1563,2508.875 3312.6563,2508.875 Q3313.3594,2508.875 3314,2509.0313 Q3314.6563,2509.1875 3315.2188,2509.4844 L3315.2188,2512.2031 Q3314.5938,2511.625 3314,2511.3594 Q3313.4063,2511.0781 3312.7813,2511.0781 Q3311.4375,2511.0781 3310.75,2512.1563 Q3310.0625,2513.2188 3310.0625,2515.3125 Q3310.0625,2517.4063 3310.75,2518.4844 Q3311.4375,2519.5469 3312.7813,2519.5469 Q3313.4063,2519.5469 3314,2519.2813 Q3314.5938,2519 3315.2188,2518.4219 L3315.2188,2521.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="3332.75" y="2520.156">OceanBiome</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3159" x2="3546" y1="2531.5" y2="2531.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3159" x2="3546" y1="2539.5" y2="2539.5"/><ellipse cx="3169" cy="2550.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3178" y="2555.2589">OceanBiome(int seed)</text><ellipse cx="3169" cy="2565.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="3178" y="2570.2408">getPlant(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="3169" cy="2580.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="3178" y="2585.2227">getTopBlock(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="3169" cy="2595.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="3178" y="2600.2046">getUnderWaterBlock(Rand&amp; rand) : ChunkBlock {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3166" y="2607.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3178" y="2615.1865">getNoiseParameters() : NoiseParameters</text><ellipse cx="3169" cy="2625.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="3178" y="2630.1684">makeTree(Rand&amp; rand, Chunk&amp; chunk, int x, int y, int z) : void {query}</text><!--MD5=[2cb47ba637a0d19583e6199456f6ad0b]
class Player--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="452.511" id="Player" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="1953" y="1874"/><ellipse cx="2125.75" cy="1890" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2128.7188,1895.6406 Q2128.1406,1895.9375 2127.5,1896.0781 Q2126.8594,1896.2344 2126.1563,1896.2344 Q2123.6563,1896.2344 2122.3281,1894.5938 Q2121.0156,1892.9375 2121.0156,1889.8125 Q2121.0156,1886.6875 2122.3281,1885.0313 Q2123.6563,1883.375 2126.1563,1883.375 Q2126.8594,1883.375 2127.5,1883.5313 Q2128.1563,1883.6875 2128.7188,1883.9844 L2128.7188,1886.7031 Q2128.0938,1886.125 2127.5,1885.8594 Q2126.9063,1885.5781 2126.2813,1885.5781 Q2124.9375,1885.5781 2124.25,1886.6563 Q2123.5625,1887.7188 2123.5625,1889.8125 Q2123.5625,1891.9063 2124.25,1892.9844 Q2124.9375,1894.0469 2126.2813,1894.0469 Q2126.9063,1894.0469 2127.5,1893.7813 Q2128.0938,1893.5 2128.7188,1892.9219 L2128.7188,1895.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="2146.25" y="1894.656">Player</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954" x2="2341" y1="1906" y2="1906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1973" y="1921.7589">m_flyKey : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="1928.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1973" y="1936.7408">m_itemDown : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="1943.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1973" y="1951.7227">m_itemUp : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="1958.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="1966.7046">m_num1 : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="1973.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="1981.6865">m_num2 : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="1988.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="1996.6684">m_num3 : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2003.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="2011.6502">m_num4 : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2018.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="2026.6321">m_num5 : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2033.8551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1973" y="2041.614">m_slow : ToggleKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2048.837"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1973" y="2056.5959">m_isFlying : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2063.8189"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1973" y="2071.5778">m_isOnGround : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2078.8008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1973" y="2086.5597">m_isSneak : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2093.7827"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1973" y="2101.5416">m_acceleration : glm::vec3</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2108.7645"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1973" y="2116.5235">m_heldItem : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2123.7464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1973" y="2131.5053">m_posPrint : sf::Text</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2138.7283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1973" y="2146.4872">m_items : std::vector&lt;ItemStack&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2153.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1973" y="2161.4691">m_itemText : std::vector&lt;sf::Text&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954" x2="2341" y1="2168.6921" y2="2168.6921"/><ellipse cx="1964" cy="2179.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="1973" y="2184.451">Player()</text><ellipse cx="1964" cy="2194.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1973" y="2199.4329">getHeldItems() : ItemStack&amp;</text><ellipse cx="1964" cy="2209.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1973" y="2214.4148">addItem(const Material&amp; material) : void</text><ellipse cx="1964" cy="2224.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="1973" y="2229.3967">collide(World&amp; world, const glm::vec3&amp; vel, float dt) : void</text><ellipse cx="1964" cy="2239.6196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1973" y="2244.3786">draw(RenderMaster&amp; master) : void</text><ellipse cx="1964" cy="2254.6015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="1973" y="2259.3604">handleInput(const sf::Window&amp; window, Keyboard&amp; keyboard) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2266.5834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="1973" y="2274.3423">jump() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2281.5653"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1973" y="2289.3242">keyboardInput(Keyboard&amp; keyboard) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="2296.5472"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1973" y="2304.3061">mouseInput(const sf::Window&amp; window) : void</text><ellipse cx="1964" cy="2314.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1973" y="2319.288">update(float dt, World&amp; wolrd) : void</text><!--MD5=[6f2745a2d2161931b6e87616fb9590a1]
class PlayerDigEvent--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="PlayerDigEvent" style="stroke: #A80036; stroke-width: 1.5;" width="465" x="2934" y="1676"/><ellipse cx="3119.75" cy="1692" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3122.7188,1697.6406 Q3122.1406,1697.9375 3121.5,1698.0781 Q3120.8594,1698.2344 3120.1563,1698.2344 Q3117.6563,1698.2344 3116.3281,1696.5938 Q3115.0156,1694.9375 3115.0156,1691.8125 Q3115.0156,1688.6875 3116.3281,1687.0313 Q3117.6563,1685.375 3120.1563,1685.375 Q3120.8594,1685.375 3121.5,1685.5313 Q3122.1563,1685.6875 3122.7188,1685.9844 L3122.7188,1688.7031 Q3122.0938,1688.125 3121.5,1687.8594 Q3120.9063,1687.5781 3120.2813,1687.5781 Q3118.9375,1687.5781 3118.25,1688.6563 Q3117.5625,1689.7188 3117.5625,1691.8125 Q3117.5625,1693.9063 3118.25,1694.9844 Q3118.9375,1696.0469 3120.2813,1696.0469 Q3120.9063,1696.0469 3121.5,1695.7813 Q3122.0938,1695.5 3122.7188,1694.9219 L3122.7188,1697.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="3140.25" y="1696.656">PlayerDigEvent</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2935" x2="3398" y1="1708" y2="1708"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2942" y="1716"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2954" y="1723.7589">m_pPlayer : Player*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2942" y="1730.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2954" y="1738.7408">m_digSpot : glm::vec3</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2942" y="1745.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2954" y="1753.7227">m_buttonPress : sf::Mouse::Button</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2935" x2="3398" y1="1760.9457" y2="1760.9457"/><ellipse cx="2945" cy="1771.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="2954" y="1776.7046">PlayerDigEvent(sf::Mouse::Button button, const glm::vec3&amp; location, Player&amp; player)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2942" y="1783.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2954" y="1791.6865">dig(World&amp; world) : void</text><ellipse cx="2945" cy="1801.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2954" y="1806.6684">handle(World&amp; world) : void</text><!--MD5=[7106e3dd2a1ebea13110e48d38bd8276]
class Random--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="Random" style="stroke: #A80036; stroke-width: 1.5;" width="323" x="288" y="93.5"/><ellipse cx="303" cy="109.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M305.9688,115.1406 Q305.3906,115.4375 304.75,115.5781 Q304.1094,115.7344 303.4063,115.7344 Q300.9063,115.7344 299.5781,114.0938 Q298.2656,112.4375 298.2656,109.3125 Q298.2656,106.1875 299.5781,104.5313 Q300.9063,102.875 303.4063,102.875 Q304.1094,102.875 304.75,103.0313 Q305.4063,103.1875 305.9688,103.4844 L305.9688,106.2031 Q305.3438,105.625 304.75,105.3594 Q304.1563,105.0781 303.5313,105.0781 Q302.1875,105.0781 301.5,106.1563 Q300.8125,107.2188 300.8125,109.3125 Q300.8125,111.4063 301.5,112.4844 Q302.1875,113.5469 303.5313,113.5469 Q304.1563,113.5469 304.75,113.2813 Q305.3438,113 305.9688,112.4219 L305.9688,115.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="317" y="114.156">Random</text><rect fill="#FFFFFF" height="18.3441" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="243" x="371" y="90.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241" x="372" y="104.3281">template&lt;typename REngine=std::mt19937&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="289" x2="610" y1="125.5" y2="125.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="296" y="133.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="308" y="141.2589">m_randomEngine : REngine</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="289" x2="610" y1="148.4819" y2="148.4819"/><ellipse cx="299" cy="159.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="308" y="164.2408">Random(int n)</text><ellipse cx="299" cy="174.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="308" y="179.2227">intInRange(T low, T high) : T</text><ellipse cx="299" cy="189.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="308" y="194.2046">setSeed(int seed) : void</text><!--MD5=[f679cc84e8c2bcd2cf73fdd5cc46539d]
class RandomSingleton--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="RandomSingleton" style="stroke: #A80036; stroke-width: 1.5;" width="194" x="7515.5" y="1440.5"/><ellipse cx="7559.3" cy="1456.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7562.2688,1462.1406 Q7561.6906,1462.4375 7561.05,1462.5781 Q7560.4094,1462.7344 7559.7063,1462.7344 Q7557.2063,1462.7344 7555.8781,1461.0938 Q7554.5656,1459.4375 7554.5656,1456.3125 Q7554.5656,1453.1875 7555.8781,1451.5313 Q7557.2063,1449.875 7559.7063,1449.875 Q7560.4094,1449.875 7561.05,1450.0313 Q7561.7063,1450.1875 7562.2688,1450.4844 L7562.2688,1453.2031 Q7561.6438,1452.625 7561.05,1452.3594 Q7560.4563,1452.0781 7559.8313,1452.0781 Q7558.4875,1452.0781 7557.8,1453.1563 Q7557.1125,1454.2188 7557.1125,1456.3125 Q7557.1125,1458.4063 7557.8,1459.4844 Q7558.4875,1460.5469 7559.8313,1460.5469 Q7560.4563,1460.5469 7561.05,1460.2813 Q7561.6438,1460 7562.2688,1459.4219 L7562.2688,1462.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="7579.7" y="1461.156">RandomSingleton</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7516.5" x2="7708.5" y1="1472.5" y2="1472.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7523.5" y="1480.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="7535.5" y="1488.2589">m_randomEngine : std::mt19937</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7516.5" x2="7708.5" y1="1495.4819" y2="1495.4819"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7523.5" y="1503.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="7535.5" y="1511.2408">RandomSingleton()</text><ellipse cx="7526.5" cy="1521.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="7535.5" y="1526.2227">get() : RandomSingleton&amp;</text><ellipse cx="7526.5" cy="1536.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="7535.5" y="1541.2046">intInRange(T low, T high) : T</text><!--MD5=[740767bd72024d5ab947380b301ba908]
class Ray--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="152.8732" id="Ray" style="stroke: #A80036; stroke-width: 1.5;" width="329" x="6" y="389"/><ellipse cx="156.25" cy="405" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M159.2188,410.6406 Q158.6406,410.9375 158,411.0781 Q157.3594,411.2344 156.6563,411.2344 Q154.1563,411.2344 152.8281,409.5938 Q151.5156,407.9375 151.5156,404.8125 Q151.5156,401.6875 152.8281,400.0313 Q154.1563,398.375 156.6563,398.375 Q157.3594,398.375 158,398.5313 Q158.6563,398.6875 159.2188,398.9844 L159.2188,401.7031 Q158.5938,401.125 158,400.8594 Q157.4063,400.5781 156.7813,400.5781 Q155.4375,400.5781 154.75,401.6563 Q154.0625,402.7188 154.0625,404.8125 Q154.0625,406.9063 154.75,407.9844 Q155.4375,409.0469 156.7813,409.0469 Q157.4063,409.0469 158,408.7813 Q158.5938,408.5 159.2188,407.9219 L159.2188,410.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="20" x="176.75" y="409.656">Ray</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="334" y1="421" y2="421"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="429"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="26" y="436.7589">m_direction : glm::vec3</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="443.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="451.7408">m_rayEnd : glm::vec3</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="458.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="466.7227">m_rayStart : glm::vec3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="334" y1="473.9457" y2="473.9457"/><ellipse cx="17" cy="484.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26" y="489.7046">Ray(const glm::vec3&amp; position, const glm::vec3&amp; direction)</text><ellipse cx="17" cy="499.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="26" y="504.6865">getLength() : float {query}</text><ellipse cx="17" cy="514.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="519.6684">getEnd() : glm::vec3&amp; {query}</text><ellipse cx="17" cy="529.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="26" y="534.6502">step(float scale) : void</text><!--MD5=[f4080e1a42c7d2c116921c4c4aa8fd45]
class RenderMaster--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="167.8551" id="RenderMaster" style="stroke: #A80036; stroke-width: 1.5;" width="368" x="4040.5" y="3315.5"/><ellipse cx="4180.25" cy="3331.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4183.2188,3337.1406 Q4182.6406,3337.4375 4182,3337.5781 Q4181.3594,3337.7344 4180.6563,3337.7344 Q4178.1563,3337.7344 4176.8281,3336.0938 Q4175.5156,3334.4375 4175.5156,3331.3125 Q4175.5156,3328.1875 4176.8281,3326.5313 Q4178.1563,3324.875 4180.6563,3324.875 Q4181.3594,3324.875 4182,3325.0313 Q4182.6563,3325.1875 4183.2188,3325.4844 L4183.2188,3328.2031 Q4182.5938,3327.625 4182,3327.3594 Q4181.4063,3327.0781 4180.7813,3327.0781 Q4179.4375,3327.0781 4178.75,3328.1563 Q4178.0625,3329.2188 4178.0625,3331.3125 Q4178.0625,3333.4063 4178.75,3334.4844 Q4179.4375,3335.5469 4180.7813,3335.5469 Q4181.4063,3335.5469 4182,3335.2813 Q4182.5938,3335 4183.2188,3334.4219 L4183.2188,3337.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="4200.75" y="3336.156">RenderMaster</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4041.5" x2="4407.5" y1="3347.5" y2="3347.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4048.5" y="3355.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4060.5" y="3363.2589">m_chunkRenderer : ChunkRenderer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4048.5" y="3370.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4060.5" y="3378.2408">m_floraRenderer : FloraRenderer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4048.5" y="3385.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4060.5" y="3393.2227">m_skyboxRenderer : SkyboxRenderer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4048.5" y="3400.4457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="4060.5" y="3408.2046">m_waterRenderer : WaterRenderer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4048.5" y="3415.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4060.5" y="3423.1865">m_drawBox : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4041.5" x2="4407.5" y1="3430.4094" y2="3430.4094"/><ellipse cx="4051.5" cy="3441.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="4060.5" y="3446.1684">drawChunk(const ChunkSection&amp; chunk) : void</text><ellipse cx="4051.5" cy="3456.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="4060.5" y="3461.1502">drawSky() : void</text><ellipse cx="4051.5" cy="3471.3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="4060.5" y="3476.1321">finishRender(sf::Window&amp; window, const Camera&amp; camera) : void</text><!--MD5=[03b04ed89c1f7ac76f6e629bfb39a406]
class Shader--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="212.8008" id="Shader" style="stroke: #A80036; stroke-width: 1.5;" width="383" x="5879" y="3293"/><ellipse cx="6047.25" cy="3309" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6047.3594,3304.3438 L6046.2031,3309.4219 L6048.5313,3309.4219 L6047.3594,3304.3438 Z M6045.875,3302.1094 L6048.8594,3302.1094 L6052.2188,3314.5 L6049.7656,3314.5 L6049,3311.4375 L6045.7188,3311.4375 L6044.9688,3314.5 L6042.5313,3314.5 L6045.875,3302.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="6067.75" y="3313.656">Shader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5880" x2="6261" y1="3325" y2="3325"/><polygon fill="none" points="5890,3331,5894,3335,5890,3339,5886,3335" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="5899" y="3340.7589">m_id : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5880" x2="6261" y1="3347.9819" y2="3347.9819"/><ellipse cx="5890" cy="3358.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="5899" y="3363.7408">Shader(const std::string&amp; vertexFile, const std::string&amp; fragmentFile)</text><ellipse cx="5890" cy="3373.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="5899" y="3378.7227">~Shader()</text><polygon fill="#FFFF44" points="5890,3383.9457,5894,3387.9457,5890,3391.9457,5886,3387.9457" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="5899" y="3393.7046">getUniforms() : void</text><ellipse cx="5890" cy="3403.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="5899" y="3408.6865">loadFloat(GLuint location, float value) : void</text><ellipse cx="5890" cy="3418.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5899" y="3423.6684">loadInt(GLuint location, int value) : void</text><ellipse cx="5890" cy="3433.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="5899" y="3438.6502">loadMatrix4(GLuint location, const glm::mat4&amp; matrix) : void</text><ellipse cx="5890" cy="3448.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="5899" y="3453.6321">loadVector2(GLuint location, const glm::vec2&amp; vect) : void</text><ellipse cx="5890" cy="3463.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="5899" y="3468.614">loadVector3(GLuint location, const glm::vec3&amp; vect) : void</text><ellipse cx="5890" cy="3478.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="5899" y="3483.5959">loadVector4(GLuint location, const glm::vec4&amp; vect) : void</text><ellipse cx="5890" cy="3493.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5899" y="3498.5778">useProgram() : void {query}</text><!--MD5=[2f4e497837a991172d40b04b7a7d0ca2]
class Singleton--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="48" id="Singleton" style="stroke: #A80036; stroke-width: 1.5;" width="84" x="7303.5" y="1085"/><ellipse cx="7318.5" cy="1101" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7321.4688,1106.6406 Q7320.8906,1106.9375 7320.25,1107.0781 Q7319.6094,1107.2344 7318.9063,1107.2344 Q7316.4063,1107.2344 7315.0781,1105.5938 Q7313.7656,1103.9375 7313.7656,1100.8125 Q7313.7656,1097.6875 7315.0781,1096.0313 Q7316.4063,1094.375 7318.9063,1094.375 Q7319.6094,1094.375 7320.25,1094.5313 Q7320.9063,1094.6875 7321.4688,1094.9844 L7321.4688,1097.7031 Q7320.8438,1097.125 7320.25,1096.8594 Q7319.6563,1096.5781 7319.0313,1096.5781 Q7317.6875,1096.5781 7317,1097.6563 Q7316.3125,1098.7188 7316.3125,1100.8125 Q7316.3125,1102.9063 7317,1103.9844 Q7317.6875,1105.0469 7319.0313,1105.0469 Q7319.6563,1105.0469 7320.25,1104.7813 Q7320.8438,1104.5 7321.4688,1103.9219 L7321.4688,1106.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="7332.5" y="1105.656">Singleton</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7304.5" x2="7386.5" y1="1117" y2="1117"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7304.5" x2="7386.5" y1="1125" y2="1125"/><!--MD5=[f131bbbf88493b935dff34f3b1889111]
class SkyboxRenderer--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="122.9094" id="SkyboxRenderer" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="6490.5" y="3618.5"/><ellipse cx="6550.75" cy="3634.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6553.7188,3640.1406 Q6553.1406,3640.4375 6552.5,3640.5781 Q6551.8594,3640.7344 6551.1563,3640.7344 Q6548.6563,3640.7344 6547.3281,3639.0938 Q6546.0156,3637.4375 6546.0156,3634.3125 Q6546.0156,3631.1875 6547.3281,3629.5313 Q6548.6563,3627.875 6551.1563,3627.875 Q6551.8594,3627.875 6552.5,3628.0313 Q6553.1563,3628.1875 6553.7188,3628.4844 L6553.7188,3631.2031 Q6553.0938,3630.625 6552.5,3630.3594 Q6551.9063,3630.0781 6551.2813,3630.0781 Q6549.9375,3630.0781 6549.25,3631.1563 Q6548.5625,3632.2188 6548.5625,3634.3125 Q6548.5625,3636.4063 6549.25,3637.4844 Q6549.9375,3638.5469 6551.2813,3638.5469 Q6551.9063,3638.5469 6552.5,3638.2813 Q6553.0938,3638 6553.7188,3637.4219 L6553.7188,3640.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="6571.25" y="3639.156">SkyboxRenderer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6491.5" x2="6709.5" y1="3650.5" y2="3650.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6498.5" y="3658.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="6510.5" y="3666.2589">m_cubeTexture : CubeTexture</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6498.5" y="3673.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6510.5" y="3681.2408">m_skyCube : Model</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6498.5" y="3688.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6510.5" y="3696.2227">m_shader : SkyboxShader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6491.5" x2="6709.5" y1="3703.4457" y2="3703.4457"/><ellipse cx="6501.5" cy="3714.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6510.5" y="3719.2046">SkyboxRenderer()</text><ellipse cx="6501.5" cy="3729.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="6510.5" y="3734.1865">render(const Camera&amp; camera) : void</text><!--MD5=[18438768be350d375fdf12e3673038ed]
class SkyboxShader--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="SkyboxShader" style="stroke: #A80036; stroke-width: 1.5;" width="291" x="6455" y="3914"/><ellipse cx="6556.75" cy="3930" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6559.7188,3935.6406 Q6559.1406,3935.9375 6558.5,3936.0781 Q6557.8594,3936.2344 6557.1563,3936.2344 Q6554.6563,3936.2344 6553.3281,3934.5938 Q6552.0156,3932.9375 6552.0156,3929.8125 Q6552.0156,3926.6875 6553.3281,3925.0313 Q6554.6563,3923.375 6557.1563,3923.375 Q6557.8594,3923.375 6558.5,3923.5313 Q6559.1563,3923.6875 6559.7188,3923.9844 L6559.7188,3926.7031 Q6559.0938,3926.125 6558.5,3925.8594 Q6557.9063,3925.5781 6557.2813,3925.5781 Q6555.9375,3925.5781 6555.25,3926.6563 Q6554.5625,3927.7188 6554.5625,3929.8125 Q6554.5625,3931.9063 6555.25,3932.9844 Q6555.9375,3934.0469 6557.2813,3934.0469 Q6557.9063,3934.0469 6558.5,3933.7813 Q6559.0938,3933.5 6559.7188,3932.9219 L6559.7188,3935.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="6577.25" y="3934.656">SkyboxShader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6456" x2="6745" y1="3946" y2="3946"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6463" y="3954"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6475" y="3961.7589">m_locationProjection : GLuint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6463" y="3968.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="6475" y="3976.7408">m_locationView : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6456" x2="6745" y1="3983.9638" y2="3983.9638"/><ellipse cx="6466" cy="3994.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="6475" y="3999.7227">SkyboxShader()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6463" y="4006.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6475" y="4014.7046">getUniforms() : void</text><ellipse cx="6466" cy="4024.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="6475" y="4029.6865">loadProjectionMatrix(const glm::mat4&amp; proj) : void</text><ellipse cx="6466" cy="4039.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="6475" y="4044.6684">loadViewMatrix(glm::mat4 viewMatrix) : void</text><!--MD5=[ce695e8a477a757601fd4b52ccc6fbc9]
class StateBase--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="167.8551" id="StateBase" style="stroke: #A80036; stroke-width: 1.5;" width="205" x="1943" y="381.5"/><ellipse cx="2015.25" cy="397.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2015.3594,392.8438 L2014.2031,397.9219 L2016.5313,397.9219 L2015.3594,392.8438 Z M2013.875,390.6094 L2016.8594,390.6094 L2020.2188,403 L2017.7656,403 L2017,399.9375 L2013.7188,399.9375 L2012.9688,403 L2010.5313,403 L2013.875,390.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="2035.75" y="402.156">StateBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1944" x2="2147" y1="413.5" y2="413.5"/><polygon fill="none" points="1954,419.5,1958,423.5,1954,427.5,1950,423.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1963" y="429.2589">m_pApplication : Application*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1944" x2="2147" y1="436.4819" y2="436.4819"/><ellipse cx="1954" cy="447.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1963" y="452.2408">StateBase(Application&amp; app)</text><ellipse cx="1954" cy="462.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="1963" y="467.2227">~StateBase()</text><ellipse cx="1954" cy="477.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="1963" y="482.2046">handleEvent(sf::Event e) : void</text><ellipse cx="1954" cy="492.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="1963" y="497.1865">handleInput() : void</text><ellipse cx="1954" cy="507.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="1963" y="512.1684">onOpen() : void</text><ellipse cx="1954" cy="522.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="179" x="1963" y="527.1502">render(RenderMaster&amp; renderer) : void</text><ellipse cx="1954" cy="537.3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="1963" y="542.1321">update(float deltaTime) : void</text><!--MD5=[0ce154cd9b5895ef2c31c01f1ce48e7d]
class StatePlay--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="197.8189" id="StatePlay" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="2383.5" y="647"/><ellipse cx="2496.25" cy="663" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2499.2188,668.6406 Q2498.6406,668.9375 2498,669.0781 Q2497.3594,669.2344 2496.6563,669.2344 Q2494.1563,669.2344 2492.8281,667.5938 Q2491.5156,665.9375 2491.5156,662.8125 Q2491.5156,659.6875 2492.8281,658.0313 Q2494.1563,656.375 2496.6563,656.375 Q2497.3594,656.375 2498,656.5313 Q2498.6563,656.6875 2499.2188,656.9844 L2499.2188,659.7031 Q2498.5938,659.125 2498,658.8594 Q2497.4063,658.5781 2496.7813,658.5781 Q2495.4375,658.5781 2494.75,659.6563 Q2494.0625,660.7188 2494.0625,662.8125 Q2494.0625,664.9063 2494.75,665.9844 Q2495.4375,667.0469 2496.7813,667.0469 Q2497.4063,667.0469 2498,666.7813 Q2498.5938,666.5 2499.2188,665.9219 L2499.2188,668.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="2516.75" y="667.656">StatePlay</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2384.5" x2="2668.5" y1="679" y2="679"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2391.5" y="687"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2403.5" y="694.7589">m_fpsCounter : FPSCounter</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2391.5" y="701.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2403.5" y="709.7408">m_keyboard : Keyboard</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2391.5" y="716.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2403.5" y="724.7227">m_player : Player</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2391.5" y="731.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2403.5" y="739.7046">m_world : World</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2384.5" x2="2668.5" y1="746.9276" y2="746.9276"/><ellipse cx="2394.5" cy="757.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="2403.5" y="762.6865">StatePlay(Application&amp; app, const Config&amp; config)</text><ellipse cx="2394.5" cy="772.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2403.5" y="777.6684">handleEvent(sf::Event e) : void</text><ellipse cx="2394.5" cy="787.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2403.5" y="792.6502">handleInput() : void</text><ellipse cx="2394.5" cy="802.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2403.5" y="807.6321">onOpen() : void</text><ellipse cx="2394.5" cy="817.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2403.5" y="822.614">render(RenderMaster&amp; renderer) : void</text><ellipse cx="2394.5" cy="832.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2403.5" y="837.5959">update(float deltaTime) : void</text><!--MD5=[5a7f6f7cbb5010f1d41ea7d28dfcbbc6]
class StructureBuilder--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="152.8732" id="StructureBuilder" style="stroke: #A80036; stroke-width: 1.5;" width="380" x="6441.5" y="2492"/><ellipse cx="6581.25" cy="2508" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6584.2188,2513.6406 Q6583.6406,2513.9375 6583,2514.0781 Q6582.3594,2514.2344 6581.6563,2514.2344 Q6579.1563,2514.2344 6577.8281,2512.5938 Q6576.5156,2510.9375 6576.5156,2507.8125 Q6576.5156,2504.6875 6577.8281,2503.0313 Q6579.1563,2501.375 6581.6563,2501.375 Q6582.3594,2501.375 6583,2501.5313 Q6583.6563,2501.6875 6584.2188,2501.9844 L6584.2188,2504.7031 Q6583.5938,2504.125 6583,2503.8594 Q6582.4063,2503.5781 6581.7813,2503.5781 Q6580.4375,2503.5781 6579.75,2504.6563 Q6579.0625,2505.7188 6579.0625,2507.8125 Q6579.0625,2509.9063 6579.75,2510.9844 Q6580.4375,2512.0469 6581.7813,2512.0469 Q6582.4063,2512.0469 6583,2511.7813 Q6583.5938,2511.5 6584.2188,2510.9219 L6584.2188,2513.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="6601.75" y="2512.656">StructureBuilder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6442.5" x2="6820.5" y1="2524" y2="2524"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6449.5" y="2532"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6461.5" y="2539.7589">m_blocks : std::vector&lt;Block&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6442.5" x2="6820.5" y1="2546.9819" y2="2546.9819"/><ellipse cx="6452.5" cy="2557.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="6461.5" y="2562.7408">addBlock(int x, int y, int z, BlockId block) : void</text><ellipse cx="6452.5" cy="2572.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="6461.5" y="2577.7227">build(Chunk&amp; chunk) : void</text><ellipse cx="6452.5" cy="2587.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="6461.5" y="2592.7046">fill(int y, int xStart, int xEnd, int zStart, int zEnd, BlockId block) : void</text><ellipse cx="6452.5" cy="2602.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="6461.5" y="2607.6865">makeColumn(int x, int z, int yStart, int height, BlockId block) : void</text><ellipse cx="6452.5" cy="2617.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="6461.5" y="2622.6684">makeRowX(int xStart, int xEnd, int y, int z, BlockId block) : void</text><ellipse cx="6452.5" cy="2632.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="6461.5" y="2637.6502">makeRowZ(int zStart, int zEnd, int x, int y, BlockId block) : void</text><!--MD5=[83fa6d5f1136020ee0dce6e353662da8]
class SuperFlatGenerator--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="SuperFlatGenerator" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="2845.5" y="2061.5"/><ellipse cx="2907.75" cy="2077.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2910.7188,2083.1406 Q2910.1406,2083.4375 2909.5,2083.5781 Q2908.8594,2083.7344 2908.1563,2083.7344 Q2905.6563,2083.7344 2904.3281,2082.0938 Q2903.0156,2080.4375 2903.0156,2077.3125 Q2903.0156,2074.1875 2904.3281,2072.5313 Q2905.6563,2070.875 2908.1563,2070.875 Q2908.8594,2070.875 2909.5,2071.0313 Q2910.1563,2071.1875 2910.7188,2071.4844 L2910.7188,2074.2031 Q2910.0938,2073.625 2909.5,2073.3594 Q2908.9063,2073.0781 2908.2813,2073.0781 Q2906.9375,2073.0781 2906.25,2074.1563 Q2905.5625,2075.2188 2905.5625,2077.3125 Q2905.5625,2079.4063 2906.25,2080.4844 Q2906.9375,2081.5469 2908.2813,2081.5469 Q2908.9063,2081.5469 2909.5,2081.2813 Q2910.0938,2081 2910.7188,2080.4219 L2910.7188,2083.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="2928.25" y="2082.156">SuperFlatGenerator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2846.5" x2="3088.5" y1="2093.5" y2="2093.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2846.5" x2="3088.5" y1="2101.5" y2="2101.5"/><ellipse cx="2856.5" cy="2112.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2865.5" y="2117.2589">getMinimumSpawnHeight() : int {query}</text><ellipse cx="2856.5" cy="2127.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2865.5" y="2132.2408">generateTerrainFor(Chunk&amp; chunk) : void</text><!--MD5=[31c6987c6f5980e5931e3e4b0a3651bd]
class TemperateForestBiome--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="TemperateForestBiome" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="3582" y="2499.5"/><ellipse cx="3705.75" cy="2515.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3708.7188,2521.1406 Q3708.1406,2521.4375 3707.5,2521.5781 Q3706.8594,2521.7344 3706.1563,2521.7344 Q3703.6563,2521.7344 3702.3281,2520.0938 Q3701.0156,2518.4375 3701.0156,2515.3125 Q3701.0156,2512.1875 3702.3281,2510.5313 Q3703.6563,2508.875 3706.1563,2508.875 Q3706.8594,2508.875 3707.5,2509.0313 Q3708.1563,2509.1875 3708.7188,2509.4844 L3708.7188,2512.2031 Q3708.0938,2511.625 3707.5,2511.3594 Q3706.9063,2511.0781 3706.2813,2511.0781 Q3704.9375,2511.0781 3704.25,2512.1563 Q3703.5625,2513.2188 3703.5625,2515.3125 Q3703.5625,2517.4063 3704.25,2518.4844 Q3704.9375,2519.5469 3706.2813,2519.5469 Q3706.9063,2519.5469 3707.5,2519.2813 Q3708.0938,2519 3708.7188,2518.4219 L3708.7188,2521.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="133" x="3726.25" y="2520.156">TemperateForestBiome</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3583" x2="3970" y1="2531.5" y2="2531.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3583" x2="3970" y1="2539.5" y2="2539.5"/><ellipse cx="3593" cy="2550.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3602" y="2555.2589">TemperateForestBiome(int seed)</text><ellipse cx="3593" cy="2565.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="3602" y="2570.2408">getPlant(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="3593" cy="2580.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="3602" y="2585.2227">getTopBlock(Rand&amp; rand) : ChunkBlock {query}</text><ellipse cx="3593" cy="2595.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="3602" y="2600.2046">getUnderWaterBlock(Rand&amp; rand) : ChunkBlock {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3590" y="2607.4276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3602" y="2615.1865">getNoiseParameters() : NoiseParameters</text><ellipse cx="3593" cy="2625.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="3602" y="2630.1684">makeTree(Rand&amp; rand, Chunk&amp; chunk, int x, int y, int z) : void {query}</text><!--MD5=[81a9308af1ea08e5919eafb0964ef3da]
class TerrainGenerator--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="TerrainGenerator" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="3667.5" y="1698.5"/><ellipse cx="3725.25" cy="1714.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3725.3594,1709.8438 L3724.2031,1714.9219 L3726.5313,1714.9219 L3725.3594,1709.8438 Z M3723.875,1707.6094 L3726.8594,1707.6094 L3730.2188,1720 L3727.7656,1720 L3727,1716.9375 L3723.7188,1716.9375 L3722.9688,1720 L3720.5313,1720 L3723.875,1707.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="3745.75" y="1719.156">TerrainGenerator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3668.5" x2="3884.5" y1="1730.5" y2="1730.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3668.5" x2="3884.5" y1="1738.5" y2="1738.5"/><ellipse cx="3678.5" cy="1749.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3687.5" y="1754.2589">~TerrainGenerator()</text><ellipse cx="3678.5" cy="1764.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="190" x="3687.5" y="1769.2408">getMinimumSpawnHeight() : int {query}</text><ellipse cx="3678.5" cy="1779.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="3687.5" y="1784.2227">generateTerrainFor(Chunk&amp; chunk) : void</text><!--MD5=[caa47d34b33e522b5b864817df35a25c]
class TextureAtlas--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="TextureAtlas" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="7079" y="1691"/><ellipse cx="7213.75" cy="1707" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7216.7188,1712.6406 Q7216.1406,1712.9375 7215.5,1713.0781 Q7214.8594,1713.2344 7214.1563,1713.2344 Q7211.6563,1713.2344 7210.3281,1711.5938 Q7209.0156,1709.9375 7209.0156,1706.8125 Q7209.0156,1703.6875 7210.3281,1702.0313 Q7211.6563,1700.375 7214.1563,1700.375 Q7214.8594,1700.375 7215.5,1700.5313 Q7216.1563,1700.6875 7216.7188,1700.9844 L7216.7188,1703.7031 Q7216.0938,1703.125 7215.5,1702.8594 Q7214.9063,1702.5781 7214.2813,1702.5781 Q7212.9375,1702.5781 7212.25,1703.6563 Q7211.5625,1704.7188 7211.5625,1706.8125 Q7211.5625,1708.9063 7212.25,1709.9844 Q7212.9375,1711.0469 7214.2813,1711.0469 Q7214.9063,1711.0469 7215.5,1710.7813 Q7216.0938,1710.5 7216.7188,1709.9219 L7216.7188,1712.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="7234.25" y="1711.656">TextureAtlas</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7080" x2="7427" y1="1723" y2="1723"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7087" y="1731"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7099" y="1738.7589">m_imageSize : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7087" y="1745.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="7099" y="1753.7408">m_individualTextureSize : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7080" x2="7427" y1="1760.9638" y2="1760.9638"/><ellipse cx="7090" cy="1771.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="7099" y="1776.7227">TextureAtlas(const std::string&amp; textureFileName)</text><ellipse cx="7090" cy="1786.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="7099" y="1791.7046">getTexture(const sf::Vector2i&amp; coords) : std::array&lt;GLfloat , 8&gt;</text><!--MD5=[ba65ec3d44698ff11b1c3b84a5ac1017]
class ToggleKey--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="ToggleKey" style="stroke: #A80036; stroke-width: 1.5;" width="178" x="1645.5" y="2514.5"/><ellipse cx="1701.25" cy="2530.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1704.2188,2536.1406 Q1703.6406,2536.4375 1703,2536.5781 Q1702.3594,2536.7344 1701.6563,2536.7344 Q1699.1563,2536.7344 1697.8281,2535.0938 Q1696.5156,2533.4375 1696.5156,2530.3125 Q1696.5156,2527.1875 1697.8281,2525.5313 Q1699.1563,2523.875 1701.6563,2523.875 Q1702.3594,2523.875 1703,2524.0313 Q1703.6563,2524.1875 1704.2188,2524.4844 L1704.2188,2527.2031 Q1703.5938,2526.625 1703,2526.3594 Q1702.4063,2526.0781 1701.7813,2526.0781 Q1700.4375,2526.0781 1699.75,2527.1563 Q1699.0625,2528.2188 1699.0625,2530.3125 Q1699.0625,2532.4063 1699.75,2533.4844 Q1700.4375,2534.5469 1701.7813,2534.5469 Q1702.4063,2534.5469 1703,2534.2813 Q1703.5938,2534 1704.2188,2533.4219 L1704.2188,2536.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="1721.75" y="2535.156">ToggleKey</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1646.5" x2="1822.5" y1="2546.5" y2="2546.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1653.5" y="2554.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1665.5" y="2562.2589">m_delayTimer : sf::Clock</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1653.5" y="2569.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1665.5" y="2577.2408">m_key : sf::Keyboard::Key</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1646.5" x2="1822.5" y1="2584.4638" y2="2584.4638"/><ellipse cx="1656.5" cy="2595.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1665.5" y="2600.2227">ToggleKey(sf::Keyboard::Key)</text><ellipse cx="1656.5" cy="2610.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1665.5" y="2615.2046">isKeyPressed() : bool</text><!--MD5=[4744a2647416e7c357028919c60264cc]
class ViewFrustum--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="ViewFrustum" style="stroke: #A80036; stroke-width: 1.5;" width="280" x="1631.5" y="699.5"/><ellipse cx="1731.25" cy="715.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1734.2188,721.1406 Q1733.6406,721.4375 1733,721.5781 Q1732.3594,721.7344 1731.6563,721.7344 Q1729.1563,721.7344 1727.8281,720.0938 Q1726.5156,718.4375 1726.5156,715.3125 Q1726.5156,712.1875 1727.8281,710.5313 Q1729.1563,708.875 1731.6563,708.875 Q1732.3594,708.875 1733,709.0313 Q1733.6563,709.1875 1734.2188,709.4844 L1734.2188,712.2031 Q1733.5938,711.625 1733,711.3594 Q1732.4063,711.0781 1731.7813,711.0781 Q1730.4375,711.0781 1729.75,712.1563 Q1729.0625,713.2188 1729.0625,715.3125 Q1729.0625,717.4063 1729.75,718.4844 Q1730.4375,719.5469 1731.7813,719.5469 Q1732.4063,719.5469 1733,719.2813 Q1733.5938,719 1734.2188,718.4219 L1734.2188,721.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1751.75" y="720.156">ViewFrustum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1632.5" x2="1910.5" y1="731.5" y2="731.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1639.5" y="739.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1651.5" y="747.2589">m_planes : std::array&lt;Plane, 6&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1632.5" x2="1910.5" y1="754.4819" y2="754.4819"/><ellipse cx="1642.5" cy="765.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1651.5" y="770.2408">isBoxInFrustum(const AABB&amp; box) : bool {query}</text><ellipse cx="1642.5" cy="780.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1651.5" y="785.2227">update(const glm::mat4&amp; projViewMatrix) : void</text><!--MD5=[16eb7ff5d9bb26657e6f87877dca8999]
class WaterRenderer--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="WaterRenderer" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="5037" y="3626"/><ellipse cx="5115.25" cy="3642" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5118.2188,3647.6406 Q5117.6406,3647.9375 5117,3648.0781 Q5116.3594,3648.2344 5115.6563,3648.2344 Q5113.1563,3648.2344 5111.8281,3646.5938 Q5110.5156,3644.9375 5110.5156,3641.8125 Q5110.5156,3638.6875 5111.8281,3637.0313 Q5113.1563,3635.375 5115.6563,3635.375 Q5116.3594,3635.375 5117,3635.5313 Q5117.6563,3635.6875 5118.2188,3635.9844 L5118.2188,3638.7031 Q5117.5938,3638.125 5117,3637.8594 Q5116.4063,3637.5781 5115.7813,3637.5781 Q5114.4375,3637.5781 5113.75,3638.6563 Q5113.0625,3639.7188 5113.0625,3641.8125 Q5113.0625,3643.9063 5113.75,3644.9844 Q5114.4375,3646.0469 5115.7813,3646.0469 Q5116.4063,3646.0469 5117,3645.7813 Q5117.5938,3645.5 5118.2188,3644.9219 L5118.2188,3647.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="5135.75" y="3646.656">WaterRenderer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5038" x2="5287" y1="3658" y2="3658"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5045" y="3666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5057" y="3673.7589">m_shader : WaterShader</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5045" y="3680.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5057" y="3688.7408">m_chunks : std::vector&lt;const RenderInfo*&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5038" x2="5287" y1="3695.9638" y2="3695.9638"/><ellipse cx="5048" cy="3706.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5057" y="3711.7227">add(const ChunkMesh&amp; mesh) : void</text><ellipse cx="5048" cy="3721.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="5057" y="3726.7046">render(const Camera&amp; camera) : void</text><!--MD5=[717b1287746ed2013bb0166cc1c5df02]
class WaterShader--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="107.9276" id="WaterShader" style="stroke: #A80036; stroke-width: 1.5;" width="201" x="4792" y="3929"/><ellipse cx="4851.25" cy="3945" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4854.2188,3950.6406 Q4853.6406,3950.9375 4853,3951.0781 Q4852.3594,3951.2344 4851.6563,3951.2344 Q4849.1563,3951.2344 4847.8281,3949.5938 Q4846.5156,3947.9375 4846.5156,3944.8125 Q4846.5156,3941.6875 4847.8281,3940.0313 Q4849.1563,3938.375 4851.6563,3938.375 Q4852.3594,3938.375 4853,3938.5313 Q4853.6563,3938.6875 4854.2188,3938.9844 L4854.2188,3941.7031 Q4853.5938,3941.125 4853,3940.8594 Q4852.4063,3940.5781 4851.7813,3940.5781 Q4850.4375,3940.5781 4849.75,3941.6563 Q4849.0625,3942.7188 4849.0625,3944.8125 Q4849.0625,3946.9063 4849.75,3947.9844 Q4850.4375,3949.0469 4851.7813,3949.0469 Q4852.4063,3949.0469 4853,3948.7813 Q4853.5938,3948.5 4854.2188,3947.9219 L4854.2188,3950.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="4871.75" y="3949.656">WaterShader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4793" x2="4992" y1="3961" y2="3961"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4800" y="3969"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4812" y="3976.7589">m_time : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4793" x2="4992" y1="3983.9819" y2="3983.9819"/><ellipse cx="4803" cy="3994.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4812" y="3999.7408">WaterShader()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4800" y="4006.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4812" y="4014.7227">getUniforms() : void</text><ellipse cx="4803" cy="4024.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4812" y="4029.7046">loadTime(const float&amp; time) : void</text><!--MD5=[1b1562314ef50edf921bad0cd204186a]
class World--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="407.5653" id="World" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="4412.5" y="905"/><ellipse cx="4584.75" cy="921" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4587.7188,926.6406 Q4587.1406,926.9375 4586.5,927.0781 Q4585.8594,927.2344 4585.1563,927.2344 Q4582.6563,927.2344 4581.3281,925.5938 Q4580.0156,923.9375 4580.0156,920.8125 Q4580.0156,917.6875 4581.3281,916.0313 Q4582.6563,914.375 4585.1563,914.375 Q4585.8594,914.375 4586.5,914.5313 Q4587.1563,914.6875 4587.7188,914.9844 L4587.7188,917.7031 Q4587.0938,917.125 4586.5,916.8594 Q4585.9063,916.5781 4585.2813,916.5781 Q4583.9375,916.5781 4583.25,917.6563 Q4582.5625,918.7188 4582.5625,920.8125 Q4582.5625,922.9063 4583.25,923.9844 Q4583.9375,925.0469 4585.2813,925.0469 Q4585.9063,925.0469 4586.5,924.7813 Q4587.0938,924.5 4587.7188,923.9219 L4587.7188,926.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="4605.25" y="925.656">World</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4413.5" x2="4797.5" y1="937" y2="937"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="945"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4432.5" y="952.7589">m_chunkManager : ChunkManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="959.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4432.5" y="967.7408">m_renderDistance : const int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="974.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4432.5" y="982.7227">m_playerSpawnPoint : glm::vec3</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="989.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4432.5" y="997.7046">m_loadDistance : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1004.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="4432.5" y="1012.6865">m_isRunning : std::atomic&lt;bool&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1019.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4432.5" y="1027.6684">m_genMutex : std::mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1034.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4432.5" y="1042.6502">m_mainMutex : std::mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1049.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4432.5" y="1057.6321">m_chunkUpdates : std::unordered_map&lt;sf::Vector3i, ChunkSection*&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1064.8551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="4432.5" y="1072.614">m_chunkLoadThreads : std::vector&lt;std::thread&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1079.837"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="4432.5" y="1087.5959">m_events : std::vector&lt;std::unique_ptr&lt;IWorldEvent&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4413.5" x2="4797.5" y1="1094.8189" y2="1094.8189"/><ellipse cx="4423.5" cy="1105.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="4432.5" y="1110.5778">World(const Camera&amp; camera, const Config&amp; config, Player&amp; player)</text><ellipse cx="4423.5" cy="1120.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="4432.5" y="1125.5597">~World()</text><ellipse cx="4423.5" cy="1135.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4432.5" y="1140.5416">getBlock(int x, int y, int z) : ChunkBlock</text><ellipse cx="4423.5" cy="1150.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4432.5" y="1155.5235">getChunkManager() : ChunkManager&amp;</text><ellipse cx="4423.5" cy="1165.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="169" x="4432.5" y="1170.5053">getBlockXZ(int x, int z) : VectorXZ</text><ellipse cx="4423.5" cy="1180.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="4432.5" y="1185.4872">getChunkXZ(int x, int z) : VectorXZ</text><ellipse cx="4423.5" cy="1195.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4432.5" y="1200.4691">addEvent(Args&amp;&amp; ... args) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1207.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4432.5" y="1215.451">loadChunks(const Camera&amp; camera) : void</text><ellipse cx="4423.5" cy="1225.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="4432.5" y="1230.4329">renderWorld(RenderMaster&amp; master, const Camera&amp; camera) : void</text><ellipse cx="4423.5" cy="1240.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4432.5" y="1245.4148">setBlock(int x, int y, int z, ChunkBlock block) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1252.6378"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="4432.5" y="1260.3967">setSpawnPoint() : void</text><ellipse cx="4423.5" cy="1270.6196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4432.5" y="1275.3786">update(const Camera&amp; camera) : void</text><ellipse cx="4423.5" cy="1285.6015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4432.5" y="1290.3604">updateChunk(int blockX, int blockY, int blockZ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4420.5" y="1297.5834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4432.5" y="1305.3423">updateChunks() : void</text><!--MD5=[294f9d444512fde88199e9f7712d415b]
class BlockId--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="242.7645" id="BlockId" style="stroke: #A80036; stroke-width: 1.5;" width="74" x="6616.5" y="3278"/><ellipse cx="6631.95" cy="3294" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6636.0594,3300 L6628.3406,3300 L6628.3406,3287.6094 L6636.0594,3287.6094 L6636.0594,3289.7656 L6630.7938,3289.7656 L6630.7938,3292.4375 L6635.5594,3292.4375 L6635.5594,3294.5938 L6630.7938,3294.5938 L6630.7938,3297.8438 L6636.0594,3297.8438 L6636.0594,3300 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="6646.05" y="3298.656">BlockId</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6617.5" x2="6689.5" y1="3310" y2="3310"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="15" x="6622.5" y="3325.7589">Air</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="6622.5" y="3340.7408">Cactus</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="6622.5" y="3355.7227">DeadShrub</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="20" x="6622.5" y="3370.7046">Dirt</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="6622.5" y="3385.6865">Grass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="6622.5" y="3400.6684">NUM_TYPES</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="6622.5" y="3415.6502">OakBark</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="6622.5" y="3430.6321">OakLeaf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="6622.5" y="3445.614">Rose</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="6622.5" y="3460.5959">Sand</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="6622.5" y="3475.5778">Stone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="6622.5" y="3490.5597">TallGrass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="6622.5" y="3505.5416">Water</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6617.5" x2="6689.5" y1="3512.7645" y2="3512.7645"/><!--MD5=[d29c5de881bde912f164d4a8ced8668e]
class BlockMeshType--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="BlockMeshType" style="stroke: #A80036; stroke-width: 1.5;" width="120" x="6296.5" y="3360.5"/><ellipse cx="6311.5" cy="3376.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6315.6094,3382.5 L6307.8906,3382.5 L6307.8906,3370.1094 L6315.6094,3370.1094 L6315.6094,3372.2656 L6310.3438,3372.2656 L6310.3438,3374.9375 L6315.1094,3374.9375 L6315.1094,3377.0938 L6310.3438,3377.0938 L6310.3438,3380.3438 L6315.6094,3380.3438 L6315.6094,3382.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="6325.5" y="3381.156">BlockMeshType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6297.5" x2="6415.5" y1="3392.5" y2="3392.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="6302.5" y="3408.2589">Cube</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="6302.5" y="3423.2408">X</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6297.5" x2="6415.5" y1="3430.4638" y2="3430.4638"/><!--MD5=[ff9bcc39a9563a222b770b63e10f218d]
class BlockShaderType--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="BlockShaderType" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="6452" y="3353"/><ellipse cx="6467" cy="3369" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6471.1094,3375 L6463.3906,3375 L6463.3906,3362.6094 L6471.1094,3362.6094 L6471.1094,3364.7656 L6465.8438,3364.7656 L6465.8438,3367.4375 L6470.6094,3367.4375 L6470.6094,3369.5938 L6465.8438,3369.5938 L6465.8438,3372.8438 L6471.1094,3372.8438 L6471.1094,3375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="6481" y="3373.656">BlockShaderType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6453" x2="6580" y1="3385" y2="3385"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="6458" y="3400.7589">Chunk</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="6458" y="3415.7408">Flora</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="6458" y="3430.7227">Liquid</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6453" x2="6580" y1="3437.9457" y2="3437.9457"/><!--MD5=[0435a32c206ff6a9f0cd12238e62c380]
class Material::ID--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="212.8008" id="Material::ID" style="stroke: #A80036; stroke-width: 1.5;" width="98" x="4443.5" y="3293"/><ellipse cx="4458.5" cy="3309" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4462.6094,3315 L4454.8906,3315 L4454.8906,3302.6094 L4462.6094,3302.6094 L4462.6094,3304.7656 L4457.3438,3304.7656 L4457.3438,3307.4375 L4462.1094,3307.4375 L4462.1094,3309.5938 L4457.3438,3309.5938 L4457.3438,3312.8438 L4462.6094,3312.8438 L4462.6094,3315 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="4472.5" y="3313.656">Material::ID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4444.5" x2="4540.5" y1="3325" y2="3325"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="4449.5" y="3340.7589">Cactus</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="4449.5" y="3355.7408">DeadShrub</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="20" x="4449.5" y="3370.7227">Dirt</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="4449.5" y="3385.7046">Grass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="4449.5" y="3400.6865">Nothing</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="4449.5" y="3415.6684">OakBark</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="4449.5" y="3430.6502">OakLeaf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="4449.5" y="3445.6321">Rose</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="4449.5" y="3460.614">Sand</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="4449.5" y="3475.5959">Stone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="4449.5" y="3490.5778">TallGrass</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4444.5" x2="4540.5" y1="3497.8008" y2="3497.8008"/><!--MD5=[6a27c20b92d3f9c7e017ccad1b71cd6d]
class AABB--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="137.8913" id="AABB" style="stroke: #A80036; stroke-width: 1.5;" width="293" x="4632" y="3330.5"/><ellipse cx="4758.25" cy="3346.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4761.2188,3352.1406 Q4760.6406,3352.4375 4760,3352.5781 Q4759.3594,3352.7344 4758.6563,3352.7344 Q4756.1563,3352.7344 4754.8281,3351.0938 Q4753.5156,3349.4375 4753.5156,3346.3125 Q4753.5156,3343.1875 4754.8281,3341.5313 Q4756.1563,3339.875 4758.6563,3339.875 Q4759.3594,3339.875 4760,3340.0313 Q4760.6563,3340.1875 4761.2188,3340.4844 L4761.2188,3343.2031 Q4760.5938,3342.625 4760,3342.3594 Q4759.4063,3342.0781 4758.7813,3342.0781 Q4757.4375,3342.0781 4756.75,3343.1563 Q4756.0625,3344.2188 4756.0625,3346.3125 Q4756.0625,3348.4063 4756.75,3349.4844 Q4757.4375,3350.5469 4758.7813,3350.5469 Q4759.4063,3350.5469 4760,3350.2813 Q4760.5938,3350 4761.2188,3349.4219 L4761.2188,3352.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="4778.75" y="3351.156">AABB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4633" x2="4924" y1="3362.5" y2="3362.5"/><ellipse cx="4643" cy="3373.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4652" y="3378.2589">dimensions : const glm::vec3</text><ellipse cx="4643" cy="3388.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4652" y="3393.2408">position : glm::vec3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4633" x2="4924" y1="3400.4638" y2="3400.4638"/><ellipse cx="4643" cy="3411.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4652" y="3416.2227">AABB(const glm::vec3&amp; dim)</text><ellipse cx="4643" cy="3426.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="4652" y="3431.2046">getVN(const glm::vec3&amp; normal) : glm::vec3 {query}</text><ellipse cx="4643" cy="3441.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4652" y="3446.1865">getVP(const glm::vec3&amp; normal) : glm::vec3 {query}</text><ellipse cx="4643" cy="3456.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4652" y="3461.1684">update(const glm::vec3&amp; location) : void</text><!--MD5=[9ed323de6e5b1e2bdfe64b349a4e1197]
class Biome--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="257.7464" id="Biome" style="stroke: #A80036; stroke-width: 1.5;" width="456" x="3124.5" y="1971.5"/><ellipse cx="3331.25" cy="1987.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3331.3594,1982.8438 L3330.2031,1987.9219 L3332.5313,1987.9219 L3331.3594,1982.8438 Z M3329.875,1980.6094 L3332.8594,1980.6094 L3336.2188,1993 L3333.7656,1993 L3333,1989.9375 L3329.7188,1989.9375 L3328.9688,1993 L3326.5313,1993 L3329.875,1980.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="3351.75" y="1992.156">Biome</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3125.5" x2="3579.5" y1="2003.5" y2="2003.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3132.5" y="2011.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3144.5" y="2019.2589">m_heightGenerator : NoiseGenerator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3132.5" y="2026.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="3144.5" y="2034.2408">m_plantFreq : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3132.5" y="2041.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3144.5" y="2049.2227">m_treeFreq : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3125.5" x2="3579.5" y1="2056.4457" y2="2056.4457"/><ellipse cx="3135.5" cy="2067.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="3144.5" y="2072.2046">Biome(const NoiseParameters&amp; parameters, int treeFreq, int plantFreq, int seed)</text><ellipse cx="3135.5" cy="2082.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="3144.5" y="2087.1865">~Biome()</text><ellipse cx="3135.5" cy="2097.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="3144.5" y="2102.1684">getBeachBlock(Random&lt;std::minstd_rand&gt; rand) : ChunkBlock {query}</text><ellipse cx="3135.5" cy="2112.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="3144.5" y="2117.1502">getPlant(Random&lt;std::minstd_rand&gt; rand) : ChunkBlock {query}</text><ellipse cx="3135.5" cy="2127.3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="324" x="3144.5" y="2132.1321">getTopBlock(Random&lt;std::minstd_rand&gt; rand) : ChunkBlock {query}</text><ellipse cx="3135.5" cy="2142.3551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="3144.5" y="2147.114">getUnderWaterBlock(Random&lt;std::minstd_rand&gt; rand) : ChunkBlock {query}</text><polygon fill="#FFFF44" points="3135.5,2152.337,3139.5,2156.337,3135.5,2160.337,3131.5,2156.337" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="3144.5" y="2162.0959">getNoiseParameters() : NoiseParameters</text><ellipse cx="3135.5" cy="2172.3189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="3144.5" y="2177.0778">getHeight(int x, int z, int chunkX, int chunkZ) : int {query}</text><ellipse cx="3135.5" cy="2187.3008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3144.5" y="2192.0597">getPlantFrequency() : int {query}</text><ellipse cx="3135.5" cy="2202.2827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3144.5" y="2207.0416">getTreeFrequency() : int {query}</text><ellipse cx="3135.5" cy="2217.2645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="430" x="3144.5" y="2222.0235">makeTree(Random&lt;std::minstd_rand&gt; rand, Chunk&amp; chunk, int x, int y, int z) : void {query}</text><!--MD5=[ce411476c28bced6f936dd2eb1a22f7f]
class BlockDataHolder--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="167.8551" id="BlockDataHolder" style="stroke: #A80036; stroke-width: 1.5;" width="186" x="6295.5" y="2930"/><ellipse cx="6337.05" cy="2946" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6340.0188,2951.6406 Q6339.4406,2951.9375 6338.8,2952.0781 Q6338.1594,2952.2344 6337.4563,2952.2344 Q6334.9563,2952.2344 6333.6281,2950.5938 Q6332.3156,2948.9375 6332.3156,2945.8125 Q6332.3156,2942.6875 6333.6281,2941.0313 Q6334.9563,2939.375 6337.4563,2939.375 Q6338.1594,2939.375 6338.8,2939.5313 Q6339.4563,2939.6875 6340.0188,2939.9844 L6340.0188,2942.7031 Q6339.3938,2942.125 6338.8,2941.8594 Q6338.2063,2941.5781 6337.5813,2941.5781 Q6336.2375,2941.5781 6335.55,2942.6563 Q6334.8625,2943.7188 6334.8625,2945.8125 Q6334.8625,2947.9063 6335.55,2948.9844 Q6336.2375,2950.0469 6337.5813,2950.0469 Q6338.2063,2950.0469 6338.8,2949.7813 Q6339.3938,2949.5 6340.0188,2948.9219 L6340.0188,2951.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="6356.95" y="2950.656">BlockDataHolder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6296.5" x2="6480.5" y1="2962" y2="2962"/><ellipse cx="6306.5" cy="2973" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6315.5" y="2977.7589">id : BlockId</text><ellipse cx="6306.5" cy="2987.9819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6315.5" y="2992.7408">meshType : BlockMeshType</text><ellipse cx="6306.5" cy="3002.9638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="6315.5" y="3007.7227">shaderType : BlockShaderType</text><ellipse cx="6306.5" cy="3017.9457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6315.5" y="3022.7046">isCollidable : bool</text><ellipse cx="6306.5" cy="3032.9276" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="6315.5" y="3037.6865">isOpaque : bool</text><ellipse cx="6306.5" cy="3047.9094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6315.5" y="3052.6684">texBottomCoord : sf::Vector2i</text><ellipse cx="6306.5" cy="3062.8913" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="6315.5" y="3067.6502">texSideCoord : sf::Vector2i</text><ellipse cx="6306.5" cy="3077.8732" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6315.5" y="3082.6321">texTopCoord : sf::Vector2i</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6296.5" x2="6480.5" y1="3089.8551" y2="3089.8551"/><!--MD5=[e68aa8f84fda21aada32691e9ad9e519]
class ChunkBlock--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="167.8551" id="ChunkBlock" style="stroke: #A80036; stroke-width: 1.5;" width="260" x="5513.5" y="3315.5"/><ellipse cx="5606.75" cy="3331.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5609.7188,3337.1406 Q5609.1406,3337.4375 5608.5,3337.5781 Q5607.8594,3337.7344 5607.1563,3337.7344 Q5604.6563,3337.7344 5603.3281,3336.0938 Q5602.0156,3334.4375 5602.0156,3331.3125 Q5602.0156,3328.1875 5603.3281,3326.5313 Q5604.6563,3324.875 5607.1563,3324.875 Q5607.8594,3324.875 5608.5,3325.0313 Q5609.1563,3325.1875 5609.7188,3325.4844 L5609.7188,3328.2031 Q5609.0938,3327.625 5608.5,3327.3594 Q5607.9063,3327.0781 5607.2813,3327.0781 Q5605.9375,3327.0781 5605.25,3328.1563 Q5604.5625,3329.2188 5604.5625,3331.3125 Q5604.5625,3333.4063 5605.25,3334.4844 Q5605.9375,3335.5469 5607.2813,3335.5469 Q5607.9063,3335.5469 5608.5,3335.2813 Q5609.0938,3335 5609.7188,3334.4219 L5609.7188,3337.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5627.25" y="3336.156">ChunkBlock</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5514.5" x2="5772.5" y1="3347.5" y2="3347.5"/><ellipse cx="5524.5" cy="3358.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="5533.5" y="3363.2589">id : Block_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5514.5" x2="5772.5" y1="3370.4819" y2="3370.4819"/><ellipse cx="5524.5" cy="3381.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5533.5" y="3386.2408">ChunkBlock()</text><ellipse cx="5524.5" cy="3396.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="5533.5" y="3401.2227">ChunkBlock(Block_t id)</text><ellipse cx="5524.5" cy="3411.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="5533.5" y="3416.2046">ChunkBlock(BlockId id)</text><ellipse cx="5524.5" cy="3426.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="5533.5" y="3431.1865">getData() : BlockDataHolder&amp; {query}</text><ellipse cx="5524.5" cy="3441.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="5533.5" y="3446.1684">getType() : BlockType&amp; {query}</text><ellipse cx="5524.5" cy="3456.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5533.5" y="3461.1502">operator!=(ChunkBlock other) : bool {query}</text><ellipse cx="5524.5" cy="3471.3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="5533.5" y="3476.1321">operator==(ChunkBlock other) : bool {query}</text><!--MD5=[7c61a9d1acb61b68c42ec0639cad4fc1]
class ChunkMeshCollection--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="ChunkMeshCollection" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="5323" y="3353"/><ellipse cx="5338.9" cy="3369" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5341.8688,3374.6406 Q5341.2906,3374.9375 5340.65,3375.0781 Q5340.0094,3375.2344 5339.3063,3375.2344 Q5336.8063,3375.2344 5335.4781,3373.5938 Q5334.1656,3371.9375 5334.1656,3368.8125 Q5334.1656,3365.6875 5335.4781,3364.0313 Q5336.8063,3362.375 5339.3063,3362.375 Q5340.0094,3362.375 5340.65,3362.5313 Q5341.3063,3362.6875 5341.8688,3362.9844 L5341.8688,3365.7031 Q5341.2438,3365.125 5340.65,3364.8594 Q5340.0563,3364.5781 5339.4313,3364.5781 Q5338.0875,3364.5781 5337.4,3365.6563 Q5336.7125,3366.7188 5336.7125,3368.8125 Q5336.7125,3370.9063 5337.4,3371.9844 Q5338.0875,3373.0469 5339.4313,3373.0469 Q5340.0563,3373.0469 5340.65,3372.7813 Q5341.2438,3372.5 5341.8688,3371.9219 L5341.8688,3374.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="5353.1" y="3373.656">ChunkMeshCollection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5324" x2="5477" y1="3385" y2="3385"/><ellipse cx="5334" cy="3396" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5343" y="3400.7589">floraMesh : ChunkMesh</text><ellipse cx="5334" cy="3410.9819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5343" y="3415.7408">solidMesh : ChunkMesh</text><ellipse cx="5334" cy="3425.9638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5343" y="3430.7227">waterMesh : ChunkMesh</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5324" x2="5477" y1="3437.9457" y2="3437.9457"/><!--MD5=[4bf8aff396996fef456cd268939daa24]
class Config--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="122.9094" id="Config" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="1467" y="684.5"/><ellipse cx="1509.45" cy="700.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1512.4188,706.1406 Q1511.8406,706.4375 1511.2,706.5781 Q1510.5594,706.7344 1509.8563,706.7344 Q1507.3563,706.7344 1506.0281,705.0938 Q1504.7156,703.4375 1504.7156,700.3125 Q1504.7156,697.1875 1506.0281,695.5313 Q1507.3563,693.875 1509.8563,693.875 Q1510.5594,693.875 1511.2,694.0313 Q1511.8563,694.1875 1512.4188,694.4844 L1512.4188,697.2031 Q1511.7938,696.625 1511.2,696.3594 Q1510.6063,696.0781 1509.9813,696.0781 Q1508.6375,696.0781 1507.95,697.1563 Q1507.2625,698.2188 1507.2625,700.3125 Q1507.2625,702.4063 1507.95,703.4844 Q1508.6375,704.5469 1509.9813,704.5469 Q1510.6063,704.5469 1511.2,704.2813 Q1511.7938,704 1512.4188,703.4219 L1512.4188,706.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="36" x="1529.55" y="705.156">Config</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1468" x2="1595" y1="716.5" y2="716.5"/><ellipse cx="1478" cy="727.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1487" y="732.2589">isFullscreen : bool</text><ellipse cx="1478" cy="742.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="1487" y="747.2408">fov : int</text><ellipse cx="1478" cy="757.4638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1487" y="762.2227">renderDistance : int</text><ellipse cx="1478" cy="772.4457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1487" y="777.2046">windowX : int</text><ellipse cx="1478" cy="787.4276" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1487" y="792.1865">windowY : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1468" x2="1595" y1="799.4094" y2="799.4094"/><!--MD5=[6754354365917abf8f1a56af1b7e344c]
class Context--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="Context" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="2183" y="426.5"/><ellipse cx="2248.75" cy="442.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2251.7188,448.1406 Q2251.1406,448.4375 2250.5,448.5781 Q2249.8594,448.7344 2249.1563,448.7344 Q2246.6563,448.7344 2245.3281,447.0938 Q2244.0156,445.4375 2244.0156,442.3125 Q2244.0156,439.1875 2245.3281,437.5313 Q2246.6563,435.875 2249.1563,435.875 Q2249.8594,435.875 2250.5,436.0313 Q2251.1563,436.1875 2251.7188,436.4844 L2251.7188,439.2031 Q2251.0938,438.625 2250.5,438.3594 Q2249.9063,438.0781 2249.2813,438.0781 Q2247.9375,438.0781 2247.25,439.1563 Q2246.5625,440.2188 2246.5625,442.3125 Q2246.5625,444.4063 2247.25,445.4844 Q2247.9375,446.5469 2249.2813,446.5469 Q2249.9063,446.5469 2250.5,446.2813 Q2251.0938,446 2251.7188,445.4219 L2251.7188,448.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="2269.25" y="447.156">Context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2184" x2="2365" y1="458.5" y2="458.5"/><ellipse cx="2194" cy="469.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2203" y="474.2589">window : sf::Window</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2184" x2="2365" y1="481.4819" y2="481.4819"/><ellipse cx="2194" cy="492.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="2203" y="497.2408">Context(const Config&amp; config)</text><!--MD5=[be996cdb8e6bf2fc7cb89c555f2cd144]
class Entity--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="152.8732" id="Entity" style="stroke: #A80036; stroke-width: 1.5;" width="402" x="1946.5" y="669.5"/><ellipse cx="2127.75" cy="685.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2130.7188,691.1406 Q2130.1406,691.4375 2129.5,691.5781 Q2128.8594,691.7344 2128.1563,691.7344 Q2125.6563,691.7344 2124.3281,690.0938 Q2123.0156,688.4375 2123.0156,685.3125 Q2123.0156,682.1875 2124.3281,680.5313 Q2125.6563,678.875 2128.1563,678.875 Q2128.8594,678.875 2129.5,679.0313 Q2130.1563,679.1875 2130.7188,679.4844 L2130.7188,682.2031 Q2130.0938,681.625 2129.5,681.3594 Q2128.9063,681.0781 2128.2813,681.0781 Q2126.9375,681.0781 2126.25,682.1563 Q2125.5625,683.2188 2125.5625,685.3125 Q2125.5625,687.4063 2126.25,688.4844 Q2126.9375,689.5469 2128.2813,689.5469 Q2128.9063,689.5469 2129.5,689.2813 Q2130.0938,689 2130.7188,688.4219 L2130.7188,691.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="31" x="2148.25" y="690.156">Entity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1947.5" x2="2347.5" y1="701.5" y2="701.5"/><ellipse cx="1957.5" cy="712.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="1966.5" y="717.2589">box : AABB</text><ellipse cx="1957.5" cy="727.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1966.5" y="732.2408">position : glm::vec3</text><ellipse cx="1957.5" cy="742.4638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1966.5" y="747.2227">rotation : glm::vec3</text><ellipse cx="1957.5" cy="757.4457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1966.5" y="762.2046">velocity : glm::vec3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1947.5" x2="2347.5" y1="769.4276" y2="769.4276"/><ellipse cx="1957.5" cy="780.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="1966.5" y="785.1865">Entity()</text><ellipse cx="1957.5" cy="795.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="1966.5" y="800.1684">Entity(const glm::vec3&amp; pos, const glm::vec3&amp; rot)</text><ellipse cx="1957.5" cy="810.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="1966.5" y="815.1502">Entity(const glm::vec3&amp; pos, const glm::vec3&amp; rot, const glm::vec3&amp; box)</text><!--MD5=[8c810ee4c357129b9003100241d9caea]
class IChunk--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="IChunk" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="4766" y="2054"/><ellipse cx="4875.25" cy="2070" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4875.3594,2065.3438 L4874.2031,2070.4219 L4876.5313,2070.4219 L4875.3594,2065.3438 Z M4873.875,2063.1094 L4876.8594,2063.1094 L4880.2188,2075.5 L4877.7656,2075.5 L4877,2072.4375 L4873.7188,2072.4375 L4872.9688,2075.5 L4870.5313,2075.5 L4873.875,2063.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="4895.75" y="2074.656">IChunk</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4767" x2="5030" y1="2086" y2="2086"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4767" x2="5030" y1="2094" y2="2094"/><ellipse cx="4777" cy="2105" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="4786" y="2109.7589">~IChunk()</text><ellipse cx="4777" cy="2119.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="4786" y="2124.7408">getBlock(int x, int y, int z) : ChunkBlock {query}</text><ellipse cx="4777" cy="2134.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="4786" y="2139.7227">setBlock(int x, int y, int z, ChunkBlock block) : void</text><!--MD5=[ae3db0f975ab6c627dac3e24a3239207]
class IWorldEvent--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="IWorldEvent" style="stroke: #A80036; stroke-width: 1.5;" width="158" x="3614.5" y="1455.5"/><ellipse cx="3656.95" cy="1471.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3657.0594,1466.8438 L3655.9031,1471.9219 L3658.2313,1471.9219 L3657.0594,1466.8438 Z M3655.575,1464.6094 L3658.5594,1464.6094 L3661.9188,1477 L3659.4656,1477 L3658.7,1473.9375 L3655.4188,1473.9375 L3654.6688,1477 L3652.2313,1477 L3655.575,1464.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="65" x="3677.05" y="1476.156">IWorldEvent</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3615.5" x2="3771.5" y1="1487.5" y2="1487.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3615.5" x2="3771.5" y1="1495.5" y2="1495.5"/><ellipse cx="3625.5" cy="1506.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3634.5" y="1511.2589">~IWorldEvent()</text><ellipse cx="3625.5" cy="1521.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="132" x="3634.5" y="1526.2408">handle(World&amp; world) : void</text><!--MD5=[90d32ccc189f11441a6ce7cbb63ad387]
class Material--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="317.674" id="Material" style="stroke: #A80036; stroke-width: 1.5;" width="397" x="1678" y="2855"/><ellipse cx="1848.75" cy="2871" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1851.7188,2876.6406 Q1851.1406,2876.9375 1850.5,2877.0781 Q1849.8594,2877.2344 1849.1563,2877.2344 Q1846.6563,2877.2344 1845.3281,2875.5938 Q1844.0156,2873.9375 1844.0156,2870.8125 Q1844.0156,2867.6875 1845.3281,2866.0313 Q1846.6563,2864.375 1849.1563,2864.375 Q1849.8594,2864.375 1850.5,2864.5313 Q1851.1563,2864.6875 1851.7188,2864.9844 L1851.7188,2867.7031 Q1851.0938,2867.125 1850.5,2866.8594 Q1849.9063,2866.5781 1849.2813,2866.5781 Q1847.9375,2866.5781 1847.25,2867.6563 Q1846.5625,2868.7188 1846.5625,2870.8125 Q1846.5625,2872.9063 1847.25,2873.9844 Q1847.9375,2875.0469 1849.2813,2875.0469 Q1849.9063,2875.0469 1850.5,2874.7813 Q1851.0938,2874.5 1851.7188,2873.9219 L1851.7188,2876.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="1869.25" y="2875.656">Material</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1679" x2="2074" y1="2887" y2="2887"/><ellipse cx="1689" cy="2898" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1698" y="2902.7589">id : const Material::ID</text><ellipse cx="1689" cy="2912.9819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1698" y="2917.7408">isBlock : const bool</text><ellipse cx="1689" cy="2927.9638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1698" y="2932.7227">maxStackSize : const int</text><ellipse cx="1689" cy="2942.9457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="195" x="1698" y="2947.7046">CACTUS_BLOCK : const static Material</text><ellipse cx="1689" cy="2957.9276" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="1698" y="2962.6865">DEAD_SHRUB : const static Material</text><ellipse cx="1689" cy="2972.9094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="1698" y="2977.6684">DIRT_BLOCK : const static Material</text><ellipse cx="1689" cy="2987.8913" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="1698" y="2992.6502">GRASS_BLOCK : const static Material</text><ellipse cx="1689" cy="3002.8732" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="1698" y="3007.6321">NOTHING : const static Material</text><ellipse cx="1689" cy="3017.8551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="210" x="1698" y="3022.614">OAK_BARK_BLOCK : const static Material</text><ellipse cx="1689" cy="3032.837" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="207" x="1698" y="3037.5959">OAK_LEAF_BLOCK : const static Material</text><ellipse cx="1689" cy="3047.8189" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="1698" y="3052.5778">ROSE : const static Material</text><ellipse cx="1689" cy="3062.8008" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="1698" y="3067.5597">SAND_BLOCK : const static Material</text><ellipse cx="1689" cy="3077.7827" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="189" x="1698" y="3082.5416">STONE_BLOCK : const static Material</text><ellipse cx="1689" cy="3092.7645" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="1698" y="3097.5235">TALL_GRASS : const static Material</text><ellipse cx="1689" cy="3107.7464" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1698" y="3112.5053">name : const std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1679" x2="2074" y1="3119.7283" y2="3119.7283"/><ellipse cx="1689" cy="3130.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="1698" y="3135.4872">Material(Material::ID id, int maxStack, bool isBlock, std::string&amp;&amp; name)</text><ellipse cx="1689" cy="3145.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1698" y="3150.4691">toBlockID() : BlockId {query}</text><ellipse cx="1689" cy="3160.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="1698" y="3165.451">toMaterial(BlockId id) : Material&amp;</text><!--MD5=[49b4333bed3a745cc53311fcf54bbfcc]
class Mesh--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="Mesh" style="stroke: #A80036; stroke-width: 1.5;" width="221" x="5727" y="3936.5"/><ellipse cx="5817.75" cy="3952.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5820.7188,3958.1406 Q5820.1406,3958.4375 5819.5,3958.5781 Q5818.8594,3958.7344 5818.1563,3958.7344 Q5815.6563,3958.7344 5814.3281,3957.0938 Q5813.0156,3955.4375 5813.0156,3952.3125 Q5813.0156,3949.1875 5814.3281,3947.5313 Q5815.6563,3945.875 5818.1563,3945.875 Q5818.8594,3945.875 5819.5,3946.0313 Q5820.1563,3946.1875 5820.7188,3946.4844 L5820.7188,3949.2031 Q5820.0938,3948.625 5819.5,3948.3594 Q5818.9063,3948.0781 5818.2813,3948.0781 Q5816.9375,3948.0781 5816.25,3949.1563 Q5815.5625,3950.2188 5815.5625,3952.3125 Q5815.5625,3954.4063 5816.25,3955.4844 Q5816.9375,3956.5469 5818.2813,3956.5469 Q5818.9063,3956.5469 5819.5,3956.2813 Q5820.0938,3956 5820.7188,3955.4219 L5820.7188,3958.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="31" x="5838.25" y="3957.156">Mesh</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5728" x2="5947" y1="3968.5" y2="3968.5"/><ellipse cx="5738" cy="3979.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5747" y="3984.2589">textureCoords : std::vector&lt;GLfloat&gt;</text><ellipse cx="5738" cy="3994.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5747" y="3999.2408">vertexPositions : std::vector&lt;GLfloat&gt;</text><ellipse cx="5738" cy="4009.4638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5747" y="4014.2227">indices : std::vector&lt;GLuint&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5728" x2="5947" y1="4021.4457" y2="4021.4457"/><!--MD5=[3fe6da80462f9a6587cb22812339b005]
class NoiseParameters--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="122.9094" id="NoiseParameters" style="stroke: #A80036; stroke-width: 1.5;" width="130" x="2885.5" y="2952.5"/><ellipse cx="2900.5" cy="2968.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2903.4688,2974.1406 Q2902.8906,2974.4375 2902.25,2974.5781 Q2901.6094,2974.7344 2900.9063,2974.7344 Q2898.4063,2974.7344 2897.0781,2973.0938 Q2895.7656,2971.4375 2895.7656,2968.3125 Q2895.7656,2965.1875 2897.0781,2963.5313 Q2898.4063,2961.875 2900.9063,2961.875 Q2901.6094,2961.875 2902.25,2962.0313 Q2902.9063,2962.1875 2903.4688,2962.4844 L2903.4688,2965.2031 Q2902.8438,2964.625 2902.25,2964.3594 Q2901.6563,2964.0781 2901.0313,2964.0781 Q2899.6875,2964.0781 2899,2965.1563 Q2898.3125,2966.2188 2898.3125,2968.3125 Q2898.3125,2970.4063 2899,2971.4844 Q2899.6875,2972.5469 2901.0313,2972.5469 Q2901.6563,2972.5469 2902.25,2972.2813 Q2902.8438,2972 2903.4688,2971.4219 L2903.4688,2974.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="2914.5" y="2973.156">NoiseParameters</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2886.5" x2="3014.5" y1="2984.5" y2="2984.5"/><ellipse cx="2896.5" cy="2995.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2905.5" y="3000.2589">roughness : double</text><ellipse cx="2896.5" cy="3010.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="2905.5" y="3015.2408">amplitude : int</text><ellipse cx="2896.5" cy="3025.4638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2905.5" y="3030.2227">heightOffset : int</text><ellipse cx="2896.5" cy="3040.4457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2905.5" y="3045.2046">octaves : int</text><ellipse cx="2896.5" cy="3055.4276" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2905.5" y="3060.1865">smoothness : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2886.5" x2="3014.5" y1="3067.4094" y2="3067.4094"/><!--MD5=[2ff1ab8def3817c6e04a1222a8265f95]
class NonCopyable--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="62.9819" id="NonCopyable" style="stroke: #A80036; stroke-width: 1.5;" width="107" x="6714" y="714.5"/><ellipse cx="6729" cy="730.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6731.9688,736.1406 Q6731.3906,736.4375 6730.75,736.5781 Q6730.1094,736.7344 6729.4063,736.7344 Q6726.9063,736.7344 6725.5781,735.0938 Q6724.2656,733.4375 6724.2656,730.3125 Q6724.2656,727.1875 6725.5781,725.5313 Q6726.9063,723.875 6729.4063,723.875 Q6730.1094,723.875 6730.75,724.0313 Q6731.4063,724.1875 6731.9688,724.4844 L6731.9688,727.2031 Q6731.3438,726.625 6730.75,726.3594 Q6730.1563,726.0781 6729.5313,726.0781 Q6728.1875,726.0781 6727.5,727.1563 Q6726.8125,728.2188 6726.8125,730.3125 Q6726.8125,732.4063 6727.5,733.4844 Q6728.1875,734.5469 6729.5313,734.5469 Q6730.1563,734.5469 6730.75,734.2813 Q6731.3438,734 6731.9688,733.4219 L6731.9688,736.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="6743" y="735.156">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6715" x2="6820" y1="746.5" y2="746.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6715" x2="6820" y1="754.5" y2="754.5"/><ellipse cx="6725" cy="765.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="6734" y="770.2589">NonCopyable()</text><!--MD5=[10813612642ae27aa5ff8d66c0f223e4]
class Plane--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="Plane" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1616.5" y="1062.5"/><ellipse cx="1751.75" cy="1078.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1754.7188,1084.1406 Q1754.1406,1084.4375 1753.5,1084.5781 Q1752.8594,1084.7344 1752.1563,1084.7344 Q1749.6563,1084.7344 1748.3281,1083.0938 Q1747.0156,1081.4375 1747.0156,1078.3125 Q1747.0156,1075.1875 1748.3281,1073.5313 Q1749.6563,1071.875 1752.1563,1071.875 Q1752.8594,1071.875 1753.5,1072.0313 Q1754.1563,1072.1875 1754.7188,1072.4844 L1754.7188,1075.2031 Q1754.0938,1074.625 1753.5,1074.3594 Q1752.9063,1074.0781 1752.2813,1074.0781 Q1750.9375,1074.0781 1750.25,1075.1563 Q1749.5625,1076.2188 1749.5625,1078.3125 Q1749.5625,1080.4063 1750.25,1081.4844 Q1750.9375,1082.5469 1752.2813,1082.5469 Q1752.9063,1082.5469 1753.5,1082.2813 Q1754.0938,1082 1754.7188,1081.4219 L1754.7188,1084.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="31" x="1772.25" y="1083.156">Plane</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1617.5" x2="1925.5" y1="1094.5" y2="1094.5"/><ellipse cx="1627.5" cy="1105.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1636.5" y="1110.2589">distanceToOrigin : float</text><ellipse cx="1627.5" cy="1120.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1636.5" y="1125.2408">normal : glm::vec3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1617.5" x2="1925.5" y1="1132.4638" y2="1132.4638"/><ellipse cx="1627.5" cy="1143.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="1636.5" y="1148.2227">distanceToPoint(const glm::vec3&amp; point) : float {query}</text><!--MD5=[ab84e94a7f5573a9254d5dd61a9252b2]
class RenderInfo--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="92.9457" id="RenderInfo" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="4740.5" y="4187"/><ellipse cx="4775.3" cy="4203" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4778.2688,4208.6406 Q4777.6906,4208.9375 4777.05,4209.0781 Q4776.4094,4209.2344 4775.7063,4209.2344 Q4773.2063,4209.2344 4771.8781,4207.5938 Q4770.5656,4205.9375 4770.5656,4202.8125 Q4770.5656,4199.6875 4771.8781,4198.0313 Q4773.2063,4196.375 4775.7063,4196.375 Q4776.4094,4196.375 4777.05,4196.5313 Q4777.7063,4196.6875 4778.2688,4196.9844 L4778.2688,4199.7031 Q4777.6438,4199.125 4777.05,4198.8594 Q4776.4563,4198.5781 4775.8313,4198.5781 Q4774.4875,4198.5781 4773.8,4199.6563 Q4773.1125,4200.7188 4773.1125,4202.8125 Q4773.1125,4204.9063 4773.8,4205.9844 Q4774.4875,4207.0469 4775.8313,4207.0469 Q4776.4563,4207.0469 4777.05,4206.7813 Q4777.6438,4206.5 4778.2688,4205.9219 L4778.2688,4208.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="4793.7" y="4207.656">RenderInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4741.5" x2="4877.5" y1="4219" y2="4219"/><ellipse cx="4751.5" cy="4230" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4760.5" y="4234.7589">indicesCount : GLuint</text><ellipse cx="4751.5" cy="4244.9819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4760.5" y="4249.7408">vao : GLuint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4741.5" x2="4877.5" y1="4256.9638" y2="4256.9638"/><ellipse cx="4751.5" cy="4267.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4760.5" y="4272.7227">reset() : void</text><!--MD5=[daf99f9fd5fc85f05b9c9a8571f9aefc]
class StructureBuilder::Block--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="122.9094" id="StructureBuilder::Block" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="6539.5" y="2952.5"/><ellipse cx="6571.6" cy="2968.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6574.5688,2974.1406 Q6573.9906,2974.4375 6573.35,2974.5781 Q6572.7094,2974.7344 6572.0063,2974.7344 Q6569.5063,2974.7344 6568.1781,2973.0938 Q6566.8656,2971.4375 6566.8656,2968.3125 Q6566.8656,2965.1875 6568.1781,2963.5313 Q6569.5063,2961.875 6572.0063,2961.875 Q6572.7094,2961.875 6573.35,2962.0313 Q6574.0063,2962.1875 6574.5688,2962.4844 L6574.5688,2965.2031 Q6573.9438,2964.625 6573.35,2964.3594 Q6572.7563,2964.0781 6572.1313,2964.0781 Q6570.7875,2964.0781 6570.1,2965.1563 Q6569.4125,2966.2188 6569.4125,2968.3125 Q6569.4125,2970.4063 6570.1,2971.4844 Q6570.7875,2972.5469 6572.1313,2972.5469 Q6572.7563,2972.5469 6573.35,2972.2813 Q6573.9438,2972 6574.5688,2971.4219 L6574.5688,2974.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="6589.4" y="2973.156">StructureBuilder::Block</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6540.5" x2="6736.5" y1="2984.5" y2="2984.5"/><ellipse cx="6550.5" cy="2995.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6559.5" y="3000.2589">id : BlockId</text><ellipse cx="6550.5" cy="3010.4819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="6559.5" y="3015.2408">x : int</text><ellipse cx="6550.5" cy="3025.4638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="6559.5" y="3030.2227">y : int</text><ellipse cx="6550.5" cy="3040.4457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="6559.5" y="3045.2046">z : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6540.5" x2="6736.5" y1="3052.4276" y2="3052.4276"/><ellipse cx="6550.5" cy="3063.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="6559.5" y="3068.1865">Block(BlockId id, int x, int y, int z)</text><!--MD5=[18765bf82d535b175c600dce7ae56370]
class VectorXZ--><rect fill="#FEFECE" filter="url(#f1ap1055zl0dzs)" height="77.9638" id="VectorXZ" style="stroke: #A80036; stroke-width: 1.5;" width="82" x="4456.5" y="1706"/><ellipse cx="4471.5" cy="1722" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4474.4688,1727.6406 Q4473.8906,1727.9375 4473.25,1728.0781 Q4472.6094,1728.2344 4471.9063,1728.2344 Q4469.4063,1728.2344 4468.0781,1726.5938 Q4466.7656,1724.9375 4466.7656,1721.8125 Q4466.7656,1718.6875 4468.0781,1717.0313 Q4469.4063,1715.375 4471.9063,1715.375 Q4472.6094,1715.375 4473.25,1715.5313 Q4473.9063,1715.6875 4474.4688,1715.9844 L4474.4688,1718.7031 Q4473.8438,1718.125 4473.25,1717.8594 Q4472.6563,1717.5781 4472.0313,1717.5781 Q4470.6875,1717.5781 4470,1718.6563 Q4469.3125,1719.7188 4469.3125,1721.8125 Q4469.3125,1723.9063 4470,1724.9844 Q4470.6875,1726.0469 4472.0313,1726.0469 Q4472.6563,1726.0469 4473.25,1725.7813 Q4473.8438,1725.5 4474.4688,1724.9219 L4474.4688,1727.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="4485.5" y="1726.656">VectorXZ</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4457.5" x2="4537.5" y1="1738" y2="1738"/><ellipse cx="4467.5" cy="1749" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="4476.5" y="1753.7589">x : int</text><ellipse cx="4467.5" cy="1763.9819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="4476.5" y="1768.7408">z : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4457.5" x2="4537.5" y1="1775.9638" y2="1775.9638"/><!--MD5=[0eff27107bb8645eee571e23164bf493]
reverse link BasicShader to ChunkShader--><path d="M4633.76,3758.25 C4587.04,3782.3 4536.82,3810.13 4492.5,3839 C4443.51,3870.91 4391.88,3913.52 4356.92,3943.91 " fill="none" id="BasicShader&lt;-ChunkShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4630.81,3751.89,4651.81,3749.05,4637.17,3764.37,4630.81,3751.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0985bf17c13be921fd53a8ce8fc30a97]
reverse link BasicShader to FloraShader--><path d="M4744.39,3766.49 C4711.9,3818.78 4671.37,3884.03 4643.46,3928.95 " fill="none" id="BasicShader&lt;-FloraShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4738.57,3762.6,4755.07,3749.3,4750.46,3769.98,4738.57,3762.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[94ce6458e8cbca3a4985e333c5cf1a40]
reverse link BasicShader to WaterShader--><path d="M4825.13,3768.54 C4841.52,3820.48 4861.76,3884.61 4875.76,3928.95 " fill="none" id="BasicShader&lt;-WaterShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4818.4,3770.48,4819.06,3749.3,4831.75,3766.27,4818.4,3770.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1341ebf8b96ffa8f8ac1e1017ec7851e]
reverse link BasicTexture to TextureAtlas--><path d="M7126.2,1205.83 C7121.49,1309.73 7123.22,1479.06 7169.5,1616 C7178.48,1642.57 7194.32,1668.97 7209.85,1690.84 " fill="none" id="BasicTexture&lt;-TextureAtlas" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7119.22,1205.25,7127.24,1185.63,7133.2,1205.96,7119.22,1205.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d0d2fe46d66a9262c01aef570e7621cc]
reverse link Biome to DesertBiome--><path d="M3479.58,2243.37 C3515.31,2275.57 3556.31,2306.32 3599.5,2327 C3757.28,2402.54 3829.43,2314.21 3988.5,2387 C4046.08,2413.35 4100.24,2460 4139.41,2499.27 " fill="none" id="Biome&lt;-DesertBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3474.52,2248.23,3464.6,2229.51,3484.03,2237.95,3474.52,2248.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8fadbf3df80630f7e3730509a9f189b7]
reverse link Biome to GrasslandBiome--><path d="M3229.61,2243.83 C3193.7,2276.66 3152.02,2307.61 3107.5,2327 C2792.4,2464.26 2654.2,2255.85 2336.5,2387 C2280.87,2409.96 2229.21,2453.28 2190.81,2491.73 " fill="none" id="Biome&lt;-GrasslandBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3225.28,2238.3,3244.64,2229.68,3234.88,2248.49,3225.28,2238.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[583707b60e19a8949f9ee1b6e88084ef]
reverse link Biome to LightForest--><path d="M3225.79,2243.35 C3190.48,2275.37 3150.04,2306.05 3107.5,2327 C2967.09,2396.15 2902.22,2320.58 2760.5,2387 C2703.38,2413.77 2649.4,2460.15 2610.21,2499.19 " fill="none" id="Biome&lt;-LightForest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3221.19,2238.07,3240.6,2229.57,3230.72,2248.32,3221.19,2238.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[776342dc73c4c1559fd74d4c5ae140a0]
reverse link Biome to OceanBiome--><path d="M3352.5,2249.81 C3352.5,2333.51 3352.5,2434.07 3352.5,2499.31 " fill="none" id="Biome&lt;-OceanBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3345.5,2249.76,3352.5,2229.76,3359.5,2249.76,3345.5,2249.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f6d34901311cd33b938cffbf4622647]
reverse link Biome to TemperateForestBiome--><path d="M3482.88,2244.8 C3559.91,2329.46 3653.91,2432.76 3714.46,2499.31 " fill="none" id="Biome&lt;-TemperateForestBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3477.48,2249.27,3469.2,2229.76,3487.84,2239.84,3477.48,2249.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0652a892870b489a3506da0646bcf661]
reverse link BlockType to DefaultBlock--><path d="M6526.11,1180.72 C6477.96,1265.04 6399.66,1402.16 6364.98,1462.89 " fill="none" id="BlockType&lt;-DefaultBlock" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6520.05,1177.22,6536.05,1163.32,6532.21,1184.16,6520.05,1177.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[39e7d6c1ddf9222f85c2f5f82bf418e2]
reverse link Entity to Camera--><path d="M2039.74,657.42 C2008.54,634.76 1974.59,610.21 1943.5,587 C1932.07,578.47 1920.25,569.5 1908.39,560.45 " fill="none" id="Entity&lt;-Camera" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2044.2,652.01,2056.27,669.43,2035.97,663.33,2044.2,652.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[519eef1eb44dbda2ca7a97e508f09761]
reverse link Camera to Entity--><path d="M1918.61,594.52 C1952.77,619.83 1989.34,646.05 2023.15,669.43 " fill="none" id="Camera&lt;-Entity" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1908.09,586.7,1910.5169,593.4905,1917.7184,593.862,1915.2915,587.0715,1908.09,586.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[12bb95a47a00263d9ac83c2497efb6a3]
reverse link Entity to Player--><path d="M2147.5,842.87 C2147.5,1055.94 2147.5,1573.65 2147.5,1873.89 " fill="none" id="Entity&lt;-Player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2140.5,842.61,2147.5,822.61,2154.5,842.61,2140.5,842.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0b5f9f0b7395bf81d0041d87c9169070]
reverse link IChunk to Chunk--><path d="M4880.14,2166.31 C4863.99,2223.34 4839.68,2309.16 4817.68,2386.81 " fill="none" id="IChunk&lt;-Chunk" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4873.42,2164.37,4885.6,2147.03,4886.89,2168.18,4873.42,2164.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ea054afcf6f01fa36c0749ede0e51665]
reverse link IChunk to ChunkSection--><path d="M4918.35,2166.68 C4935.52,2224.3 4960.37,2310.79 4978.5,2387 C5011.9,2527.34 5043.15,2686.93 5065.8,2809.84 " fill="none" id="IChunk&lt;-ChunkSection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4911.55,2168.36,4912.51,2147.19,4924.96,2164.34,4911.55,2168.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c25790f35067d0b929b26e036daa1dc]
reverse link IWorldEvent to PlayerDigEvent--><path d="M3596.01,1541.47 C3515.97,1579.21 3401.44,1633.22 3310.77,1675.97 " fill="none" id="IWorldEvent&lt;-PlayerDigEvent" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3593.24,1535.04,3614.32,1532.84,3599.21,1547.7,3593.24,1535.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc77585f083eeae781a36f8a463ef233]
reverse link NonCopyable to BasicTexture--><path d="M6829.92,789.4 C6871.99,819.36 6927.61,861.75 6971.5,905 C7011,943.93 7049.94,992.31 7079.74,1032.08 " fill="none" id="NonCopyable&lt;-BasicTexture" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6825.7,794.98,6813.37,777.75,6833.75,783.53,6825.7,794.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ea4a1870c7e860ebd4d8646856d45da]
reverse link NonCopyable to BlockData--><path d="M6765.5,797.69 C6760.63,897.68 6744.83,1126.79 6697.5,1313 C6685.47,1360.32 6664.29,1411.94 6648.19,1447.81 " fill="none" id="NonCopyable&lt;-BlockData" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6758.51,797.22,6766.42,777.56,6772.5,797.86,6758.51,797.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[82d5c80b04b1d3eca16fc75a607f8725]
reverse link NonCopyable to BlockDataHolder--><path d="M6767.61,797.75 C6767.83,904.32 6768.33,1159.2 6768.5,1373 C6768.59,1481 6790.8,1510.33 6768.5,1616 C6697.19,1954 6601.56,2014.42 6454.5,2327 C6441.81,2353.98 6432.18,2358.19 6424.5,2387 C6374.09,2576.07 6376.72,2808.26 6382.76,2929.8 " fill="none" id="NonCopyable&lt;-BlockDataHolder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6760.61,797.63,6767.57,777.62,6774.61,797.6,6760.61,797.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[384bab73fc3ab719fdad449e408b1102]
reverse link NonCopyable to BlockType--><path d="M6740.62,795.27 C6703.05,862.75 6635.08,984.83 6596.1,1054.84 " fill="none" id="NonCopyable&lt;-BlockType" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6734.52,791.85,6750.36,777.78,6746.75,798.66,6734.52,791.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d52ce11f5be817223ec62a91c5392340]
reverse link NonCopyable to CubeTexture--><path d="M6818.57,791.75 C6848.02,820.82 6882.65,861.33 6900.5,905 C6999.75,1147.82 6945.5,1231.18 6945.5,1493.5 C6945.5,1493.5 6945.5,1493.5 6945.5,3400.5 C6945.5,3586.26 6945.5,3805.39 6945.5,3913.96 " fill="none" id="NonCopyable&lt;-CubeTexture" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6813.41,796.5,6803.76,777.63,6823.07,786.36,6813.41,796.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[995653ec255493522c79d261a7611578]
reverse link NonCopyable to Material--><path d="M6693.96,747.84 C6343.78,752.43 4843.7,779.25 4395.5,905 C3681.77,1105.24 3496.71,1214.63 2916.5,1676 C2618.46,1913 2693.99,2145.03 2359.5,2327 C2183.42,2422.79 2048.75,2239.98 1912.5,2387 C1851.73,2452.57 1854.12,2691.7 1863.64,2854.68 " fill="none" id="NonCopyable&lt;-Material" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6693.88,740.84,6713.97,747.58,6694.06,754.84,6693.88,740.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f1b4503998002682e9eb539632dc449f]
reverse link NonCopyable to Model--><path d="M6779.81,797.5 C6807.94,917.43 6874.5,1229.15 6874.5,1493.5 C6874.5,1493.5 6874.5,1493.5 6874.5,2101.5 C6874.5,2419.09 6923.72,3287.45 6708.5,3521 C6635.45,3600.27 6558.09,3514.18 6473.5,3581 C6395.5,3642.61 6422.43,3694.87 6369.5,3779 C6357.04,3798.8 6343.24,3819.14 6329.18,3838.95 " fill="none" id="NonCopyable&lt;-Model" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6772.92,798.78,6775.11,777.71,6786.54,795.55,6772.92,798.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a27aef3a5945bba73450efe97f17a632]
reverse link NonCopyable to Shader--><path d="M6694.43,766.3 C6621.17,788.89 6509.1,832.73 6436.5,905 C6272.8,1067.96 6262.27,1147.89 6210.5,1373 C6073.34,1969.43 6271.76,2141.38 6207.5,2750 C6187.02,2943.97 6133.6,3165.38 6099.84,3292.85 " fill="none" id="NonCopyable&lt;-Shader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6692.83,759.47,6714,760.48,6696.82,772.89,6692.83,759.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6b24302e5a593b3b1af4dca8c013547c]
reverse link NonCopyable to Singleton--><path d="M6841.09,748.33 C6952.97,754.41 7165.61,782.57 7286.5,905 C7335.62,954.75 7344.31,1042.87 7345.54,1084.7 " fill="none" id="NonCopyable&lt;-Singleton" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6840.75,755.32,6821.08,747.42,6841.38,741.33,6840.75,755.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f91a52ca37f449f7a4c347ea9aa54297]
reverse link NonCopyable to World--><path d="M6693.61,759.34 C6393.08,809.52 5256.73,999.26 4798.65,1075.75 " fill="none" id="NonCopyable&lt;-World" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6692.91,752.36,6713.79,755.97,6695.21,766.17,6692.91,752.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[646bb416a8fd4e359ed1e69895d02c28]
reverse link NonMovable to Singleton--><path d="M7345.5,797.9 C7345.5,877.14 7345.5,1026.89 7345.5,1084.55 " fill="none" id="NonMovable&lt;-Singleton" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7338.5,797.78,7345.5,777.78,7352.5,797.78,7338.5,797.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79be4aa3eef87a919746b8c542dff003]
reverse link Shader to BasicShader--><path d="M5859.97,3499.99 C5837.21,3508.16 5814.11,3515.4 5791.5,3521 C5457.43,3603.68 5353.23,3496.98 5019.5,3581 C4990.39,3588.33 4960.29,3599.17 4932,3611 " fill="none" id="Shader&lt;-BasicShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5857.81,3493.33,5878.99,3492.93,5862.68,3506.45,5857.81,3493.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e490c87974a456420d8e593a16ea6ac6]
reverse link Shader to SkyboxShader--><path d="M6260.28,3513.9 C6266.69,3516.45 6273.11,3518.83 6279.5,3521 C6374.8,3553.42 6662.2,3505.25 6728.5,3581 C6812.01,3676.41 6723.53,3826.68 6657.83,3913.63 " fill="none" id="Shader&lt;-SkyboxShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6257.37,3520.27,6241.67,3506.04,6262.82,3507.37,6257.37,3520.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[799f81c2d5527b20773ce396dfdccb03]
reverse link Singleton to BlockDatabase--><path d="M7344.14,1153.52 C7342.06,1219.87 7338.09,1346.89 7335.63,1425.49 " fill="none" id="Singleton&lt;-BlockDatabase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7337.15,1152.9,7344.78,1133.13,7351.15,1153.34,7337.15,1152.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e7b2ea90f6837f7a23ee43ef7f1cc88]
reverse link Singleton to RandomSingleton--><path d="M7373.26,1149.87 C7421.6,1219.3 7521.22,1362.39 7575.41,1440.23 " fill="none" id="Singleton&lt;-RandomSingleton" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7367.28,1153.54,7361.6,1133.13,7378.77,1145.54,7367.28,1153.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ebbc120d92984a41799a68ce8d99e3a]
reverse link StateBase to StatePlay--><path d="M2132.19,563.04 C2142.82,571.91 2154.01,580.13 2165.5,587 C2245.52,634.83 2281.37,609 2366.5,647 C2372,649.46 2377.55,652.07 2383.09,654.8 " fill="none" id="StateBase&lt;-StatePlay" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2127.4,568.14,2117.05,549.65,2136.67,557.66,2127.4,568.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41c49d40ed73a47886b24ccdf30a299a]
reverse link TerrainGenerator to ClassicOverWorldGenerator--><path d="M3776.5,1812.04 C3776.5,1846.57 3776.5,1890.53 3776.5,1933.63 " fill="none" id="TerrainGenerator&lt;-ClassicOverWorldGenerator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3769.5,1811.85,3776.5,1791.85,3783.5,1811.85,3769.5,1811.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[74aec72ff6bb715055995071d0deec97]
reverse link TerrainGenerator to SuperFlatGenerator--><path d="M3647.67,1770.32 C3454.08,1806.91 3110.3,1872.08 3107.5,1874 C3040.47,1920.07 2999.32,2009.8 2980.23,2061.09 " fill="none" id="TerrainGenerator&lt;-SuperFlatGenerator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3646.4,1763.43,3667.35,1766.6,3649,1777.19,3646.4,1763.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[034b6f732e016cc19893cb440afa1c6e]
reverse link Application to Camera--><path d="M1844.37,296.42 C1837.5,312.26 1830.58,328.24 1823.87,343.71 " fill="none" id="Application&lt;-Camera" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1849.6,284.35,1843.5435,288.2639,1844.8269,295.3599,1850.8834,291.446,1849.6,284.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[252d7c249eb63dda13696ef08c982963]
reverse link Application to Config--><path d="M1752.54,222.6 C1702.47,253.56 1651.29,294.1 1617.5,344 C1546.74,448.5 1532.74,600.53 1530.82,684.17 " fill="none" id="Application&lt;-Config" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1763.87,215.74,1756.6655,215.4323,1753.6105,221.9643,1760.815,222.272,1763.87,215.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a17c4384a070325d2331176c4987f3ab]
reverse link Application to Context--><path d="M2063.68,262.87 C2106.29,295.09 2146.09,326.18 2165.5,344 C2193.55,369.76 2222.33,401.86 2243.26,426.45 " fill="none" id="Application&lt;-Context" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2053.1,254.89,2055.4836,261.6958,2062.6826,262.1132,2060.299,255.3074,2053.1,254.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[60b16d0648aaa9187f3a1a1447bb66f3]
reverse link Application to RenderMaster--><path d="M1751.75,206.73 C1678.71,239.26 1594.09,285.2 1530.5,344 C1376.46,486.42 1281.5,535.21 1281.5,745 C1281.5,745 1281.5,745 1281.5,2569.5 C1281.5,2903.33 1368.22,3056.69 1660.5,3218 C1867.38,3332.18 3487.18,3380.98 4040.19,3394.43 " fill="none" id="Application&lt;-RenderMaster" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1763.84,201.42,1756.7384,200.1683,1752.8516,206.2423,1759.9532,207.4939,1763.84,201.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[61a9c989b970f737e95b0d598d1f431a]
reverse link Application to StateBase--><path d="M1959.88,296.37 C1972.39,325.53 1985.68,355.16 1998.02,381.26 " fill="none" id="Application&lt;-StateBase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1954.76,284.35,1953.4347,291.4383,1959.4679,295.3879,1960.7933,288.2996,1954.76,284.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f64e7529268329aa169b4779be8caac2]
reverse link StateBase to Application--><path d="M2016.54,368.84 C2005.89,342.22 1993.42,312.79 1980.78,284.35 " fill="none" id="StateBase&lt;-Application" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2021.47,381.26,2022.9728,374.2072,2017.0406,370.1074,2015.5378,377.1602,2021.47,381.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8530722f87353775e81f6562a5c5086d]
reverse link Biome to NoiseGenerator--><path d="M3233.04,2239.97 C3166.97,2316.57 3086.74,2409.57 3028.68,2476.87 " fill="none" id="Biome&lt;-NoiseGenerator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3241.85,2229.76,3234.9011,2231.6867,3234.0069,2238.8422,3240.9558,2236.9155,3241.85,2229.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8e32dee355c9424ac261f29ca7bbc3a7]
reverse link BlockData to BlockDataHolder--><path d="M6602.82,1553.79 C6547.19,1694.23 6409.38,2063.62 6362.5,2387 C6339.36,2546.66 6354.55,2588.86 6362.5,2750 C6365.48,2810.38 6372.28,2878.27 6378.18,2929.95 " fill="none" id="BlockData&lt;-BlockDataHolder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6607.78,1541.32,6601.8461,1545.4174,6603.3461,1552.4708,6609.28,1548.3734,6607.78,1541.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2ab2f94e0ed71adc5e28fd9db6fdb419]
reverse link BlockDataHolder to BlockId--><path d="M6442.27,3109.82 C6464.75,3145.58 6492.6,3185.45 6522.5,3218 C6551.61,3249.69 6571.93,3244.14 6598.5,3278 C6605.03,3286.32 6610.99,3295.54 6616.37,3305.07 " fill="none" id="BlockDataHolder&lt;-BlockId" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6435.16,3098.36,6434.927,3105.5673,6441.4903,3108.5545,6441.7233,3101.3471,6435.16,3098.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[07658346e454f7930c9ac0bd0aaae762]
reverse link BlockDataHolder to BlockMeshType--><path d="M6380.46,3111.38 C6373.73,3192 6364.49,3302.8 6359.68,3360.33 " fill="none" id="BlockDataHolder&lt;-BlockMeshType" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6381.56,3098.21,6377.073,3103.855,6380.558,3110.1681,6385.045,3104.523,6381.56,3098.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed0eda2c3c17f8b543378538e5912fd8]
reverse link BlockDataHolder to BlockShaderType--><path d="M6420.49,3110.85 C6446.3,3188.18 6481.46,3293.52 6501.28,3352.91 " fill="none" id="BlockDataHolder&lt;-BlockShaderType" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6416.27,3098.21,6414.3799,3105.169,6420.0766,3109.5902,6421.9667,3102.6313,6416.27,3098.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a989cf6f41559388c77df777f718144]
reverse link BlockDatabase to TextureAtlas--><path d="M7307.51,1576.23 C7295.41,1613.83 7281.34,1657.52 7270.6,1690.89 " fill="none" id="BlockDatabase&lt;-TextureAtlas" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7311.53,1563.73,7305.8828,1568.2143,7307.8502,1575.1519,7313.4974,1570.6675,7311.53,1563.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[92e1a3d7a53f1e1ac95e8975f4f4ec94]
reverse link BlockType to BlockData--><path d="M6576.87,1176.28 C6589.01,1253.9 6608.8,1380.4 6619.35,1447.81 " fill="none" id="BlockType&lt;-BlockData" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6574.84,1163.32,6571.818,1169.8673,6576.6994,1175.1751,6579.7214,1168.6277,6574.84,1163.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[10103a681ca3ac62deb4a04167be95bf]
reverse link Camera to Config--><path d="M1657.6,597.04 C1643.06,613.82 1628.41,630.8 1614.5,647 C1604.19,659.01 1593.21,671.9 1582.74,684.25 " fill="none" id="Camera&lt;-Config" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1666.14,587.19,1659.1881,589.106,1658.2828,596.26,1665.2348,594.3441,1666.14,587.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5bddae814d6c0fe7fb76c2b13046388e]
reverse link Camera to ViewFrustum--><path d="M1771.5,600.16 C1771.5,635.91 1771.5,672.14 1771.5,699.43 " fill="none" id="Camera&lt;-ViewFrustum" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1771.5,587.03,1767.5,593.03,1771.5,599.03,1775.5,593.03,1771.5,587.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e0dbf2e9036b521d6829d36170cd5102]
reverse link Chunk to Array2D--><path d="M4580.55,2759.52 C4512.67,2828.88 4440.66,2902.47 4391.81,2952.39 " fill="none" id="Chunk&lt;-Array2D" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4589.66,2750.21,4582.6047,2751.7011,4581.2676,2758.7871,4588.3228,2757.296,4589.66,2750.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[00451e711bbec0f632776b5f5d9e9060]
reverse link Chunk to ChunkSection--><path d="M4911.03,2760.84 C4923.29,2777.08 4935.73,2793.53 4948.05,2809.86 " fill="none" id="Chunk&lt;-ChunkSection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4903,2750.21,4903.4174,2757.409,4910.2232,2759.7926,4909.8058,2752.5936,4903,2750.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93f70d9559768c8a65bbe6913e87a17d]
reverse link Chunk to World--><path d="M4751.99,2373.66 C4750.81,2357.88 4749.63,2342.17 4748.5,2327 C4716.86,1903.01 4749.75,1791.99 4677.5,1373 C4674.12,1353.41 4669.91,1333.16 4665.24,1313.01 " fill="none" id="Chunk&lt;-World" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4752.98,2386.93,4756.5207,2380.648,4752.0838,2374.9635,4748.5431,2381.2455,4752.98,2386.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[655c4904092ecf979f9d962edf898854]
reverse link ChunkManager to TerrainGenerator--><path d="M4322.63,1555.77 C4186.39,1602.73 4001.51,1666.45 3885.62,1706.39 " fill="none" id="ChunkManager&lt;-TerrainGenerator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4335.24,1551.42,4328.2629,1549.5977,4323.8973,1555.3372,4330.8744,1557.1595,4335.24,1551.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[810f3fb036967e9e373504c980f455a3]
reverse link ChunkManager to VectorXZ--><path d="M4497.5,1629.45 C4497.5,1657.46 4497.5,1684.81 4497.5,1705.75 " fill="none" id="ChunkManager&lt;-VectorXZ" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4497.5,1616.11,4493.5,1622.11,4497.5,1628.11,4501.5,1622.11,4497.5,1616.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93cfd71c029a50e2b43ec9e6cdf491e4]
reverse link ChunkManager to World--><path d="M4547.95,1360.24 C4552.56,1344.98 4557.2,1329.17 4561.74,1313.26 " fill="none" id="ChunkManager&lt;-World" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4544.09,1372.92,4549.6647,1368.3459,4547.5866,1361.4407,4542.0119,1366.0148,4544.09,1372.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fd883e6a57a941fed17dd6d54f7000fa]
reverse link World to ChunkManager--><path d="M4531.98,1326.12 C4527.6,1342.1 4523.4,1357.85 4519.52,1372.92 " fill="none" id="World&lt;-ChunkManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4535.53,1313.26,4530.0795,1317.9814,4532.3414,1324.8286,4537.7919,1320.1072,4535.53,1313.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[91ce86a44fc0be7bac3b16b4ef3a3902]
reverse link ChunkMesh to Mesh--><path d="M5837.5,3792.33 C5837.5,3842.12 5837.5,3898.07 5837.5,3936.22 " fill="none" id="ChunkMesh&lt;-Mesh" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5837.5,3779.14,5833.5,3785.14,5837.5,3791.14,5841.5,3785.14,5837.5,3779.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b347c7a9f1b4ddc3fc7294ddc8fced57]
reverse link ChunkMesh to Model--><path d="M5972.17,3787.39 C5993.63,3804.35 6016.13,3822.12 6038.43,3839.74 " fill="none" id="ChunkMesh&lt;-Model" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5961.73,3779.14,5963.9589,3785.998,5971.1466,3786.5783,5968.9177,3779.7203,5961.73,3779.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d64ec8254b92b1c176fc154667d920fc]
reverse link ChunkMeshBuilder to BlockDataHolder--><path d="M5872.04,2689.48 C6009.2,2775.4 6187.91,2887.35 6295.12,2954.5 " fill="none" id="ChunkMeshBuilder&lt;-BlockDataHolder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5860.99,2682.56,5863.9511,2689.1351,5871.1593,2688.9307,5868.1982,2682.3556,5860.99,2682.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4d7ed62c4d75f081d018b832e0cf9b98]
reverse link ChunkMeshBuilder to ChunkBlock--><path d="M5674.87,2695.74 C5667.21,2867.37 5653.72,3169.62 5647.21,3315.33 " fill="none" id="ChunkMeshBuilder&lt;-ChunkBlock" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5675.45,2682.6,5671.1837,2688.4137,5674.9093,2694.5878,5679.1756,2688.7741,5675.45,2682.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5341f685415d7ef35088ad2adc53f47]
reverse link ChunkMeshBuilder to ChunkMesh--><path d="M5701.89,2695.77 C5725.49,2837.29 5763.79,3073.72 5791.5,3278 C5805.49,3381.12 5818.72,3499.53 5827.38,3580.8 " fill="none" id="ChunkMeshBuilder&lt;-ChunkMesh" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5699.72,2682.79,5696.7644,2689.3676,5701.6992,2694.6257,5704.6548,2688.0481,5699.72,2682.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e81ba0070a58aee4b86f48d8e9ff021]
reverse link ChunkMeshBuilder to ChunkMeshCollection--><path d="M5638.1,2695.02 C5574.61,2883.01 5457.81,3228.83 5415.94,3352.79 " fill="none" id="ChunkMeshBuilder&lt;-ChunkMeshCollection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5642.3,2682.6,5636.591,2687.0054,5638.4618,2693.9696,5644.1708,2689.5642,5642.3,2682.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d6378de30681fd2d152405ce75a4b04]
reverse link ChunkMeshBuilder to ChunkSection--><path d="M5522.25,2690.72 C5442.43,2751.86 5345.72,2825.93 5265.16,2887.64 " fill="none" id="ChunkMeshBuilder&lt;-ChunkSection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5532.9,2682.56,5525.7041,2683.028,5523.3685,2689.8504,5530.5644,2689.3824,5532.9,2682.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd02dda7629b35a641d588cfffc6ef38]
reverse link ChunkMeshCollection to ChunkMesh--><path d="M5436.76,3456.69 C5453.04,3478.79 5473.73,3503.11 5496.5,3521 C5524.85,3543.27 5556.84,3563.29 5589.59,3580.99 " fill="none" id="ChunkMeshCollection&lt;-ChunkMesh" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5429.12,3446.05,5429.3727,3453.2567,5436.1223,3455.7952,5435.8695,3448.5885,5429.12,3446.05" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="7" x="5425.6525" y="3467.7419">3</text><!--MD5=[08b4abc04afaf506a50d3d9475b5290f]
reverse link ChunkRenderer to ChunkShader--><path d="M4182.66,3745.79 C4216.31,3806.08 4265.32,3893.89 4293.13,3943.72 " fill="none" id="ChunkRenderer&lt;-ChunkShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4176.15,3734.12,4175.5833,3741.3088,4182.0012,3744.5968,4182.5679,3737.408,4176.15,3734.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[13c138ebac0b116956ad980a9dc43f32]
reverse link ChunkRenderer to RenderInfo--><path d="M4138.2,3747.57 C4130.09,3845.22 4131.1,4026.57 4232.5,4127 C4303.32,4197.14 4603.2,4221.7 4740.43,4229.37 " fill="none" id="ChunkRenderer&lt;-RenderInfo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4139.4,3734.36,4134.8754,3739.975,4138.3183,3746.3112,4142.8429,3740.6961,4139.4,3734.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fcfd1380abf23fd954a8bb072697ff9]
reverse link ChunkSection to AABB--><path d="M4929.3,3219.45 C4895.65,3259.41 4862.61,3298.63 4836.08,3330.13 " fill="none" id="ChunkSection&lt;-AABB" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4937.87,3209.28,4930.9457,3211.2935,4930.1412,3218.4596,4937.0655,3216.4461,4937.87,3209.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0b73011cd6d8b86ca4566bebd48e24d7]
reverse link ChunkSection to ChunkBlock--><path d="M5276.41,3126.64 C5345.65,3172.15 5425.32,3226.18 5495.5,3278 C5511.36,3289.71 5527.84,3302.49 5543.8,3315.2 " fill="none" id="ChunkSection&lt;-ChunkBlock" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5265.39,3119.41,5268.2141,3126.0451,5275.425,3125.9901,5272.6009,3119.3551,5265.39,3119.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c3663f4c626996f0efa31ec7d12a0acc]
reverse link ChunkSection to ChunkMeshCollection--><path d="M5268.05,3228.62 C5304.66,3275.57 5339.88,3320.75 5364.79,3352.7 " fill="none" id="ChunkSection&lt;-ChunkMeshCollection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5259.97,3218.26,5260.5059,3225.4512,5267.3501,3227.7223,5266.8141,3220.5311,5259.97,3218.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4863a825bd6004043f4b674f2ed2e97b]
reverse link ChunkSection to World--><path d="M5115.86,2796.67 C5119.5,2611.99 5119.5,2339.29 5119.5,2101.5 C5119.5,1744 5119.5,1744 5119.5,1744 C5119.5,1531.58 4944.64,1347.9 4798.8,1233.71 " fill="none" id="ChunkSection&lt;-World" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5115.59,2809.82,5119.7079,2803.9003,5115.8273,2797.8223,5111.7094,2803.7421,5115.59,2809.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c0092f34b987326e771557561875136a]
reverse link World to ChunkSection--><path d="M4808.7,1265.71 C4939.29,1380.71 5084.5,1550.42 5084.5,1744 C5084.5,1744 5084.5,1744 5084.5,2101.5 C5084.5,2345 5084.5,2625.09 5088.19,2809.82 " fill="none" id="World&lt;-ChunkSection" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4798.52,1256.84,4800.4094,1263.7992,4807.5599,1264.7318,4805.6705,1257.7726,4798.52,1256.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9fdb1ac162627b80fccf986dc23bbb3e]
reverse link ClassicOverWorldGenerator to Array2D--><path d="M3948.29,2173.17 C4131.92,2250.59 4398.76,2365.77 4412.5,2387 C4528.14,2565.67 4422.23,2833.62 4364.4,2952.49 " fill="none" id="ClassicOverWorldGenerator&lt;-Array2D" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3936.04,2168.01,3940.0131,2174.0278,3947.0961,2172.6749,3943.1231,2166.6571,3936.04,2168.01" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="7" x="3943.9373" y="2167.7907">2</text><!--MD5=[2b0bdacbd62c5c14fd361c31e0906079]
reverse link ClassicOverWorldGenerator to Chunk--><path d="M3948.48,2162.75 C4091.96,2215.99 4300.34,2298.32 4474.5,2387 C4506.76,2403.43 4540.16,2422.22 4572.33,2441.34 " fill="none" id="ClassicOverWorldGenerator&lt;-Chunk" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3936.11,2158.17,3940.3468,2164.0052,3947.3627,2162.3386,3943.1259,2156.5034,3936.11,2158.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[421aa8c73fbe76ce74fd5914489e771d]
reverse link ClassicOverWorldGenerator to DesertBiome--><path d="M3936.18,2277 C4006.68,2354.48 4085.42,2441.02 4138.47,2499.32 " fill="none" id="ClassicOverWorldGenerator&lt;-DesertBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3927.18,2267.11,3928.2573,2274.2402,3935.2534,2275.9881,3934.1761,2268.8579,3927.18,2267.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a668fa0da0a0c561bb62a08ff6e93cf7]
reverse link ClassicOverWorldGenerator to GrasslandBiome--><path d="M3665,2276.77 C3645.22,2296.73 3623.01,2314.4 3598.5,2327 C3348.83,2455.41 2597.61,2283.8 2336.5,2387 C2280.08,2409.3 2228.03,2453.11 2189.62,2491.99 " fill="none" id="ClassicOverWorldGenerator&lt;-GrasslandBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3674.21,2267.13,3667.1738,2268.7087,3665.9249,2275.8109,3672.9611,2274.2321,3674.21,2267.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[abf87f2150e1ab739700e9c3ba2f64a3]
reverse link ClassicOverWorldGenerator to LightForest--><path d="M3664.26,2276.7 C3644.64,2296.55 3622.66,2314.2 3598.5,2327 C3433.51,2414.38 2933.29,2316.3 2760.5,2387 C2701,2411.35 2646.1,2459.12 2607.08,2499.4 " fill="none" id="ClassicOverWorldGenerator&lt;-LightForest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3673.4,2267.12,3666.365,2268.7041,3665.1215,2275.8071,3672.1565,2274.2231,3673.4,2267.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[920e5a891c26de110a38b8ebc67c729a]
reverse link ClassicOverWorldGenerator to NoiseGenerator--><path d="M3662.39,2276.58 C3643.17,2296.15 3621.81,2313.77 3598.5,2327 C3419.98,2428.37 3325.8,2298.63 3140.5,2387 C3096.56,2407.96 3056.16,2442.93 3024.01,2476.54 " fill="none" id="ClassicOverWorldGenerator&lt;-NoiseGenerator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3671.35,2267.14,3664.3175,2268.735,3663.085,2275.84,3670.1175,2274.245,3671.35,2267.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[085362430a43fba4165242821ab9a30f]
reverse link ClassicOverWorldGenerator to OceanBiome--><path d="M3641.51,2277.12 C3627.28,2294.23 3612.79,2311.11 3598.5,2327 C3543.78,2387.84 3477.18,2452.44 3427.08,2499.35 " fill="none" id="ClassicOverWorldGenerator&lt;-OceanBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3649.85,2267.03,3642.9433,2269.1029,3642.2003,2276.2756,3649.107,2274.2027,3649.85,2267.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f6822f1f305d95b6501afde86f3357f3]
reverse link ClassicOverWorldGenerator to TemperateForestBiome--><path d="M3776.5,2280.32 C3776.5,2356.94 3776.5,2441.85 3776.5,2499.32 " fill="none" id="ClassicOverWorldGenerator&lt;-TemperateForestBiome" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3776.5,2267.11,3772.5,2273.11,3776.5,2279.11,3780.5,2273.11,3776.5,2267.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[73b3c8ee62cc229e9044d45f24a50732]
reverse link Entity to AABB--><path d="M2170.16,835.57 C2208.27,977.89 2288.24,1248.11 2361.5,1313 C2784.9,1688.01 3045.17,1494.22 3597.5,1616 C3732.84,1645.84 3785.25,1603.72 3903.5,1676 C4246.71,1885.78 4285.76,2026.15 4463.5,2387 C4537.04,2536.3 4507.95,2590.5 4555.5,2750 C4619.36,2964.21 4709.49,3213.03 4753.02,3330.47 " fill="none" id="Entity&lt;-AABB" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2166.71,822.63,2164.3881,829.4571,2169.797,834.2261,2172.1189,827.3991,2166.71,822.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3880dc6c50f33548c4caa07b2d282a05]
reverse link FloraRenderer to FloraShader--><path d="M4470.6,3745.43 C4502.95,3800.14 4548.82,3877.71 4579.1,3928.91 " fill="none" id="FloraRenderer&lt;-FloraShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4463.91,3734.12,4463.5236,3741.3207,4470.0219,3744.4469,4470.4082,3737.2462,4463.91,3734.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0034d0cd507e227aad92aa2a999ecba6]
reverse link FloraRenderer to RenderInfo--><path d="M4421.48,3747.19 C4409.57,3842.49 4402.88,4018.78 4492.5,4127 C4553.35,4200.49 4666.89,4223.09 4740.28,4229.87 " fill="none" id="FloraRenderer&lt;-RenderInfo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4423.22,3734.01,4418.4637,3739.4301,4421.6375,3745.9052,4426.3938,3740.4851,4423.22,3734.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[96935b35c8f2210d7710812536df50ad]
reverse link ItemStack to Material--><path d="M1545.33,2655.3 C1571.3,2685.49 1600.94,2719.48 1628.5,2750 C1659.41,2784.24 1693.02,2820.49 1725.22,2854.79 " fill="none" id="ItemStack&lt;-Material" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1536.67,2645.22,1537.542,2652.3782,1544.4849,2654.3264,1543.6129,2647.1682,1536.67,2645.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6841ae062ec7393e5c33c1f977a8ba2]
reverse link Material to Material--><path d="M2086.4,2961.53 C2101.06,2973.5 2110,2991 2110,3014 C2110,3042.31 2096.46,3062.28 2075.37,3073.89 " fill="none" id="Material&lt;-Material" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2075.37,2954.11,2078.1151,2960.7782,2085.3261,2960.8089,2082.581,2954.1408,2075.37,2954.11" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="14" x="2082.7685" y="2948.5678">11</text><!--MD5=[e761422dee6b2bd85c6cc69427cff8a3]
reverse link Model to RenderInfo--><path d="M6026.12,4103.46 C6006.14,4112.58 5985.74,4120.68 5965.5,4127 C5760.51,4191.02 5095.63,4221.57 4878.67,4230 " fill="none" id="Model&lt;-RenderInfo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6038.17,4097.82,6031.0387,4096.7501,6027.3083,4102.9213,6034.4396,4103.9912,6038.17,4097.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[96ab2b417b420e1b12bfd131103ff8c1]
reverse link NoiseGenerator to NoiseParameters--><path d="M2950.5,2673.13 C2950.5,2759.86 2950.5,2880.63 2950.5,2952.41 " fill="none" id="NoiseGenerator&lt;-NoiseParameters" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2950.5,2660.05,2946.5,2666.05,2950.5,2672.05,2954.5,2666.05,2950.5,2660.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c224817cdd781f383c783ecab80c297b]
reverse link Player to ItemStack--><path d="M1940.98,2193.84 C1841.33,2243.54 1723.17,2310.37 1628.5,2387 C1591.16,2417.23 1555.62,2457.12 1527.93,2491.72 " fill="none" id="Player&lt;-ItemStack" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1952.72,2188.01,1945.5668,2187.098,1941.9737,2193.3502,1949.1269,2194.2622,1952.72,2188.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b704e4d31a0ca7894af6206eeb56dd19]
reverse link Player to ToggleKey--><path d="M1943.38,2285.32 C1910.96,2317.96 1878.82,2352.56 1850.5,2387 C1817.5,2427.14 1786.02,2477.13 1764.2,2514.32 " fill="none" id="Player&lt;-ToggleKey" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1952.99,2275.71,1945.92,2277.1297,1944.5113,2284.2019,1951.5813,2282.7822,1952.99,2275.71" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="7" x="1938.2552" y="2279.1425">9</text><!--MD5=[ba37ac097bc8d83e3d26de61597418e0]
reverse link PlayerDigEvent to Player--><path d="M2958.01,1818.33 C2777.54,1880.93 2518.51,1970.79 2342.19,2031.96 " fill="none" id="PlayerDigEvent&lt;-Player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2970.33,1814.05,2963.3485,1812.2447,2958.9969,1817.9948,2965.9784,1819.8001,2970.33,1814.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2167cebf71385e333dfa38c830ec5e45]
reverse link RenderMaster to ChunkRenderer--><path d="M4197.67,3496.3 C4185.55,3539.58 4171.68,3589.09 4161.44,3625.64 " fill="none" id="RenderMaster&lt;-ChunkRenderer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4201.2,3483.68,4195.7268,3488.3751,4197.9556,3495.2331,4203.4289,3490.538,4201.2,3483.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[169cb5781445421ca2460e59f2d70754]
reverse link RenderMaster to FloraRenderer--><path d="M4294.6,3494.35 C4327.26,3538.09 4364.94,3588.54 4392.65,3625.64 " fill="none" id="RenderMaster&lt;-FloraRenderer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4286.63,3483.68,4287.0189,3490.8806,4293.8152,3493.2911,4293.4263,3486.0905,4286.63,3483.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f68383d6f2ac9f6dc91e3321d4751a5c]
reverse link RenderMaster to SkyboxRenderer--><path d="M4352.82,3489.91 C4376.4,3502.54 4401.49,3513.69 4426.5,3521 C4841.13,3642.19 5947.56,3488.39 6369.5,3581 C6410.35,3589.97 6453.05,3605.99 6490.46,3622.51 " fill="none" id="RenderMaster&lt;-SkyboxRenderer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4341.37,3483.61,4344.6956,3490.0085,4351.881,3489.3996,4348.5554,3483.0011,4341.37,3483.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba8194d152da87967c470ff26a1bfb45]
reverse link RenderMaster to WaterRenderer--><path d="M4355.97,3489.9 C4378.7,3502.11 4402.7,3513.13 4426.5,3521 C4678.01,3604.17 4770.73,3489.96 5019.5,3581 C5047.91,3591.4 5076.05,3608.73 5099.75,3625.96 " fill="none" id="RenderMaster&lt;-WaterRenderer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4344.56,3483.61,4347.8856,3490.0085,4355.071,3489.3996,4351.7454,3483.0011,4344.56,3483.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c076ac75d1f20e517dc7e83e609648a4]
reverse link SkyboxRenderer to CubeTexture--><path d="M6679.84,3750.22 C6736.17,3799.37 6811.45,3865.04 6867.48,3913.93 " fill="none" id="SkyboxRenderer&lt;-CubeTexture" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6669.9,3741.55,6671.7894,3748.5092,6678.9399,3749.4418,6677.0505,3742.4826,6669.9,3741.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[960d4d77fc0c519e1fad504f2b01bf87]
reverse link SkyboxRenderer to Model--><path d="M6513.26,3749.74 C6479.1,3776.66 6438.57,3808.59 6398.67,3840.03 " fill="none" id="SkyboxRenderer&lt;-Model" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6523.66,3741.55,6516.4714,3742.1192,6514.232,3748.9738,6521.4206,3748.4046,6523.66,3741.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6587c8fde51b1bf95d065a6021d3c017]
reverse link SkyboxRenderer to SkyboxShader--><path d="M6600.5,3754.84 C6600.5,3803.43 6600.5,3866.56 6600.5,3913.93 " fill="none" id="SkyboxRenderer&lt;-SkyboxShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6600.5,3741.55,6596.5,3747.55,6600.5,3753.55,6604.5,3747.55,6600.5,3741.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[088aaa5d7df12f79a6891a8f83955230]
reverse link StatePlay to FPSCounter--><path d="M2515.41,858.22 C2510.84,904.08 2505.56,956.98 2501.04,1002.26 " fill="none" id="StatePlay&lt;-FPSCounter" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2516.71,845.17,2512.1304,850.7402,2515.5107,857.1099,2520.0903,851.5397,2516.71,845.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9c2e90cee154c2541299b4b8013252d8]
reverse link StatePlay to Keyboard--><path d="M2603.35,855.8 C2645.62,915.63 2696.74,988.01 2733.36,1039.85 " fill="none" id="StatePlay&lt;-Keyboard" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2595.84,845.17,2596.0357,852.3784,2602.7649,854.9703,2602.5692,847.7619,2595.84,845.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c46a69087fbe1e908fcd15ac37bc2128]
reverse link StatePlay to Player--><path d="M2396.16,855.29 C2382.89,870.82 2370.88,887.51 2361.5,905 C2273.55,1069.03 2205.06,1575.65 2171.07,1873.81 " fill="none" id="StatePlay&lt;-Player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2405.04,845.25,2398.0677,847.0904,2397.0848,854.2342,2404.0571,852.3938,2405.04,845.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6ba245be006d6d788d016bb42f8a2f78]
reverse link StatePlay to World--><path d="M2682.88,774.15 C3057.1,839.13 4003.43,1003.46 4412.36,1074.46 " fill="none" id="StatePlay&lt;-World" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2669.81,771.88,2675.0404,776.8442,2681.6344,773.9255,2676.404,768.9613,2669.81,771.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0079912ea6c6f013525413bc3644ab62]
reverse link StructureBuilder::Block to BlockId--><path d="M6641.39,3088.91 C6643.48,3142.36 6646.35,3215.77 6648.77,3277.68 " fill="none" id="StructureBuilder::Block&lt;-BlockId" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6640.88,3075.77,6637.1138,3081.9195,6641.3417,3087.7611,6645.1079,3081.6117,6640.88,3075.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c5cf713cc024e13ab6b007894227f6f6]
reverse link ViewFrustum to Plane--><path d="M1771.5,805.97 C1771.5,877.7 1771.5,997.27 1771.5,1062.37 " fill="none" id="ViewFrustum&lt;-Plane" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1771.5,792.72,1767.5,798.72,1771.5,804.72,1775.5,798.72,1771.5,792.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c2ced4f4918ce0b99d4b8a3278e02361]
reverse link WaterRenderer to RenderInfo--><path d="M5155.39,3747.37 C5142.15,3841.77 5105.79,4015.68 5010.5,4127 C4975.9,4167.42 4921.9,4194.55 4878.58,4211.16 " fill="none" id="WaterRenderer&lt;-RenderInfo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5157.15,3734.32,5152.3878,3739.7349,5155.5545,3746.2135,5160.3168,3740.7986,5157.15,3734.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a4b242dcb92b347e5c33bbac7bde0042]
reverse link WaterRenderer to WaterShader--><path d="M5105.93,3744.06 C5056.8,3798.84 4986.44,3877.28 4940.13,3928.91 " fill="none" id="WaterRenderer&lt;-WaterShader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5114.85,3734.12,5107.8662,3735.9164,5106.8385,3743.0539,5113.8222,3741.2575,5114.85,3734.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e96d067ca0710218d8295ed953b9f5a]
reverse link World to IWorldEvent--><path d="M4400.32,1196.28 C4201.76,1279.77 3911.12,1401.99 3772.59,1460.24 " fill="none" id="World&lt;-IWorldEvent" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4412.37,1191.21,4405.2883,1189.8499,4401.3091,1195.8637,4408.3908,1197.2238,4412.37,1191.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1b07213cf6b99fa538d2a299eac8aa6e]
reverse link ChunkSection to ChunkSection::Layer--><path d="M5101.5,3233.34 C5101.5,3278.59 5101.5,3321.82 5101.5,3352.7 " fill="none" id="ChunkSection&lt;-ChunkSection::Layer" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5101.5" cy="3226.26" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5101.5" x2="5101.5" y1="3234.26" y2="3218.26"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5093.5" x2="5109.5" y1="3226.26" y2="3226.26"/><!--MD5=[a8ee371aaa36d9055f7eac78e4a5363b]
reverse link Material to Material::ID--><path d="M2090.17,3069.27 C2289.96,3117.49 2597.36,3185.26 2868.5,3218 C3040.49,3238.77 4279.18,3186.85 4426.5,3278 C4433.19,3282.14 4439.26,3287.22 4444.74,3292.92 " fill="none" id="Material&lt;-Material::ID" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2083.1553" cy="3067.5728" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2090.9306" x2="2075.38" y1="3069.4557" y2="3065.69"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2081.2724" x2="2085.0381" y1="3075.3481" y2="3059.7976"/><!--MD5=[bfd372f506c27b3ba41ad8dccd4b9150]
reverse link StructureBuilder to StructureBuilder::Block--><path d="M6632.94,2660.47 C6634.31,2747.65 6636.35,2876.81 6637.54,2952.19 " fill="none" id="StructureBuilder&lt;-StructureBuilder::Block" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6632.8295" cy="2653.239" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6632.959" x2="6632.7" y1="2661.2379" y2="2645.24"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6624.8306" x2="6640.8285" y1="2653.3685" y2="2653.1094"/><!--MD5=[40e6bcb2381535a178537482bc392f96]
link Controller to Random--><!--MD5=[1e8b44ff5c70e86206bcd41b1c44c649]
link Controller to Ray--><!--MD5=[141ce4946652cac4c6270c2c0bae137a]
link std.hashMaterial::ID to std.hashVectorXZ--><!--MD5=[30142833d5657cee32c703a57e08e37e]
link std.hashMaterial::ID to std.hashsf::Vector3i--><!--MD5=[5151eb736dd136854599c6456c376a09]
@startuml






class Application {
	+Application(const Config& config)
	-m_camera : Camera
	+getCamera() : Camera&
	-m_context : Context
	-m_masterRenderer : RenderMaster
	-m_isPopState : bool
	-m_config : const Config&
	+getWindow() : sf::Window& {query}
	-m_states : std::vector<std::unique_ptr<StateBase>>
	-handleEvents() : void
	+popState() : void
	+pushState(Args&& ... args) : void
	+runLoop() : void
	+turnOffMouse() : void
	+turnOnMouse() : void
}


class Array2D <template<typename T, int WIDTH>> {
	+get(int x, int z) : T&
	+get(int x, int z) : T& {query}
	+getMaxValue() : T&
	-m_array : array<T, WIDTH* WIDTH>
	+setAll(T val) : void
}


class BasicShader {
	+BasicShader(const std::string& vertexFile, const std::string& fragmentFile)
	-m_locationModelMatrix : GLuint
	-m_locationProjectionViewMatrix : GLuint
	#getUniforms() : void
	+loadModelMatrix(const glm::mat4& matrix) : void
	+loadProjectionViewMatrix(const glm::mat4& pvMatrix) : void
}


class BasicTexture {
	+BasicTexture()
	+BasicTexture(const std::string& file)
	+~BasicTexture()
	-m_id : GLuint
	+bindTexture() : void {query}
	+loadFromFile(const std::string& file) : void
	+loadFromImage(const sf::Image& image) : void
}


class BlockData {
	+BlockData(const std::string& fileName)
	-m_data : BlockDataHolder
	+getBlockData() : BlockDataHolder& {query}
}


class BlockDatabase {
	-BlockDatabase()
	+getData(BlockId id) : BlockData& {query}
	+{static} get() : BlockDatabase&
	+getBlock(BlockId id) : BlockType& {query}
	+textureAtlas : TextureAtlas
	-,(unsigned) : std::array<std::unique_ptr<BlockType>
}


class BlockType {
	+BlockType(const std::string& fileName)
	+~BlockType()
	-m_data : BlockData
	+getData() : BlockData& {query}
}


class Camera {
	+Camera(const Config& config)
	-m_config : Config
	-m_frustum : ViewFrustum
	+getFrustum() : ViewFrustum& {query}
	-m_pEntity : const Entity*
	-m_projViewMatrx : glm::mat4
	-m_projectionMatrix : glm::mat4
	-m_viewMatrix : glm::mat4
	+getProjMatrix() : glm::mat4& {query}
	+getProjectionViewMatrix() : glm::mat4& {query}
	+getViewMatrix() : glm::mat4& {query}
	+hookEntity(const Entity& entity) : void
	+update() : void
}


class Chunk {
	+Chunk()
	+Chunk(World& world, const sf::Vector2i& location)
	-m_highestBlocks : Array2D<int, CHUNK_SIZE>
	+getBlock(int x, int y, int z) : ChunkBlock {query}
	+getSection(int index) : ChunkSection&
	-m_pWorld : World*
	+hasLoaded() : bool {query}
	-m_isLoaded : bool
	+makeMesh(const Camera& camera) : bool
	-outOfBound(int x, int y, int z) : bool {query}
	+getHeightAt(int x, int z) : int
	-m_location : sf::Vector2i
	+getLocation() : sf::Vector2i& {query}
	-m_chunks : std::vector<ChunkSection>
	-addSection() : void
	-addSectionsBlockTarget(int blockY) : void
	-addSectionsIndexTarget(int index) : void
	+deleteMeshes() : void
	+drawChunks(RenderMaster& renderer, const Camera& camera) : void
	+load(TerrainGenerator& generator) : void
	+setBlock(int x, int y, int z, ChunkBlock block) : void
}


class ChunkManager {
	+ChunkManager(World& world)
	+getChunk(int x, int z) : Chunk&
	+getChunks() : ChunkMap&
	+getTerrainGenerator() : TerrainGenerator& {query}
	-m_world : World*
	+chunkExistsAt(int x, int z) : bool {query}
	+chunkLoadedAt(int x, int z) : bool {query}
	+makeMesh(int x, int z, const Camera& camera) : bool
	-m_terrainGenerator : std::unique_ptr<TerrainGenerator>
	-m_chunks : unordered_map<VectorXZ, Chunk>
	+deleteMeshes() : void
	+loadChunk(int x, int z) : void
	+unloadChunk(int x, int z) : void
}


class ChunkMesh {
	+ChunkMesh()
	-m_indexIndex : GLuint
	-m_mesh : Mesh
	-m_model : Model
	+getModel() : Model& {query}
	+faces : int
	-m_light : std::vector<GLfloat>
	+addFace(const std::array<GLfloat, 12>& blockFace, const std::array<GLfloat, 8>& textureCoords, const sf::Vector3i& chunkPosition, const sf::Vector3i& blockPosition, GLfloat cardinalLight) : void
	+bufferMesh() : void
	+deleteData() : void
}


class ChunkMeshBuilder {
	+ChunkMeshBuilder(ChunkSection& chunk, ChunkMeshCollection& meshes)
	-m_pActiveMesh : ChunkMesh*
	-m_pMeshes : ChunkMeshCollection*
	-m_pChunk : ChunkSection*
	-shouldMakeFace(const sf::Vector3i& blockPosition, const BlockDataHolder& blockData) : bool
	-shouldMakeLayer(int y) : bool
	-m_pBlockData : const BlockDataHolder*
	-m_pBlockPtr : const ChunkBlock*
	-addXBlockToMesh(const sf::Vector2i& textureCoords, const sf::Vector3i& blockPosition) : void
	+buildMesh() : void
	-setActiveMesh(ChunkBlock block) : void
	-tryAddFaceToMesh(const std::array<GLfloat, 12>& blockFace, const sf::Vector2i& textureCoords, const sf::Vector3i& blockPosition, const sf::Vector3i& blockFacing, GLfloat cardinalLight) : void
}


class ChunkRenderer {
	-m_shader : ChunkShader
	-m_chunks : std::vector<const RenderInfo*>
	+add(const ChunkMesh& mesh) : void
	+render(const Camera& camera) : void
}


class ChunkSection {
	+ChunkSection(const sf::Vector3i& position, World& world)
	-m_aabb : AABB
	+getBlock(int x, int y, int z) : ChunkBlock {query}
	+begin() : ChunkBlock*
	-m_meshes : ChunkMeshCollection
	+getMeshes() : ChunkMeshCollection& {query}
	+getAdjacent(int dx, int dz) : ChunkSection&
	+getLayer(int y) : Layer& {query}
	-m_pWorld : World*
	+hasBuffered() : bool {query}
	+hasMesh() : bool {query}
	-m_hasBufferedMesh : bool
	-m_hasMesh : bool
	-{static} outOfBounds(int value) : bool
	-{static} getIndex(int x, int y, int z) : int
	+getLocation() : sf::Vector3i {query}
	-m_location : sf::Vector3i
	-toWorldPosition(int x, int y, int z) : sf::Vector3i {query}
	-m_blocks : std::array<ChunkBlock, CHUNK_VOLUME>
	-m_layers : std::array<Layer, CHUNK_SIZE>
	+bufferMesh() : void
	+deleteMeshes() : void
	+makeMesh() : void
	+setBlock(int x, int y, int z, ChunkBlock block) : void
}


class ChunkSection::Layer {
	+isAllSolid() : bool {query}
	-m_solidBlockCount : int
	+update(ChunkBlock c) : void
}


class ChunkShader {
	+ChunkShader()
	-getUniforms() : void
}


class ClassicOverWorldGenerator {
	+ClassicOverWorldGenerator()
	-m_biomeMap : Array2D<int, CHUNK_SIZE + 1>
	-m_heightMap : Array2D<int, CHUNK_SIZE>
	-getBiome(int x, int z) : Biome& {query}
	-m_pChunk : Chunk*
	-m_desertBiome : DesertBiome
	-m_grassBiome : GrasslandBiome
	-m_lightForest : LightForest
	-m_oceanBiome : OceanBiome
	-m_random : Random<std::minstd_rand>
	-m_temperateForest : TemperateForestBiome
	+getMinimumSpawnHeight() : int {query}
	-{static} m_biomeNoiseGen : static NoiseGenerator
	+generateTerrainFor(Chunk& chunk) : void
	-getBiomeMap() : void
	-getHeightIn(int xMin, int zMin, int xMax, int zMax) : void
	-getHeightMap() : void
	-setBlocks(int maxHeight) : void
	-{static} setUpNoise() : void
}


class Controller {
	-translateInput() : glm::vec3
	-mouseInput() : sf::Vector2i
}


class CubeTexture {
	+CubeTexture()
	+CubeTexture(const std::array<std::string, 6>& files)
	+~CubeTexture()
	-m_texId : GLuint
	+bindTexture() : void {query}
	+loadFromFiles(const std::array<std::string, 6>& files) : void
}


class DefaultBlock {
	+DefaultBlock(const std::string& fileName)
}


class DesertBiome {
	+DesertBiome(int seed)
	+getPlant(Rand& rand) : ChunkBlock {query}
	+getTopBlock(Rand& rand) : ChunkBlock {query}
	+getUnderWaterBlock(Rand& rand) : ChunkBlock {query}
	-getNoiseParameters() : NoiseParameters
	+makeTree(Rand& rand, Chunk& chunk, int x, int y, int z) : void {query}
}


class FPSCounter {
	+FPSCounter()
	-debugging : bool
	-enabled : bool
	-m_fps : float
	-m_frameCount : int
	-m_delayTimer : sf::Clock
	-m_fpsTimer : sf::Clock
	-m_font : sf::Font
	-m_text : sf::Text
	+draw(RenderMaster& renderer) : void
	+update() : void
}


class FloraRenderer {
	-m_shader : FloraShader
	-m_chunks : std::vector<const RenderInfo*>
	+add(const ChunkMesh& mesh) : void
	+render(const Camera& camera) : void
}


class FloraShader {
	+FloraShader()
	-m_time : GLuint
	-getUniforms() : void
	+loadTime(const float& time) : void
}


class GrasslandBiome {
	+GrasslandBiome(int seed)
	+getBeachBlock(Rand& rand) : ChunkBlock {query}
	+getPlant(Rand& rand) : ChunkBlock {query}
	+getTopBlock(Rand& rand) : ChunkBlock {query}
	+getUnderWaterBlock(Rand& rand) : ChunkBlock {query}
	-getNoiseParameters() : NoiseParameters
	+makeTree(Rand& rand, Chunk& chunk, int x, int y, int z) : void {query}
}


class ItemStack {
	+ItemStack(const Material& material, int amount)
	+getMaterial() : Material& {query}
	-m_pMaterial : const Material*
	+add(int amount) : int
	+getNumInStack() : int {query}
	-m_numInStack : int
	+remove() : void
}


class Keyboard {
	+Keyboard()
	+isKeyDown(sf::Keyboard::Key key) : bool {query}
	+keyReleased(sf::Keyboard::Key key) : bool {query}
	-m_recentlyReleased : sf::Keyboard::Key
	-m_keys : std::array<bool, sf::Keyboard::KeyCount>
	+update(sf::Event e) : void
}


class LightForest {
	+LightForest(int seed)
	+getPlant(Rand& rand) : ChunkBlock {query}
	+getTopBlock(Rand& rand) : ChunkBlock {query}
	+getUnderWaterBlock(Rand& rand) : ChunkBlock {query}
	-getNoiseParameters() : NoiseParameters
	+makeTree(Rand& rand, Chunk& chunk, int x, int y, int z) : void {query}
}


class Model {
	+Model()
	+Model(const Mesh& mesh)
	+Model(Model&& other)
	+~Model()
	+operator=(Model&& other) : Model&
	-m_renderInfo : RenderInfo
	+getRenderInfo() : RenderInfo& {query}
	+getIndicesCount() : int {query}
	-m_vboCount : int
	-m_buffers : std::vector<GLuint>
	+addData(const Mesh& mesh) : void
	+addEBO(const std::vector<GLuint>& indices) : void
	+addVBO(int dimensions, const std::vector<GLfloat>& data) : void
	+bindVAO() : void {query}
	+deleteData() : void
	+genVAO() : void
}


class NoiseGenerator {
	+NoiseGenerator(int seed)
	-m_noiseParameters : NoiseParameters
	+getHeight(int x, int z, int chunkX, int chunkZ) : double {query}
	-getNoise(int n) : double {query}
	-getNoise(double x, double z) : double {query}
	-lerp(double a, double b, double z) : double {query}
	-noise(double x, double z) : double {query}
	-m_seed : int
	+setParameters(const NoiseParameters& params) : void
}


class NonMovable {
	#NonMovable()
}


class OceanBiome {
	+OceanBiome(int seed)
	+getPlant(Rand& rand) : ChunkBlock {query}
	+getTopBlock(Rand& rand) : ChunkBlock {query}
	+getUnderWaterBlock(Rand& rand) : ChunkBlock {query}
	-getNoiseParameters() : NoiseParameters
	+makeTree(Rand& rand, Chunk& chunk, int x, int y, int z) : void {query}
}


class Player {
	+Player()
	+getHeldItems() : ItemStack&
	-m_flyKey : ToggleKey
	-m_itemDown : ToggleKey
	-m_itemUp : ToggleKey
	-m_num1 : ToggleKey
	-m_num2 : ToggleKey
	-m_num3 : ToggleKey
	-m_num4 : ToggleKey
	-m_num5 : ToggleKey
	-m_slow : ToggleKey
	-m_isFlying : bool
	-m_isOnGround : bool
	-m_isSneak : bool
	-m_acceleration : glm::vec3
	-m_heldItem : int
	-m_posPrint : sf::Text
	-m_items : std::vector<ItemStack>
	-m_itemText : std::vector<sf::Text>
	+addItem(const Material& material) : void
	+collide(World& world, const glm::vec3& vel, float dt) : void
	+draw(RenderMaster& master) : void
	+handleInput(const sf::Window& window, Keyboard& keyboard) : void
	-jump() : void
	-keyboardInput(Keyboard& keyboard) : void
	-mouseInput(const sf::Window& window) : void
	+update(float dt, World& wolrd) : void
}


class PlayerDigEvent {
	+PlayerDigEvent(sf::Mouse::Button button, const glm::vec3& location, Player& player)
	-m_pPlayer : Player*
	-m_digSpot : glm::vec3
	-m_buttonPress : sf::Mouse::Button
	-dig(World& world) : void
	+handle(World& world) : void
}


class Random <template<typename REngine=std::mt19937>> {
	+Random(int n)
	-m_randomEngine : REngine
	+intInRange(T low, T high) : T
	+setSeed(int seed) : void
}


class RandomSingleton {
	-RandomSingleton()
	+{static} get() : RandomSingleton&
	+intInRange(T low, T high) : T
	-m_randomEngine : std::mt19937
}


class Ray {
	+Ray(const glm::vec3& position, const glm::vec3& direction)
	+getLength() : float {query}
	-m_direction : glm::vec3
	-m_rayEnd : glm::vec3
	-m_rayStart : glm::vec3
	+getEnd() : glm::vec3& {query}
	+step(float scale) : void
}


class RenderMaster {
	-m_chunkRenderer : ChunkRenderer
	-m_floraRenderer : FloraRenderer
	-m_skyboxRenderer : SkyboxRenderer
	-m_waterRenderer : WaterRenderer
	-m_drawBox : bool
	+drawChunk(const ChunkSection& chunk) : void
	+drawSky() : void
	+finishRender(sf::Window& window, const Camera& camera) : void
}


abstract class Shader {
	+Shader(const std::string& vertexFile, const std::string& fragmentFile)
	+~Shader()
	#m_id : GLuint
	#{abstract} getUniforms() : void
	+loadFloat(GLuint location, float value) : void
	+loadInt(GLuint location, int value) : void
	+loadMatrix4(GLuint location, const glm::mat4& matrix) : void
	+loadVector2(GLuint location, const glm::vec2& vect) : void
	+loadVector3(GLuint location, const glm::vec3& vect) : void
	+loadVector4(GLuint location, const glm::vec4& vect) : void
	+useProgram() : void {query}
}


class Singleton {
}


class SkyboxRenderer {
	+SkyboxRenderer()
	-m_cubeTexture : CubeTexture
	-m_skyCube : Model
	-m_shader : SkyboxShader
	+render(const Camera& camera) : void
}


class SkyboxShader {
	+SkyboxShader()
	-m_locationProjection : GLuint
	-m_locationView : GLuint
	-getUniforms() : void
	+loadProjectionMatrix(const glm::mat4& proj) : void
	+loadViewMatrix(glm::mat4 viewMatrix) : void
}


abstract class StateBase {
	+StateBase(Application& app)
	+~StateBase()
	#m_pApplication : Application*
	+{abstract} handleEvent(sf::Event e) : void
	+{abstract} handleInput() : void
	+{abstract} onOpen() : void
	+{abstract} render(RenderMaster& renderer) : void
	+{abstract} update(float deltaTime) : void
}


class StatePlay {
	+StatePlay(Application& app, const Config& config)
	-m_fpsCounter : FPSCounter
	-m_keyboard : Keyboard
	-m_player : Player
	-m_world : World
	+handleEvent(sf::Event e) : void
	+handleInput() : void
	+onOpen() : void
	+render(RenderMaster& renderer) : void
	+update(float deltaTime) : void
}


class StructureBuilder {
	-m_blocks : std::vector<Block>
	+addBlock(int x, int y, int z, BlockId block) : void
	+build(Chunk& chunk) : void
	+fill(int y, int xStart, int xEnd, int zStart, int zEnd, BlockId block) : void
	+makeColumn(int x, int z, int yStart, int height, BlockId block) : void
	+makeRowX(int xStart, int xEnd, int y, int z, BlockId block) : void
	+makeRowZ(int zStart, int zEnd, int x, int y, BlockId block) : void
}


class SuperFlatGenerator {
	+getMinimumSpawnHeight() : int {query}
	+generateTerrainFor(Chunk& chunk) : void
}


class TemperateForestBiome {
	+TemperateForestBiome(int seed)
	+getPlant(Rand& rand) : ChunkBlock {query}
	+getTopBlock(Rand& rand) : ChunkBlock {query}
	+getUnderWaterBlock(Rand& rand) : ChunkBlock {query}
	-getNoiseParameters() : NoiseParameters
	+makeTree(Rand& rand, Chunk& chunk, int x, int y, int z) : void {query}
}


abstract class TerrainGenerator {
	+~TerrainGenerator()
	+{abstract} getMinimumSpawnHeight() : int {query}
	+{abstract} generateTerrainFor(Chunk& chunk) : void
}


class TextureAtlas {
	+TextureAtlas(const std::string& textureFileName)
	-m_imageSize : int
	-m_individualTextureSize : int
	+getTexture(const sf::Vector2i& coords) : std::array<GLfloat , 8>
}


class ToggleKey {
	+ToggleKey(sf::Keyboard::Key)
	+isKeyPressed() : bool
	-m_delayTimer : sf::Clock
	-m_key : sf::Keyboard::Key
}


class ViewFrustum {
	+isBoxInFrustum(const AABB& box) : bool {query}
	-m_planes : std::array<Plane, 6>
	+update(const glm::mat4& projViewMatrix) : void
}


class WaterRenderer {
	-m_shader : WaterShader
	-m_chunks : std::vector<const RenderInfo*>
	+add(const ChunkMesh& mesh) : void
	+render(const Camera& camera) : void
}


class WaterShader {
	+WaterShader()
	-m_time : GLuint
	-getUniforms() : void
	+loadTime(const float& time) : void
}


class World {
	+World(const Camera& camera, const Config& config, Player& player)
	+~World()
	+getBlock(int x, int y, int z) : ChunkBlock
	-m_chunkManager : ChunkManager
	+getChunkManager() : ChunkManager&
	+{static} getBlockXZ(int x, int z) : VectorXZ
	+{static} getChunkXZ(int x, int z) : VectorXZ
	-m_renderDistance : const int
	-m_playerSpawnPoint : glm::vec3
	-m_loadDistance : int
	-m_isRunning : std::atomic<bool>
	-m_genMutex : std::mutex
	-m_mainMutex : std::mutex
	-m_chunkUpdates : std::unordered_map<sf::Vector3i, ChunkSection*>
	-m_chunkLoadThreads : std::vector<std::thread>
	-m_events : std::vector<std::unique_ptr<IWorldEvent>>
	+addEvent(Args&& ... args) : void
	-loadChunks(const Camera& camera) : void
	+renderWorld(RenderMaster& master, const Camera& camera) : void
	+setBlock(int x, int y, int z, ChunkBlock block) : void
	-setSpawnPoint() : void
	+update(const Camera& camera) : void
	+updateChunk(int blockX, int blockY, int blockZ) : void
	-updateChunks() : void
}


enum BlockId {
	Air
	Cactus
	DeadShrub
	Dirt
	Grass
	NUM_TYPES
	OakBark
	OakLeaf
	Rose
	Sand
	Stone
	TallGrass
	Water
}


enum BlockMeshType {
	Cube
	X
}


enum BlockShaderType {
	Chunk
	Flora
	Liquid
}


enum Material::ID {
	Cactus
	DeadShrub
	Dirt
	Grass
	Nothing
	OakBark
	OakLeaf
	Rose
	Sand
	Stone
	TallGrass
}


class AABB {
	+AABB(const glm::vec3& dim)
	+dimensions : const glm::vec3
	+getVN(const glm::vec3& normal) : glm::vec3 {query}
	+getVP(const glm::vec3& normal) : glm::vec3 {query}
	+position : glm::vec3
	+update(const glm::vec3& location) : void
}


abstract class Biome {
	+Biome(const NoiseParameters& parameters, int treeFreq, int plantFreq, int seed)
	+~Biome()
	+getBeachBlock(Random<std::minstd_rand> rand) : ChunkBlock {query}
	+{abstract} getPlant(Random<std::minstd_rand> rand) : ChunkBlock {query}
	+{abstract} getTopBlock(Random<std::minstd_rand> rand) : ChunkBlock {query}
	+{abstract} getUnderWaterBlock(Random<std::minstd_rand> rand) : ChunkBlock {query}
	-m_heightGenerator : NoiseGenerator
	#{abstract} getNoiseParameters() : NoiseParameters
	+getHeight(int x, int z, int chunkX, int chunkZ) : int {query}
	+getPlantFrequency() : int {query}
	+getTreeFrequency() : int {query}
	-m_plantFreq : int
	-m_treeFreq : int
	+{abstract} makeTree(Random<std::minstd_rand> rand, Chunk& chunk, int x, int y, int z) : void {query}
}


class BlockDataHolder {
	+id : BlockId
	+meshType : BlockMeshType
	+shaderType : BlockShaderType
	+isCollidable : bool
	+isOpaque : bool
	+texBottomCoord : sf::Vector2i
	+texSideCoord : sf::Vector2i
	+texTopCoord : sf::Vector2i
}


class ChunkBlock {
	+ChunkBlock()
	+ChunkBlock(Block_t id)
	+ChunkBlock(BlockId id)
	+getData() : BlockDataHolder& {query}
	+getType() : BlockType& {query}
	+id : Block_t
	+operator!=(ChunkBlock other) : bool {query}
	+operator==(ChunkBlock other) : bool {query}
}


class ChunkMeshCollection {
	+floraMesh : ChunkMesh
	+solidMesh : ChunkMesh
	+waterMesh : ChunkMesh
}


class Config {
	+isFullscreen : bool
	+fov : int
	+renderDistance : int
	+windowX : int
	+windowY : int
}


class Context {
	+Context(const Config& config)
	+window : sf::Window
}


class Entity {
	+Entity()
	+Entity(const glm::vec3& pos, const glm::vec3& rot)
	+Entity(const glm::vec3& pos, const glm::vec3& rot, const glm::vec3& box)
	+box : AABB
	+position : glm::vec3
	+rotation : glm::vec3
	+velocity : glm::vec3
}


abstract class IChunk {
	+~IChunk()
	+{abstract} getBlock(int x, int y, int z) : ChunkBlock {query}
	+{abstract} setBlock(int x, int y, int z, ChunkBlock block) : void
}


abstract class IWorldEvent {
	+~IWorldEvent()
	+{abstract} handle(World& world) : void
}


class Material {
	+Material(Material::ID id, int maxStack, bool isBlock, std::string&& name)
	+toBlockID() : BlockId {query}
	+{static} toMaterial(BlockId id) : Material&
	+id : const Material::ID
	+isBlock : const bool
	+maxStackSize : const int
	+{static} CACTUS_BLOCK : const static Material
	+{static} DEAD_SHRUB : const static Material
	+{static} DIRT_BLOCK : const static Material
	+{static} GRASS_BLOCK : const static Material
	+{static} NOTHING : const static Material
	+{static} OAK_BARK_BLOCK : const static Material
	+{static} OAK_LEAF_BLOCK : const static Material
	+{static} ROSE : const static Material
	+{static} SAND_BLOCK : const static Material
	+{static} STONE_BLOCK : const static Material
	+{static} TALL_GRASS : const static Material
	+name : const std::string
}


class Mesh {
	+textureCoords : std::vector<GLfloat>
	+vertexPositions : std::vector<GLfloat>
	+indices : std::vector<GLuint>
}


class NoiseParameters {
	+roughness : double
	+amplitude : int
	+heightOffset : int
	+octaves : int
	+smoothness : int
}


class NonCopyable {
	+NonCopyable()
}


class Plane {
	+distanceToOrigin : float
	+distanceToPoint(const glm::vec3& point) : float {query}
	+normal : glm::vec3
}


class RenderInfo {
	+indicesCount : GLuint
	+vao : GLuint
	+reset() : void
}


class StructureBuilder::Block {
	+Block(BlockId id, int x, int y, int z)
	+id : BlockId
	+x : int
	+y : int
	+z : int
}


class VectorXZ {
	+x : int
	+z : int
}


namespace std {
	class hashMaterial::ID <template<>> {
		+operator()(const Material::ID& id) : size_t {query}
	}

	class hashVectorXZ <template<>> {
		+operator()(const VectorXZ& vect) : size_t {query}
	}

	class hashsf::Vector3i <template<>> {
		+operator()(const sf::Vector3i& vect) : size_t {query}
	}
}


namespace GL {
	namespace Enum {
		enum Texture {
			Tex2D
			TexCubeMap
		}
	}
}






BasicShader <|- - ChunkShader


BasicShader <|- - FloraShader


BasicShader <|- - WaterShader


BasicTexture <|- - TextureAtlas


Biome <|- - DesertBiome


Biome <|- - GrasslandBiome


Biome <|- - LightForest


Biome <|- - OceanBiome


Biome <|- - TemperateForestBiome


BlockType <|- - DefaultBlock


Entity <|- - Camera


Entity <|- - Player


IChunk <|- - Chunk


IChunk <|- - ChunkSection


IWorldEvent <|- - PlayerDigEvent


NonCopyable <|- - BasicTexture


NonCopyable <|- - BlockData


NonCopyable <|- - BlockDataHolder


NonCopyable <|- - BlockType


NonCopyable <|- - CubeTexture


NonCopyable <|- - Material


NonCopyable <|- - Model


NonCopyable <|- - Shader


NonCopyable <|- - Singleton


NonCopyable <|- - World


NonMovable <|- - Singleton


Shader <|- - BasicShader


Shader <|- - SkyboxShader


Singleton <|- - BlockDatabase


Singleton <|- - RandomSingleton


StateBase <|- - StatePlay


TerrainGenerator <|- - ClassicOverWorldGenerator


TerrainGenerator <|- - SuperFlatGenerator






Application *- - Camera


Application *- - Config


Application *- - Context


Application *- - RenderMaster


Application o- - StateBase


Biome *- - NoiseGenerator


BlockData *- - BlockDataHolder


BlockDataHolder *- - BlockId


BlockDataHolder *- - BlockMeshType


BlockDataHolder *- - BlockShaderType


BlockDatabase *- - TextureAtlas


BlockType *- - BlockData


Camera *- - Config


Camera o- - Entity


Camera *- - ViewFrustum


Chunk *- - Array2D


Chunk *- - ChunkSection


Chunk o- - World


ChunkManager o- - TerrainGenerator


ChunkManager *- - VectorXZ


ChunkManager o- - World


ChunkMesh *- - Mesh


ChunkMesh *- - Model


ChunkMeshBuilder o- - BlockDataHolder


ChunkMeshBuilder o- - ChunkBlock


ChunkMeshBuilder o- - ChunkMesh


ChunkMeshBuilder o- - ChunkMeshCollection


ChunkMeshBuilder o- - ChunkSection


ChunkMeshCollection "3" *- - ChunkMesh


ChunkRenderer *- - ChunkShader


ChunkRenderer o- - RenderInfo


ChunkSection *- - AABB


ChunkSection *- - ChunkBlock


ChunkSection *- - ChunkMeshCollection


ChunkSection o- - World


ClassicOverWorldGenerator "2" *- - Array2D


ClassicOverWorldGenerator o- - Chunk


ClassicOverWorldGenerator *- - DesertBiome


ClassicOverWorldGenerator *- - GrasslandBiome


ClassicOverWorldGenerator *- - LightForest


ClassicOverWorldGenerator *- - NoiseGenerator


ClassicOverWorldGenerator *- - OceanBiome


ClassicOverWorldGenerator *- - TemperateForestBiome


Entity *- - AABB


FloraRenderer *- - FloraShader


FloraRenderer o- - RenderInfo


ItemStack o- - Material


Material "11" *- - Material


Model *- - RenderInfo


NoiseGenerator *- - NoiseParameters


Player *- - ItemStack


Player "9" *- - ToggleKey


PlayerDigEvent o- - Player


RenderMaster *- - ChunkRenderer


RenderMaster *- - FloraRenderer


RenderMaster *- - SkyboxRenderer


RenderMaster *- - WaterRenderer


SkyboxRenderer *- - CubeTexture


SkyboxRenderer *- - Model


SkyboxRenderer *- - SkyboxShader


StateBase o- - Application


StatePlay *- - FPSCounter


StatePlay *- - Keyboard


StatePlay *- - Player


StatePlay *- - World


StructureBuilder::Block *- - BlockId


ViewFrustum *- - Plane


WaterRenderer o- - RenderInfo


WaterRenderer *- - WaterShader


World *- - ChunkManager


World o- - ChunkSection


World o- - IWorldEvent







ChunkSection +- - ChunkSection::Layer


Material +- - Material::ID


StructureBuilder +- - StructureBuilder::Block




@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 21.0.7+6-Ubuntu-0ubuntu124.04
Operating System: Linux
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>